<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kecho&#39;s Blog</title>
  
  
  <link href="https://kechocy.github.io/atom.xml" rel="self"/>
  
  <link href="https://kechocy.github.io/"/>
  <updated>2025-07-18T03:29:22.000Z</updated>
  <id>https://kechocy.github.io/</id>
  
  <author>
    <name>kecho</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>KeepassDx 的魔法键盘适配小米手机键盘全面屏优化</title>
    <link href="https://kechocy.github.io/posts/ca3e9532.html"/>
    <id>https://kechocy.github.io/posts/ca3e9532.html</id>
    <published>2025-07-18T03:29:22.000Z</published>
    <updated>2025-07-18T03:29:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将通过修改包名的方式使 KeepassDx 的魔法键盘适配小米手机键盘全面屏优化</p><span id="more"></span><hr><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>密码管理工具 KeepassDX 填充密码时可以使用魔法键盘填充，防止密码被第三方输入法读取，但是切换输入法需要去设置应用手动切换，十分麻烦。</p><p>小米手机在 “设置 -&gt; 更多设置 -&gt; 语言与输入法” 中打开 “全面屏键盘优化” 能够实现快捷切换输入法，但是目前只支持三个小米版输入法，分别是百度输入法小米版、搜狗输入法小米版、讯飞输入法小米版。</p><p>有人对其实现的原理进行了<a class="link"   href="https://gitee.com/xixilala-2019/ime-of-xiaomi-optimization" >分析<i class="fas fa-external-link-alt"></i></a>，发现是系统是根据包名来判断的，那我们可以把包名修改成其中之一，也就能够实现快捷切换了。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1.电脑新建文件夹 demo，下载 <a class="link"   href="https://ibotpeaches.github.io/Apktool/" >反编译工具 apktool<i class="fas fa-external-link-alt"></i></a> 到其中并重命名为 <code>apktool.apk</code>，<a class="link"   href="https://github.com/Kunzisoft/KeePassDX/releases" >下载 KeePassDX 安装包<i class="fas fa-external-link-alt"></i></a> 到其中并重命名为 <code>KeePassDX.apk</code>，下载 <a class="link"   href="https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/windows/apktool.bat" >脚本文件<i class="fas fa-external-link-alt"></i></a> 到其中并重命名为 <code>apktool.bat</code>，然后双击脚本文件。</p><p>2.进入 demo 目录下执行命令：<code>apktool d KeePassDX.apk</code> 进行解包。</p><p>3.打开 <code>KeePassDX</code> 目录中的 <code>AndroidManifest.xml</code> 文件，将第一行中 <code>package=&quot;com.kunzisoft.keepass.libre&quot;</code> 改为 <code>package=&quot;com.iflytek.inputmethod.miui&quot;</code>。</p><blockquote><p>包名在 <code>com.iflytek.inputmethod.miui，com.sohu.inputmethod.sogou.xiaomi，com.baidu.input_mi</code> 三个中选一个，不要和正常在用的键盘包名重复</p></blockquote><p>4.执行命令：<code>apktool b &quot;KeePassDX&quot; -o KeePassDX-new.apk</code> 将文件重新打包。</p><p>5.手机下载并安装 <a class="link"   href="https://mt2.cn/" >MT 管理器<i class="fas fa-external-link-alt"></i></a></p><p>6.将 <code>KeePassDX-new.apk</code> 发送到手机，打开 MT 管理器，长按文件选择 “签名”。</p><p>7.安装签名后的文件。</p><p>安装完成后，去系统设置里面启用魔法键盘，之后就能快速切换键盘实现填充密码了。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a class="link"   href="https://www.cnblogs.com/sandianyiyuan/p/16984848.html" >KeepassDx的魔法键盘适配小米全面屏优化 - 三点一圆 - 博客园<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文将通过修改包名的方式使 KeepassDx 的魔法键盘适配小米手机键盘全面屏优化&lt;/p&gt;</summary>
    
    
    
    <category term="折腾记录" scheme="https://kechocy.github.io/categories/%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Keepass" scheme="https://kechocy.github.io/tags/Keepass/"/>
    
    <category term="Android" scheme="https://kechocy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Windows 本地部署 DeepSeek 大模型</title>
    <link href="https://kechocy.github.io/posts/8bd9618c.html"/>
    <id>https://kechocy.github.io/posts/8bd9618c.html</id>
    <published>2025-07-18T03:03:04.000Z</published>
    <updated>2025-07-18T03:03:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何通过 Ollama 部署 DeepSeek-R1 蒸馏版。</p><span id="more"></span><hr><h2 id="1-安装-DeepSeek"><a href="#1-安装-DeepSeek" class="headerlink" title="1. 安装 DeepSeek"></a>1. 安装 DeepSeek</h2><p>去官网下载 <a class="link"   href="https://ollama.com/download" >Ollama 安装程序<i class="fas fa-external-link-alt"></i></a>，使用 <code>OllamaSetup.exe /DIR=D:\Software\Ollama</code> 可指定安装路径。</p><p>Ollama 安装后执行 <code>ollama run deepseek-r1:14b</code> 即可运行 DeepSeek-R1-Distill-Qwen-14B，可以替换数字以安装不同数据集大小的模型，更多信息见 <a class="link"   href="https://ollama.com/library/deepseek-r1" >Ollama DeepSeek-R1<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="2-安装-open-webui"><a href="#2-安装-open-webui" class="headerlink" title="2. 安装 open-webui"></a>2. 安装 open-webui</h2><p>运行成功后默认是通过命令行进行交互，可以利用安装 open-webui 提供网页交互入口，此处使用 pip 安装（依赖 python 3.11 ）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需已安装 python 3.11</span></span><br><span class="line">pip install open-webui</span><br><span class="line">open-webui serve</span><br></pre></td></tr></table></figure><p>你也可以使用 docker 安装，更多信息详见 <a class="link"   href="https://docs.openwebui.com/" >Open WebUI 文档<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="3-参考文章"><a href="#3-参考文章" class="headerlink" title="3. 参考文章"></a>3. 参考文章</h2><ul><li><a class="link"   href="https://ollama.com/library/deepseek-r1" >Ollama Deepseek-R1<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://docs.openwebui.com/" >Open WebUI 文档<i class="fas fa-external-link-alt"></i></a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍如何通过 Ollama 部署 DeepSeek-R1 蒸馏版。&lt;/p&gt;</summary>
    
    
    
    <category term="折腾记录" scheme="https://kechocy.github.io/categories/%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Windows" scheme="https://kechocy.github.io/tags/Windows/"/>
    
    <category term="DeepSeek" scheme="https://kechocy.github.io/tags/DeepSeek/"/>
    
    <category term="大模型" scheme="https://kechocy.github.io/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="AI" scheme="https://kechocy.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Windows 注册表备忘</title>
    <link href="https://kechocy.github.io/posts/e36ef7eb.html"/>
    <id>https://kechocy.github.io/posts/e36ef7eb.html</id>
    <published>2025-07-05T03:01:26.000Z</published>
    <updated>2025-07-05T03:01:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录 Windows 系统常用注册表。</p><span id="more"></span><h2 id="系统代理记录清除"><a href="#系统代理记录清除" class="headerlink" title="系统代理记录清除"></a>系统代理记录清除</h2><p>删除 <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings</code> 中 <code>ProxyServer</code> 和 <code>ProxyOverride</code> 的值</p><h2 id="共享网络默认网关修改"><a href="#共享网络默认网关修改" class="headerlink" title="共享网络默认网关修改"></a>共享网络默认网关修改</h2><p>修改 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters</code> 中 <code>ScopeAddress</code> 和 <code>ScopeAddressBackup</code> 的值</p><h2 id="RDP-默认端口修改"><a href="#RDP-默认端口修改" class="headerlink" title="RDP 默认端口修改"></a>RDP 默认端口修改</h2><p>修改 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</code> 中 <code>PortNumber</code> 的值</p><h2 id="Webdav-挂载支持-http"><a href="#Webdav-挂载支持-http" class="headerlink" title="Webdav 挂载支持 http"></a>Webdav 挂载支持 http</h2><p>修改 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters</code> 中 <code>BasicAuthLevel</code> 的值为 <code>2</code>，然后重新启动计算机</p><h2 id="开机自启项"><a href="#开机自启项" class="headerlink" title="开机自启项"></a>开机自启项</h2><p>可使用 <a class="link"   href="https://learn.microsoft.com/zh-cn/sysinternals/downloads/autoruns" >autoruns<i class="fas fa-external-link-alt"></i></a> 管理开机自启项。</p><p><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code><br><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code><br><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</code><br><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code><br><code>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Run</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录 Windows 系统常用注册表。&lt;/p&gt;</summary>
    
    
    
    <category term="折腾记录" scheme="https://kechocy.github.io/categories/%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Windows" scheme="https://kechocy.github.io/tags/Windows/"/>
    
    <category term="注册表" scheme="https://kechocy.github.io/tags/%E6%B3%A8%E5%86%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Debian 服务器配置备忘</title>
    <link href="https://kechocy.github.io/posts/f7465fc9.html"/>
    <id>https://kechocy.github.io/posts/f7465fc9.html</id>
    <published>2025-07-04T08:50:20.000Z</published>
    <updated>2025-07-04T08:50:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录个人 Debian 服务器的配置过程。</p><span id="more"></span><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><p><a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/" >debian | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror<i class="fas fa-external-link-alt"></i></a></p><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo - root</span><br><span class="line">vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure><p>其中 main contrib non-free non-free-firmware 表示不同类型的软件包。</p><ul><li>main 表示符合 <a class="link"   href="https://www.debian.org/doc/manuals/debian-handbook/sect.foundation-documents.zh-cn.html#sect.dfsg" >Debian Free Software Guidelines<i class="fas fa-external-link-alt"></i></a> 的包；</li><li>contrib 是依赖一些非自由软件就才能正常运作的开源软件；</li><li>non-free 和 non-free-firmware 表示非自由软件。</li></ul><blockquote><p>上述这种格式称为传统格式（又称 One-Line-Style 格式）。</p><p>新的 DEB822 格式自 APT 1.1（2015 年发布）起支持，文件后缀为 <code>.sources</code>，存储在 <code>/etc/apt/sources.list.d/</code> 目录下，格式类似如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Types: deb deb-src</span><br><span class="line">URIs: https://mirrors.tuna.tsinghua.edu.cn/debian</span><br><span class="line">Suites: bookworm bookworm-updates bookworm-backports</span><br><span class="line">Components: main contrib non-free non-free-firmware</span><br><span class="line">Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line">Types: deb deb-src</span><br><span class="line">URIs: http://security.debian.org/debian-security</span><br><span class="line">Suites: bookworm-security</span><br><span class="line">Components: main</span><br><span class="line">Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg</span><br></pre></td></tr></table></figure></blockquote><p>安装常用工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install vim git wget curl</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apt update    <span class="comment"># 更新软件索引</span></span><br><span class="line">apt upgrade  <span class="comment"># 更新系统中的所有软件包，但不安装额外的软件包或卸载软件包</span></span><br><span class="line">apt full-upgrade <span class="comment"># 更新系统中的所有软件包，并且在必要的时候安装额外的软件包或卸载软件包</span></span><br><span class="line">apt install foo   <span class="comment"># 安装软件包 foo 和它的全部依赖</span></span><br><span class="line">apt remove foo  <span class="comment"># 卸载软件包 foo</span></span><br><span class="line">apt purge foo    <span class="comment"># 卸载软件包 foo 和它的配置文件</span></span><br><span class="line">apt list --upgradable  <span class="comment"># 列出所有可以更新到新版本的软件包</span></span><br><span class="line"></span><br><span class="line">apt search foo  <span class="comment"># 找出描述中包含 foo 的软件包</span></span><br><span class="line">apt show foo    <span class="comment"># 打印软件包的详细信息</span></span><br><span class="line">apt-cache depends foo    <span class="comment"># 打印软件包的依赖</span></span><br><span class="line">apt-cache showpkg foo   <span class="comment"># 打印软件包各可用版本的详细信息，以及反向依赖它的软件包</span></span><br></pre></td></tr></table></figure><h3 id="dpkg"><a href="#dpkg" class="headerlink" title="dpkg"></a>dpkg</h3><p>除了使用 apt 软件管理工具安装软件外，还可以直接使用 dpkg 命令本地安装 deb 软件包</p><p>deb 包安装与卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i hello.deb       <span class="comment"># 安装</span></span><br><span class="line">dpkg -r hello.deb       <span class="comment"># 保留配置文件卸载</span></span><br><span class="line">dpkg -P hello.deb       <span class="comment"># 清除配置文件卸载</span></span><br><span class="line"></span><br><span class="line">dpkg -l                 <span class="comment"># 显示已安装程序列表</span></span><br><span class="line">dpkg -l | grep <span class="string">&quot;hello&quot;</span>  <span class="comment"># 查询已安装包</span></span><br><span class="line">dpkg -l | grep ^rc      <span class="comment"># 查看处于 rc 状态的软件包</span></span><br></pre></td></tr></table></figure><p><code>dpkg -l</code> 显示已安装程序列表，其中每行输出的第一列 <code>ii</code> 表示软件包的安装和配置状态，其格式如下：<code>期望状态|当前状态|错误</code> 。</p><p>期望状态有以下几种：</p><ul><li>u：即 unknown，软件包未安装且用户未请求安装</li><li>i：即 install，用户请求安装该软件包</li><li>r：即 remove，用户请求卸载该软件包</li><li>p：即 purge，用户请求卸载该软件包并清理配置文件</li><li>h：即 hold，用户请求保持续当前软件包版本</li></ul><p>当前状态有以下几种：</p><ul><li>n：即 not-installed，软件包未安装</li><li>i：即 installed，软件包已安装并完成配置</li><li>c：即 config-files，软件包已经被卸载，但是其配置文件未清理</li><li>u：即 unpacked，软件包已经被解压缩，但还未配置</li><li>f：即 half-configured，配置软件包时出现错误</li><li>w：即 triggers-awaited，触发器等待</li><li>t：即 triggers-pending，触发器未决</li></ul><p>错误状态有以下几种：</p><ul><li>h：软件包被强制保持</li><li>r：即 reinstall-required，需要卸载并重新安装</li><li>x：软件包被破坏</li></ul><p>因此 <code>ii</code> 表示该软件需要安装且已经安装，没有出现错误；<code>iu</code> 表示已经安装该软件，但未正确配置；<code>rc</code> 表示该软件已经被删除，但配置文件未清理。</p><p>一个 deb 包的目录结构如下：</p><ul><li>my.deb<ul><li>DEBIAN<ul><li>control （存放软件包的作者、版本、描述等信息）</li><li>preinst （安装前执行的脚本）</li><li>postinst （安装后执行的脚本）</li><li>prerm （卸载前执行的脚本）</li><li>postrm （卸载后执行的脚本）</li></ul></li><li>usr （存放源码）<ul><li>xxxxxx</li></ul></li></ul></li></ul><p>可以使用以下命令对 deb 包进行解压和打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpkg -x my.deb build  <span class="comment"># 解压源码</span></span><br><span class="line">dpkg -e my.deb build  <span class="comment"># 解压其中的 DEBIAN 内容</span></span><br><span class="line">dpkg -b build my.deb  <span class="comment"># 重新打包为 deb</span></span><br></pre></td></tr></table></figure><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - root</span><br><span class="line">apt install sudo</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -aG sudo username <span class="comment">#将用户 username 添加到 sudo 组中</span></span><br></pre></td></tr></table></figure><p>或者使用 <code>visudo</code> 命令或者编辑 <code>/etc/sudoers</code> 文件，文中添加 <code>username ALL=(ALL) ALL</code> ，保存文件后注销重新登录。</p><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p><a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/" >docker-ce | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror<i class="fas fa-external-link-alt"></i></a></p><p>卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> pkg <span class="keyword">in</span> docker.io docker-doc docker-compose podman-docker containerd runc; <span class="keyword">do</span> apt-get remove <span class="variable">$pkg</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>信任公钥并添加仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">install -m 0755 -d /etc/apt/keyrings</span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line">sudo <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.gpg</span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \</span></span><br><span class="line"><span class="string">  &quot;</span>$(. /etc/os-release &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$VERSION_CODENAME</span>&quot;</span>)<span class="string">&quot; stable&quot;</span> | \</span><br><span class="line">  <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>增加代理加速地址：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://docker.1panel.live&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://docker.ketches.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://hub.iyuu.cn&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo vim docker-compose.yml <span class="comment"># 编辑容器配置文件</span></span><br><span class="line">sudo docker compose up -d</span><br><span class="line">sudo docker compose down</span><br><span class="line">sudo docker <span class="built_in">exec</span> -it [contianer_name] /bin/bash</span><br><span class="line">sudo docker images <span class="comment"># 列出所有镜像</span></span><br><span class="line">sudo docker image remove xxx:xxx <span class="comment"># 删除指定镜像</span></span><br><span class="line">sudo docker container ps <span class="comment"># 列出在运行容器</span></span><br></pre></td></tr></table></figure><h2 id="ip-固定"><a href="#ip-固定" class="headerlink" title="ip 固定"></a>ip 固定</h2><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><p>增加内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s3</span><br><span class="line">iface enp0s3 inet static</span><br><span class="line">address 192.168.1.240/24</span><br><span class="line">network 192.168.1.0</span><br><span class="line">broadcast 192.168.1.255</span><br><span class="line">gateway 192.168.1.1</span><br><span class="line">dns-nameservers 223.5.5.5</span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart networking.service</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip address <span class="comment"># 查看网络接口</span></span><br><span class="line">ip route <span class="comment"># 查看路由</span></span><br></pre></td></tr></table></figure><h2 id="smb"><a href="#smb" class="headerlink" title="smb"></a>smb</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install samba</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> share <span class="comment"># 创建共享文件夹</span></span><br><span class="line">sudo vim /etc/samba/smb.conf <span class="comment"># 编辑配置文件</span></span><br></pre></td></tr></table></figure><p>末尾增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SHARE]</span><br><span class="line">comment = My Share Folder</span><br><span class="line">path = /home/username/share</span><br><span class="line">writable = yes</span><br><span class="line">browseable = no</span><br><span class="line">guest ok = no</span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart smbd.service</span><br></pre></td></tr></table></figure><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><p>Debian 12 已经默认安装了 cron</p><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install cron</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">crontab –e     //修改 crontab 文件，如果文件不存在会自动创建</span><br><span class="line">crontab –l      //显示 crontab 文件</span><br><span class="line">crontab -r      //删除 crontab 文件</span><br><span class="line">crontab -ir     //删除 crontab 文件前提醒用户</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认使用当前用户，可以使用 -u 指定用户</span></span><br><span class="line">crontab [-u username] -e</span><br></pre></td></tr></table></figure><h2 id="编写服务"><a href="#编写服务" class="headerlink" title="编写服务"></a>编写服务</h2><p>创建配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/frpc.service</span><br></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Frpc Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/home/username/frpc -c ./frpc.toml</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=default.target</span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> frpc.service</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录个人 Debian 服务器的配置过程。&lt;/p&gt;</summary>
    
    
    
    <category term="折腾记录" scheme="https://kechocy.github.io/categories/%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Linux" scheme="https://kechocy.github.io/tags/Linux/"/>
    
    <category term="Debian" scheme="https://kechocy.github.io/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 整合 Swagger 实现接口文档</title>
    <link href="https://kechocy.github.io/posts/448c169.html"/>
    <id>https://kechocy.github.io/posts/448c169.html</id>
    <published>2025-06-04T03:16:51.000Z</published>
    <updated>2025-06-04T03:16:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍 OpenApi、Swagger、SpringFox 和 SpringDoc 之间的区别，以及 SpringBoot 如何整合并使用 Swagger 实现接口文档。</p><span id="more"></span><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ul><li>OpenApi 是什么？</li></ul><p><strong>解答：</strong> OpenApi 是一个用于描述、定义和共享 RESTful API 文档的规范。最新规范是 OpenAPI 3.0。</p><ul><li>Swagger 是什么？</li></ul><p><strong>解答：</strong> Swagger 是一个用于设计和测试 RESTful API 的工具，是无关语言的。它提供了 API 描述、请求和响应示例、API 测试和文档生成等丰富的功能。最新版本是 Swagger 3，支持 OpenAPI 3.0 规范。</p><ul><li>SpringFox 是什么？</li></ul><p><strong>解答：</strong> SpringFox 是 Spring 社区维护的一个项目（非官方），帮助使用者将 Swagger 2 集成到 Spring 中。</p><p>地址：<a class="link"   href="https://github.com/springfox/springfox" >https://github.com/springfox/springfox<i class="fas fa-external-link-alt"></i></a></p><ul><li>SpringDoc 是什么？</li></ul><p><strong>解答：</strong> SpringDoc 也是 Spring 社区维护的一个项目（非官方），帮助使用者将 Swagger 3 集成到 Spring 中。SpringDoc 支持 Swagger 页面、Oauth2 登录，相较于 SpringFox 而言，它的支撑时间更长，无疑是更好的选择。</p><p>地址：<a class="link"   href="https://springdoc.org/" >https://springdoc.org/<i class="fas fa-external-link-alt"></i></a></p><ul><li>它们之间的关系</li></ul><p><strong>解答：</strong> OpenAPI 定义了一种标准的格式来表示 API 文档，而 Swagger 是一个实现 OpenAPI 规范的工具，而 SpringFox 和 SpringDoc 都是将 Swagger 继承到 Spring 框架中方便使用。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>如何将 Swagger 集成到 SpringBoot 中？</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>JDK 17</li><li>SpringBoot 3</li></ul><p>在 SpringBoot 3 之前用的都是 SpringFox 来集成 Swagger 管理我们的 API 接口文档，但是 SpringFox 已经停止更新了，本次我们使用的是 SpringBoot 3 、JDK 17 的环境，推荐使用 SpringDoc 来整合 Swagger。</p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springdoc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springdoc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kecho.top/i/2025/07/05/h5ejrs.png"                      alt="不再使用的旧 swagger 依赖"                ></p><h3 id="编写-Controller-类"><a href="#编写-Controller-类" class="headerlink" title="编写 Controller 类"></a>编写 Controller 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问接口页面"><a href="#访问接口页面" class="headerlink" title="访问接口页面"></a>访问接口页面</h3><p>浏览器直接输入：<a class="link"   href="http://localhost:8080/swagger-ui/index.html" >http://localhost:8080/swagger-ui/index.html<i class="fas fa-external-link-alt"></i></a> 回车即可看到下面界面：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kecho.top/i/2025/07/05/h5eu35.png"                      alt="swagger-ui 页面"                ></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在 <code>application.yml</code> 中可以自定义 api-docs 和 swagger-ui 的访问路径，扫描的指定包等等。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">springdoc:</span></span><br><span class="line">  <span class="attr">api-docs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/v3/api-docs</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span> <span class="comment"># 关闭接口文档，可针对 application-dev.yml / application-test 进行不同配置</span></span><br><span class="line">  <span class="attr">swagger-ui:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/swagger-ui.html</span></span><br><span class="line">  <span class="attr">packages-to-scan:</span> <span class="string">com.example.swaggerdemo.common.controller</span> <span class="comment"># 只显示 common 包下的接口</span></span><br></pre></td></tr></table></figure><p>可以通过配置类来自定义 swagger-ui 页面信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@OpenAPIDefinition(</span></span><br><span class="line"><span class="meta">        // 不同环境的服务器地址</span></span><br><span class="line"><span class="meta">        servers = &#123;</span></span><br><span class="line"><span class="meta">                @Server(description = &quot;开发环境服务器&quot;, url = &quot;http://localhost:8080&quot;),</span></span><br><span class="line"><span class="meta">                @Server(description = &quot;测试环境服务器&quot;, url = &quot;https://test.xiezhr.com&quot;)</span></span><br><span class="line"><span class="meta">        &#125;,</span></span><br><span class="line"><span class="meta">        // 配置外部文档地址</span></span><br><span class="line"><span class="meta">        externalDocs = @ExternalDocumentation(</span></span><br><span class="line"><span class="meta">                description = &quot;项目编译部署说明&quot;,</span></span><br><span class="line"><span class="meta">                url = &quot;http://localhost:8080/deplay/readme.md&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringDocConfig</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OpenAPI <span class="title function_">openAPI</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OpenAPI</span>()</span><br><span class="line">                <span class="comment">// 配置接口文档基本信息</span></span><br><span class="line">                .info(<span class="built_in">this</span>.getApiInfo())</span><br><span class="line">                ;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Info <span class="title function_">getApiInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Info</span>()</span><br><span class="line">                 <span class="comment">// 配置文档标题</span></span><br><span class="line">                .title(<span class="string">&quot;SpringBoot3集成Swagger3&quot;</span>)</span><br><span class="line">                <span class="comment">// 配置文档描述</span></span><br><span class="line">                .description(<span class="string">&quot;SpringBoot3集成Swagger3示例文档&quot;</span>)</span><br><span class="line">                <span class="comment">// 配置作者信息</span></span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>().name(<span class="string">&quot;程序员小凡&quot;</span>).url(<span class="string">&quot;https://www.xiezhrspace.cn&quot;</span>).email(<span class="string">&quot;1666397814@163.com&quot;</span>))</span><br><span class="line">                <span class="comment">// 配置License许可证信息</span></span><br><span class="line">                .license(<span class="keyword">new</span> <span class="title class_">License</span>().name(<span class="string">&quot;Apache 2.0&quot;</span>).url(<span class="string">&quot;https://www.xiezhrspace.cn&quot;</span>))</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                .summary(<span class="string">&quot;SpringBoot3集成Swagger3示例文档aaa&quot;</span>)</span><br><span class="line">                .termsOfService(<span class="string">&quot;https://www.xiezhrspace.cn&quot;</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="comment">// 配置版本号</span></span><br><span class="line">                .version(<span class="string">&quot;2.0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对接口进行分组</span></span><br><span class="line">    <span class="meta">@Bean(&quot;commonGroupApi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> GroupedOpenApi <span class="title function_">webGroupApi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> GroupedOpenApi.builder().group(<span class="string">&quot;common通用模块组&quot;</span>)</span><br><span class="line">            .pathsToMatch(<span class="string">&quot;/common/**&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean(&quot;adminGroupApi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> GroupedOpenApi <span class="title function_">adminGroupApi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> GroupedOpenApi.builder().group(<span class="string">&quot;admin模块组&quot;</span>)</span><br><span class="line">            .pathsToMatch(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kecho.top/i/2025/07/05/h5exkz.png"                      alt="swagger-ui 自定义配置效果"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kecho.top/i/2025/07/05/h5eqvq.png"                      alt="swagger-ui 接口分组效果"                ></p><h2 id="注解使用"><a href="#注解使用" class="headerlink" title="注解使用"></a>注解使用</h2><h3 id="Controller-类"><a href="#Controller-类" class="headerlink" title="Controller 类"></a>Controller 类</h3><p>① <code>@Tag</code> 注解，用于类上。</p><ul><li>name: 名称</li><li>description: 接口描述信息</li></ul><p>② <code>@Operation</code> 注解，用在方法上。</p><ul><li>summary：方法概要，方法的一个简单介绍，建议 120 个字符内</li><li>description：方法描述，一般是很长的内容</li><li>hidden：是否隐藏</li></ul><p>③<code>@Parameter</code> 注解，用在方法参数上。</p><ul><li>name：指定的参数名</li><li>in：参数位置，可选 query、header、path 或 cookie，默认为空，表示忽略</li><li>description：参数描述</li><li>required：是否必填，默认为 false</li></ul><p>④ <code>@ApiResponse</code> 注解，用于说明一个响应信息，用在 <code>@ApiResponses</code> 中。</p><ul><li>responseCode：HTTP 响应码</li><li>description：描述</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/common&quot;)</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;公共接口&quot;, description = &quot;公共接口&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IUserService userService;</span><br><span class="line"> </span><br><span class="line">   <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">   <span class="meta">@Operation(summary = &quot;hello接口&quot;, description = &quot;hello接口描述&quot;, hidden = true)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;hi接口&quot;, description = &quot;hi接口描述&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">Hi</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hi 程序员小凡&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;获取用户信息&quot;, description = &quot;根据用户ID获取用户信息&quot;)</span></span><br><span class="line">    <span class="meta">@ApiResponses(value =&#123;</span></span><br><span class="line"><span class="meta">            @ApiResponse(responseCode = &quot;200&quot;, description = &quot;请求成功&quot;),</span></span><br><span class="line"><span class="meta">            @ApiResponse(responseCode = &quot;404&quot;, description = &quot;用户不存在&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">( <span class="meta">@Parameter(name = &quot;id&quot;, in = ParameterIn.PATH, description = &quot;用户ID&quot;, required = true)</span> <span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getUserById(id);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kecho.top/i/2025/07/05/h5ephl.png"                      alt="swagger Controller 类常用注解效果"                ></p><p>⑤<code>@RequestHeader</code> 注解。</p><p>很多时候我们接口都需要认证之后才能访问，这时候我们就需要接口调用的时候携带着 token 信息，我们通过 <code>@RequestHeader</code> 注解，获取请求头中 token 信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String  <span class="title function_">admin</span><span class="params">(<span class="meta">@RequestHeader</span> (<span class="string">&quot;token&quot;</span>)</span> String token)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;token&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + token);</span><br><span class="line">    <span class="comment">//token 验证</span></span><br><span class="line">    <span class="comment">//.....各种业务逻辑</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kecho.top/i/2025/07/05/h5eof0.png"                      alt="swagger RequestHeader 注解效果"                ></p><h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><p><code>@Schema</code> 注解，用于描述数据对象信息或数据对象属性，用在类或类属性上。</p><ul><li>name: 属性名称</li><li>description: 属性描述</li><li>required: 是否必须</li><li>minLength: 字符最小长度</li><li>maxLength: 字符最大长度</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Schema(description = &quot;用户实体类&quot;, name = &quot;User&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户名&quot;, name = &quot;name&quot;, minLength = 6, maxLength = 20, required = true)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;年龄&quot;, name = &quot;age&quot;, required = true, minimum = &quot;1&quot;, maximum = &quot;100&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;邮箱&quot;, name = &quot;email&quot;, required = true)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;地址&quot;, name = &quot;address&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kecho.top/i/2025/07/05/h5eoug.png"                      alt="swagger Schema 注解效果"                ></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍 OpenApi、Swagger、SpringFox 和 SpringDoc 之间的区别，以及 SpringBoot 如何整合并使用 Swagger 实现接口文档。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="后端知识" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%90%8E%E7%AB%AF%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Spring Boot" scheme="https://kechocy.github.io/tags/Spring-Boot/"/>
    
    <category term="Swagger" scheme="https://kechocy.github.io/tags/Swagger/"/>
    
  </entry>
  
  <entry>
    <title>常用编程语言基础语法对比</title>
    <link href="https://kechocy.github.io/posts/d0f4f654.html"/>
    <id>https://kechocy.github.io/posts/d0f4f654.html</id>
    <published>2025-05-08T07:36:38.000Z</published>
    <updated>2025-05-08T07:36:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将对 Java、Go、Python 等编程语言的基础语法进行对比。</p><span id="more"></span><h2 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h2><div class="keep-tabs" id="keep-tabs-1752825068544">                <div class="tabs-wrapper">                    <div class="tabs-nav"><div class="tab active" data-href="keep-tabs-1752825068544-1">Java</div><div class="tab" data-href="keep-tabs-1752825068544-2">Go</div><div class="tab" data-href="keep-tabs-1752825068544-3">Python</div></div>                </div>                <div class="tabs-content"><div class="tab-pane active" id="keep-tabs-1752825068544-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.main;</span><br><span class="line"><span class="keyword">import</span> com.example.myapp.MyClass;</span><br><span class="line"><span class="keyword">import</span> com.example.main.TestClass;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1752825068544-2"><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;foo/bar&quot;</span> <span class="comment">// 导入本地包</span></span><br><span class="line">    myBar <span class="string">&quot;foo/bar&quot;</span> <span class="comment">// 别名</span></span><br><span class="line">    <span class="string">&quot;github.com/username/myproject/foo&quot;</span> <span class="comment">// 导入三方包</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1752825068544-3"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> module_name_1</span><br><span class="line"><span class="keyword">import</span> module_name_2 <span class="keyword">as</span> alias</span><br><span class="line"><span class="keyword">from</span> module_name_3 <span class="keyword">import</span> class_name, func_name</span><br><span class="line"><span class="keyword">from</span> module_name_4 <span class="keyword">import</span> *  <span class="comment"># 导入所有内容</span></span><br><span class="line">module = <span class="built_in">__import__</span>(<span class="string">&#x27;module_name_5&#x27;</span>)  <span class="comment"># 动态导入</span></span><br></pre></td></tr></table></figure></div></div>          </div><h2 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h2><div class="keep-tabs" id="keep-tabs-1752825068545">                <div class="tabs-wrapper">                    <div class="tabs-nav"><div class="tab active" data-href="keep-tabs-1752825068545-1">Java</div><div class="tab" data-href="keep-tabs-1752825068545-2">Go</div><div class="tab" data-href="keep-tabs-1752825068545-3">Python</div></div>                </div>                <div class="tabs-content"><div class="tab-pane active" id="keep-tabs-1752825068545-1"><p>if 结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( condition1 ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( condition2 ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch 结构，多行语句不需要花括号但需要手动写 <code>break;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> ( val ) &#123;</span><br><span class="line">    <span class="keyword">case</span> val1:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> val2:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>循环结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ ) &#123;</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ( condition ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">while</span> ( condition );</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1752825068545-2"><blockquote><p>不需要小括号</p></blockquote><p>if 结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1 &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> condition2 &#123;</span><br><span class="line">    <span class="comment">// ...    </span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch 结构，多行语句不需要花括号且不需要手动写 <code>break;</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> val &#123;</span><br><span class="line">    <span class="keyword">case</span> val1:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">case</span> val2:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>循环结构，没有 <code>while</code> 关键字但有 <code>for - range</code> 结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> condition &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pos, char := <span class="keyword">range</span> myStr &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1752825068545-3"><blockquote><p>需要冒号，不需要花括号，小括号可省略，</p></blockquote><p>if 结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">elif</span> condition2:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">elif</span> condition3:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># ...</span></span><br></pre></td></tr></table></figure><p>没有 switch 结构，可以使用 and 或 or 来组合多个条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1 <span class="keyword">or</span> condition2:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># ...</span></span><br></pre></td></tr></table></figure><p>循环结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="string">&#x27;Python&#x27;</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;当前字母: %s&quot;</span> % letter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> condition:</span><br><span class="line">    <span class="comment"># ...</span></span><br></pre></td></tr></table></figure></div></div>          </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文将对 Java、Go、Python 等编程语言的基础语法进行对比。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="编程语言" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript 模块化规范的使用说明</title>
    <link href="https://kechocy.github.io/posts/2b046bca.html"/>
    <id>https://kechocy.github.io/posts/2b046bca.html</id>
    <published>2025-04-20T08:35:13.000Z</published>
    <updated>2025-04-20T08:35:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍了常用的 JavaScript 模块化规范的使用说明，包含 ESMA6、CommonJS 等其它规范。</p><span id="more"></span><p><a class="link"   href="https://www.bilibili.com/video/BV13W42197jR/" >视频链接<i class="fas fa-external-link-alt"></i></a></p><h2 id="ES6-模块规范"><a href="#ES6-模块规范" class="headerlink" title="ES6 模块规范"></a>ES6 模块规范</h2><p>ES6 模块规范主要用于客户端，也可用于服务端。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>在 node.js 服务端有两种使用方式：</p><ul><li>将 <code>.js</code> 文件改为 <code>.mjs</code> 文件。</li><li>或者在 <code>package.json</code> 中添加定义 <code>&#39;type&#39;: &#39;module&#39;</code> 。</li></ul><p>在浏览器端使用：</p><ul><li>在 html 文件中使用 <code>&lt;script type=&quot;module&quot; src=&quot;index.js&quot;&gt;&lt;/script&gt;</code> 引入。</li></ul><blockquote><p>直接在本地使用浏览器打开 html 文件浏览器会报错，请启动 web 服务器后通过 <code>IP:端口</code> 访问网页。</p></blockquote><h3 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h3><p>导出有三种方式：</p><ul><li>分别导出</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>统一导出</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; name, age, getTel &#125;;</span><br></pre></td></tr></table></figure><ul><li>默认导出</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// export default &#123;</span></span><br><span class="line"><span class="comment">//     name: name,</span></span><br><span class="line"><span class="comment">//     age: age,</span></span><br><span class="line"><span class="comment">//     getTel: getTel</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可省略书写</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; name, age, getTel &#125;;</span><br></pre></td></tr></table></figure><p>三种导出可以混用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; age &#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; getTel &#125;;</span><br></pre></td></tr></table></figure><p>会得到：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="title class_">Module</span>: <span class="literal">null</span> prototype] &#123;</span><br><span class="line">  <span class="attr">age</span>: <span class="string">&#x27;18&#x27;</span>,</span><br><span class="line">  <span class="attr">default</span>: &#123; <span class="attr">getTel</span>: [<span class="title class_">Function</span>: getTel] &#125;,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><p>对于 ES6 模块化来说，使用何种导入方式要根据导出方式决定。</p><ul><li>全部导入（通用）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> student <span class="keyword">from</span> <span class="string">&#x27;./student.js&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>命名导入（对应：分别导出、统一导出）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; name <span class="keyword">as</span> newName, age, getTel &#125; <span class="keyword">from</span> <span class="string">&#x27;./student.js&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>默认导入（对应：默认导出）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> student <span class="keyword">from</span> <span class="string">&#x27;./student.js&#x27;</span>;</span><br><span class="line"><span class="comment">// student 变量名可以自己取</span></span><br></pre></td></tr></table></figure><blockquote><p>默认导入和命名导入可以混用（当然不能和全部导入混用）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; age &#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; getTel &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> newFun, &#123; name, age &#125; frome <span class="string">&#x27;./student.js&#x27;</span>;</span><br></pre></td></tr></table></figure></blockquote><ul><li>直接导入不接收任何数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// log.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./log.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入时 console.log() 会执行</span></span><br></pre></td></tr></table></figure><ul><li>动态导入（通用）</li></ul><p>导入还可以根据事件来进行动态导入，下面的例子将演示当点击按钮时才导入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; name, age, getTel &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">import</span>(<span class="string">&#x27;./student.js&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CommonJS-规范"><a href="#CommonJS-规范" class="headerlink" title="CommonJS 规范"></a>CommonJS 规范</h2><p>CommonJS 规范主要用于服务端，如果想要在浏览器端使用，可以通过 <a class="link"   href="https://browserify.org/" >browserify<i class="fas fa-external-link-alt"></i></a> 将原本的 js 文件进行翻译，再将翻译后的文件在 html 中引用。</p><h3 id="导出数据-1"><a href="#导出数据-1" class="headerlink" title="导出数据"></a>导出数据</h3><p>在 CommonJS 规范中有两种导出方式，导出的是一个普通对象，默认为 <code>&#123;&#125;</code>。</p><p>通过 <code>exports</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">name</span> = name;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">age</span> = age;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">getTel</span> = getTel;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当然也可以使用 module.exports.name = name 只是书写更麻烦;</span></span><br></pre></td></tr></table></figure><p>通过 <code>module.exports</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// module.exports = &#123;</span></span><br><span class="line"><span class="comment">//     name: name,</span></span><br><span class="line"><span class="comment">//     age: age,</span></span><br><span class="line"><span class="comment">//     getTel: getTel</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可省略书写</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; name, age, getTel &#125;;</span><br></pre></td></tr></table></figure><h3 id="导入数据-1"><a href="#导入数据-1" class="headerlink" title="导入数据"></a>导入数据</h3><p>导入时会执行被导入文件中的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> student = <span class="built_in">require</span>(<span class="string">&#x27;./student.js&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(student);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 会输出：</span></span><br><span class="line"><span class="comment">// hello</span></span><br><span class="line"><span class="comment">// &#123;&#125;</span></span><br></pre></td></tr></table></figure><p>导入时也能通过解构赋值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">name</span>: newName, age, getTel &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./student.js&#x27;</span>); <span class="comment">// 解构导入并重命名</span></span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>注意点如下：</p><ol><li>每个模块内部的：<code>this</code>、<code>exports</code>、<code>module.exports</code> 在初始时都指向同一个空对象。<code>console.log(this===exports &amp;&amp; exports === module.exports); // true</code>。</li><li>无论如何修改导出对象，最终导出的都是 <code>module.exports</code> 的值。</li><li><code>exports</code> 是对 <code>module.exports</code> 的初始引用，仅为了方便给导出对象添加属性，所以不能使用 <code>exports = value</code> 的形式导出数据，可以使用 <code>exports.value = value</code> 、<code>module.exports = value</code> 导出数据。</li></ol><p>思考以下代码在导入时获取到的数据是什么？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span> = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">c</span> = <span class="number">3</span>;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; <span class="attr">d</span>: <span class="number">4</span> &#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> student = <span class="built_in">require</span>(<span class="string">&#x27;./student.js&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(student);</span><br><span class="line"><span class="comment">// 输出：&#123; d: 4 &#125;</span></span><br></pre></td></tr></table></figure><p>分析：</p><ol><li><code>exports </code>-&gt; <code>&#123;&#125;</code> &lt;- <code>module.exports</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1 &#125;</code> ；<code>module.exports</code> -&gt; <code>&#123;&#125;</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1, b: 2 &#125;</code>；<code>module.exports</code> -&gt; <code>&#123;&#125;</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1, b: 2 &#125;</code>；<code>module.exports</code> -&gt; <code>&#123; c: 3 &#125;</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1, b: 2 &#125;</code>；没有东西指向 <code>&#123; c: 3 &#125; </code>；<code>module.exports</code> -&gt; <code>&#123; d: 4 &#125;</code></li></ol><h2 id="模块化的好处"><a href="#模块化的好处" class="headerlink" title="模块化的好处"></a>模块化的好处</h2><p>模块化能够有效解决：</p><ul><li>全局污染问题</li><li>数据安全问题</li><li>依赖混乱问题</li></ul><p>1、全局污染、数据安全问题</p><p>在使用模块化以前：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;student.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时在浏览器控制台是能够获取到 <code>name</code>、<code>age</code> 等变量的，并且如果引入的多个文件有相同的变量名会产生冲突。</p><p>使用模块化以后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; name, age, getTel &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> student <span class="keyword">from</span> <span class="string">&#x27;./student.js&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时在浏览器控制台是无法获取到 <code>student.name</code> 变量的，而且在导入模块时能够对冲突的变量重命名，解决了数据安全、全局污染问题。</p><p>2、依赖混乱问题</p><p>在使用模块化以前，直接在 html 文件中引入 js 的顺序至关重要，尤其是需要引入多个 js 文件时，特别需要关注他们的依赖关系来确定引入顺序，十分麻烦。使用模块化后，可以在各个 js 文件中显式导入需要使用到的模块，而不用关心 html 文件中引入 js 的顺序。</p><h2 id="数据引入问题"><a href="#数据引入问题" class="headerlink" title="数据引入问题"></a>数据引入问题</h2><p>思考同一代码在 CommonJS 规范和 ES6 规范的执行结果：</p><ul><li>CommonJS 规范</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// data.js</span></span><br><span class="line"><span class="keyword">let</span> sum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    sum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; sum, increment &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; sum, increment &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./data.js&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br></pre></td></tr></table></figure><blockquote><p>输出：</p><p>1<br>data: 2<br>data: 3<br>1</p></blockquote><ul><li>ES6 规范</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// data.js</span></span><br><span class="line"><span class="keyword">let</span> sum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    sum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; sum, increment &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; sum, increment &#125; <span class="keyword">from</span> <span class="string">&#x27;./data.js&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br></pre></td></tr></table></figure><blockquote><p>输出：</p><p>1<br>data: 2<br>data: 3<br>3</p></blockquote><p>对比两者发现，ES6 规范中执行完函数后的 <code>sum</code> 的值不一样了，是因为 <code>index.js</code> 和 <code>data.js</code> 中的 <code>sum</code> 是同一片内存空间（在 CommonJS 规范中导入是将值进行了复制），为了避免这种情况应该在 <code>data.js</code> 中声明常量而不是变量，即改为 <code>const sum = 1</code>。</p><h2 id="其它规范"><a href="#其它规范" class="headerlink" title="其它规范"></a>其它规范</h2><p><a class="link"   href="https://github.com/amdjs/amdjs-api/wiki/AMD" >AMD 规范<i class="fas fa-external-link-alt"></i></a> 是 RequireJS 在推广过程中对模块定义的规范化产出。</p><p><a class="link"   href="https://github.com/seajs/seajs/issues/242" >CMD 规范<i class="fas fa-external-link-alt"></i></a> 是 SeaJS 在推广过程中对模块定义的规范化产出。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍了常用的 JavaScript 模块化规范的使用说明，包含 ESMA6、CommonJS 等其它规范。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端知识" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="JavaScript" scheme="https://kechocy.github.io/tags/JavaScript/"/>
    
    <category term="ESMA6" scheme="https://kechocy.github.io/tags/ESMA6/"/>
    
    <category term="CommonJS" scheme="https://kechocy.github.io/tags/CommonJS/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 参数校验</title>
    <link href="https://kechocy.github.io/posts/f00bce88.html"/>
    <id>https://kechocy.github.io/posts/f00bce88.html</id>
    <published>2025-04-02T08:33:10.000Z</published>
    <updated>2025-04-02T08:33:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot 中使用 JSR 对前端传来的数据进行校验的过程。 </p><span id="more"></span><blockquote><p>本文省略对返回结果和响应枚举类型的封装。</p></blockquote><h2 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 spring-boot-starter-web 中已包含上述包。</p><h2 id="统一异常处理"><a href="#统一异常处理" class="headerlink" title="统一异常处理"></a>统一异常处理</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line">    <span class="comment">// 处理 @Valid 校验失败异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="keyword">public</span> JSONResult&lt;Void&gt; <span class="title function_">handlerValidationException</span><span class="params">(MethodArgumentNotValidException e)</span> &#123;</span><br><span class="line">        log.warn(<span class="string">&quot;参数校验失败：&quot;</span> + e.getMessage(), e);</span><br><span class="line">        <span class="type">String</span> <span class="variable">errorMessage</span> <span class="operator">=</span> e.getBindingResult()</span><br><span class="line">                .getAllErrors()</span><br><span class="line">                .stream()</span><br><span class="line">                .map(ObjectError::getDefaultMessage)</span><br><span class="line">                .collect(Collectors.joining(<span class="string">&quot;;&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> JSONResult.error(StatusCodeEnum.FAIL.getCode(), errorMessage);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理其它异常...</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JSR-注解校验"><a href="#JSR-注解校验" class="headerlink" title="JSR 注解校验"></a>JSR 注解校验</h2><p>UserVO</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> &#123;</span><br><span class="line">    <span class="meta">@NotNull(message = &quot;用户名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(value=&quot;/save&quot;)</span></span><br><span class="line"><span class="comment">// 接口接收参数上添加 @Valid 注解进行校验</span></span><br><span class="line"><span class="keyword">public</span> JSONResult <span class="title function_">insert</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> UserVO vo)</span>&#123;</span><br><span class="line">userService.insert(vo);</span><br><span class="line">    <span class="keyword">return</span> JSONResult.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收到前端发送请求后会对数据进行校验，如果校验失败会抛出 MethodArgumentNotValidException 异常，全局异常处理器将捕获到异常进行处理。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>当前端请求：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>后端返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">400</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;用户名不能为空&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Spring Boot 中使用 JSR 对前端传来的数据进行校验的过程。 &lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="后端知识" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%90%8E%E7%AB%AF%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Spring Boot" scheme="https://kechocy.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Framework</title>
    <link href="https://kechocy.github.io/posts/874e8d58.html"/>
    <id>https://kechocy.github.io/posts/874e8d58.html</id>
    <published>2025-03-25T05:01:18.000Z</published>
    <updated>2025-04-02T07:01:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Framework 是一个功能强大的 Java 应用程序框架，旨在提供高效且可扩展的开发环境。它结合了轻量级的容器和依赖注入功能，提供了一种使用 POJO 进行容器配置和面向切面的编程的简单方法，以及一组用于 AOP 的模块。</p><span id="more"></span><p>Spring 两大核心机制：</p><ul><li>IoC（控制反转）：工厂模式</li><li>AOP（面向切面编程）：代理模式</li></ul><h2 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h2><p>1、创建 Maven 工程，在 <code>pom.xml</code> 导入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、在 resources 路径下创建 <code>spring.xml</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、获取 IoC 容器中已经创建的对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring.xml&quot;</span>);</span><br><span class="line"><span class="comment">// 通过 bean id 获取，返回值需要强制类型转换</span></span><br><span class="line"><span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) context.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以通过类名获取，但要确保容器中只有一个该类型的 bean</span></span><br><span class="line"><span class="comment">// Student student = context.getBean(Student.class);</span></span><br><span class="line">System.out.println(student.toString());</span><br></pre></td></tr></table></figure><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><h3 id="bean"><a href="#bean" class="headerlink" title="bean"></a>bean</h3><p>bean 标签用于创建一个对象，id 是唯一标识，class 是完全限定类名，name 可以同时取多个别名，别名之间可以使用空格或逗号或分号分隔。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> <span class="attr">name</span>=<span class="string">&quot;student1 student2 student3&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h3><p>alias 可用于配置别名，alias 的 name 对应需要取别名的 bean 的 id。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;student&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;stuNew&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="import"><a href="#import" class="headerlink" title="import"></a>import</h3><p>import 用于导入其它配置文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans1.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans2.xml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建顺序"><a href="#创建顺序" class="headerlink" title="创建顺序"></a>创建顺序</h2><p>IoC 容器默认情况下是通过 <code>spring.xml</code> 中 bean 的配置顺序来决定创建顺序的，配置在前⾯的 bean 会先创建。在不更改配置顺序的前提下，通过 depends-on 来设置 bean 之间的依赖关系，从而调整 bean 的创建顺序。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> <span class="attr">depends-on</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码的结果是先创建 Cat，再创建 Student 对象。</p><h2 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h2><p>IoC 容器通过读取 <code>spring.xml</code> 配置文件，按照顺序加载 bean 标签来创建对象，相当于替代了手动去 new 一个对象的过程，而创建对象的方式主要有两种：构造函数和 Setter 方法。</p><h3 id="通过构造函数"><a href="#通过构造函数" class="headerlink" title="通过构造函数"></a>通过构造函数</h3><p>IoC 容器通过对应构造函数去创建对象，这也要求实体类必须有对应的构造函数。</p><ul><li>无参构造函数（实体类必须有无参构造函数）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>有参构造函数（实体类必须有相同参数列表的有参构造函数）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 name 时，参数顺序必须和构造函数中的参数顺序保持一致，其中 String 类型会自动转 int 类型（实体类 Student 中的 id 和 age 均为 int 类型）。</p><p>你也可以使用 index 来避免顺序不一致导致可能出现的问题：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还可以使用 type 根据参数类型来匹配构造函数创建 bean（如果有多个有参构造函数，通过参数类型无法匹配到唯一的构造函数时会报错）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过-Setter-方法"><a href="#通过-Setter-方法" class="headerlink" title="通过 Setter 方法"></a>通过 Setter 方法</h3><p>IoC 容器通过 Setter 方法去创建对象，这要求对应字段在实体类中必须有对应的 Setter 方法。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果我想把 name 的值设置为 <code>&lt;小二&gt;</code>，因为字符串包含了特殊字符，应该改用 <strong>CDATA</strong> 格式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[&lt;小二&gt;]]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两种创建方式的写法非常相似，主要是 <code>constructor-arg</code> 和 <code>property</code> 的不同，接下来的示例主要以 Setter 方法为主，构造器注入同理。</p><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><p>DI 是指 bean 之间的依赖注入，用于设置对象之间的级联关系。此时应该改用 ref 而不能改用 value，否则会抛出类型转换异常。除了 ref，还有数组、 List、Set、Map、Properties 类型，下面将使用 Setter 方式注入展示各种类型的写法：</p><p>实体类 Student：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbys;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line">    <span class="keyword">private</span> String spouse;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>spring.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 普通值注入 value --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引用注入 ref --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- List --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbys&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>听歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>敲代码<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Set --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>王者荣耀<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Map --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;身份证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456123412121234&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- null --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;spouse&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Properties --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;学号&quot;</span>&gt;</span>111111<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;性别&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面如果改用构造器注入又改怎么写呢？只需要将 <code>property</code> 改成 <code>constructor-arg</code> 即可。</p><h2 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h2><h3 id="c-命名空间"><a href="#c-命名空间" class="headerlink" title="c 命名空间"></a>c 命名空间</h3><p>c 命名空间对应构造器注入。</p><p>使用 c 命名空间应在 xml 头部引入约束：<code>xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;咪咪&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">c:name</span>=<span class="string">&quot;kecho&quot;</span> <span class="attr">c:id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">c:cat-ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="p-命名空间"><a href="#p-命名空间" class="headerlink" title="p 命名空间"></a>p 命名空间</h3><p>p 命名空间对应 Setter 方法注入。</p><p>使用 p 命名空间应在 xml 头部引入约束：<code>xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;咪咪&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">p:name</span>=<span class="string">&quot;kecho&quot;</span> <span class="attr">p:id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">p:cat-ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>bean 是根据 scope 来⽣成，表示 bean 的作⽤域，scope 有4种类型：</p><ul><li>singleton，单例，表示通过容器获取的对象是唯⼀的，默认值。</li><li>prototype，原型，表示通过容器获取的对象是不同的。</li><li>request，请求，表示在⼀次 HTTP 请求内有效。</li><li>session，会话，表示在⼀个⽤户会话内有效。</li></ul><p>requset，session 适⽤于 Web 项⽬。</p><p>singleton 模式下，只要加载 IoC 容器，⽆论是否从 IoC 中取出 bean，配置⽂件中的 bean 都会被创建。prototype 模式下，如果不从 IoC 中取 bean，则不创建对象，取⼀次 bean，就会创建⼀个对象。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;student&quot; class=&quot;com.kecho.entity.Student&quot; scope=&quot;prototype&quot;/&gt;</span><br></pre></td></tr></table></figure><p>也可以通过对类添加注解 <code>@Scope(&quot;prototype&quot;)</code> 来实现同样功能。</p><h2 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h2><p>默认情况下，ApplicationContext 的实现会急切地创建和配置所有的单例 bean，你可以通过将 bean 定义标记为懒加载来阻止单例 bean 的预实例化。懒加载的 bean 告诉 IoC 容器在第一次被请求时创建一个 bean 实例，而不是在启动时。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.Student&quot;</span> <span class="attr">lazy-init</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>当懒加载 bean 是被未懒加载的单例 bean 所依赖时，ApplicationContext 会在启动时创建懒加载 bean。</p><p>你也可以通过使用 <code>&lt;beans&gt;</code> 元素上的 <code>default-lazy-init</code> 属性来控制容器级的懒加载：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">default-lazy-init</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- no beans will be pre-instantiated... --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="读取外部资源"><a href="#读取外部资源" class="headerlink" title="读取外部资源"></a>读取外部资源</h2><p>实际开发中，数据库的配置⼀般会单独保存到后缀为 properties 的⽂件中，⽅便维护和修改，如果使⽤ Spring 来加载数据源，就需要在 <code>spring.xml</code> 中读取 properties 中的数据，这就是读取外部资源。</p><p>jdbc.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/library</span></span><br><span class="line"><span class="attr">driverName</span> = <span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><p>spring.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导⼊外部资源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- SpEL --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.DataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driverName&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="工厂方法"><a href="#工厂方法" class="headerlink" title="工厂方法"></a>工厂方法</h2><p>IoC 通过⼯⼚模式创建 bean 有两种⽅式：静态⼯⼚⽅法和实例⼯⼚⽅法，区别在于静态⼯⼚类不需要实例化，实例⼯⼚类需要实例化。</p><h3 id="静态⼯⼚⽅法"><a href="#静态⼯⼚⽅法" class="headerlink" title="静态⼯⼚⽅法"></a>静态⼯⼚⽅法</h3><p>1、创建 Car 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Car</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer num;</span><br><span class="line"><span class="keyword">private</span> String brand;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、创建静态⼯⼚类、静态⼯⼚⽅法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StaticCarFactory</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Car&gt; carMap;</span><br><span class="line"><span class="keyword">static</span> &#123; </span><br><span class="line">        carMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        carMap.put(<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">1</span>,<span class="string">&quot;奥迪&quot;</span>));</span><br><span class="line">        carMap.put(<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">2</span>,<span class="string">&quot;奥拓&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title function_">getCar</span><span class="params">(Integer num)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> carMap.get(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、spring.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.factory.StaticCarFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getCar&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>factory-method</code> 指向静态⽅法，<code>constructor-arg</code> 的 value 属性是调⽤静态⽅法传⼊的参数。</p><h3 id="实例⼯⼚⽅法"><a href="#实例⼯⼚⽅法" class="headerlink" title="实例⼯⼚⽅法"></a>实例⼯⼚⽅法</h3><p>1、创建实例⼯⼚类、⼯⼚⽅法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InstanceCarFactory</span>&#123;</span><br><span class="line"><span class="keyword">private</span> Map&lt;Integer, Car&gt; carMap;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">InstanceCarFactory</span><span class="params">()</span> &#123; </span><br><span class="line">        carMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        carMap.put(<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">1</span>,<span class="string">&quot;奥迪&quot;</span>));</span><br><span class="line">        carMap.put(<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">2</span>,<span class="string">&quot;奥拓&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">(Integer num)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> carMap.get(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、spring.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;instanceCarFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.factory.InstanceCarFactory&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car2&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;instanceCarFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getCar&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>静态⼯⼚⽅法创建 Car 对象，不需要实例化⼯⼚对象，因为静态⼯⼚的静态⽅法，不需要创建对象即可调⽤，spring.xml 中只需要配置⼀个 bean，即最终的结果 Car 即可。</p><p>实例⼯⼚⽅法创建 Car 对象，需要实例化⼯⼚对象，因为 getCar ⽅法是⾮静态的，就必须通过实例化对象才能调⽤，所以就必须要创建⼯⼚对象，<code>spring.xml</code> 中需要配置两个 bean，⼀个是⼯⼚ bean，⼀个是 Car bean。</p><h2 id="自动装载"><a href="#自动装载" class="headerlink" title="自动装载"></a>自动装载</h2><p>已知有两个实体类 Student 和 Cat。</p><p>Student：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cat：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class Cat &#123;</span><br><span class="line">    private String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>spring.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;咪咪&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终得到 <code>Student(id=1, name=kecho, age=18, cat=Cat(name=咪咪))</code>，通过 <code>autowire</code> 可以自动地将 cat 装载到 student 中，即使未显示使用 ref 声明。</p><p><code>autowire</code> 有两个值：byName 和 byType。</p><p>byName 会去找和 set 方法后面的值相同的 bean id 的 bean 自动装载，没有相同的则会报错。</p><p>byType 会去找和成员变量的数据类型相同的 bean 自动装载，如果容器中有两个相同类型的 bean 则会报错。</p><h2 id="基于注解开发"><a href="#基于注解开发" class="headerlink" title="基于注解开发"></a>基于注解开发</h2><p>使用注解开发需要：</p><ul><li>导入 context 约束</li><li>配置注解支持</li></ul><p>以下创建 bean 时没有使用到 Setter 方法。</p><h3 id="手动创建"><a href="#手动创建" class="headerlink" title="手动创建"></a>手动创建</h3><p>需要在 xml 中手动声明 bean：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时可以使用 <code>@Value</code> 来设置属性值，使用 <code>@Autowired</code> 实现自动装载：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="meta">@Value(&quot;kecho&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;18&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果容器中没有这个 bean，<code>@Autowired</code> 会自动装配失败报错，可以使用 <code>@Autowired(require = false)</code> 来允许为空。</p><p><code>@Autowired</code> 默认通过 byType 的方式来查找 bean，如果存在多个相同类型的 bean 也会无法自动装配，可以加上 <code>@Qualifier(value = &quot;beanid&quot;)</code> 指定装配相应 id 的 bean，不带参数的 <code>@Qualifier</code> 默认指定 id 与属性名对应的 bean。</p><blockquote><p>除了使用 <code>@Autowired</code>，Java 也有自己的注解 <code>@Resource</code> 实现相同的功能，也可以通过 <code>@Resource(name = &quot;bean id&quot;)</code> 指定 bean id 来自动装配对应的 bean。</p><p>不同于 <code>@Autowired</code> 通过 byType 的方式来查找 bean，<code>@Resource</code> 默认通过 byName 的方式实现，如果找不到名字则通过 byType 的方式。</p></blockquote><h3 id="自动扫描"><a href="#自动扫描" class="headerlink" title="自动扫描"></a>自动扫描</h3><p>为了避免每个 bean 都需要自己手动去创建，可以配置扫描包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.kecho.entity&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时使用 <code>@Component</code> 来自动加载：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class Student &#123;</span><br><span class="line">    @Value(&quot;1&quot;)</span><br><span class="line">    private int id;</span><br><span class="line">    @Value(&quot;kecho&quot;)</span><br><span class="line">    private String name;</span><br><span class="line">    @Value(&quot;18&quot;)</span><br><span class="line">    private int age;</span><br><span class="line">    @Autowired(required = false)</span><br><span class="line">    private Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了 <code>@Component</code> 外，还有 <code>@Repository</code>、<code>@Service</code>、<code>@Controller</code>，这些注解的功能是一样的。</p><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><p>除了在 xml 配置文件中进行创建 bean、配置 context 约束、配置扫描包路径、配置注解的支持等等，还可以在 Java 类中进行配置：</p><p>MyConfig 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">// 相当于 beans 标签</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br><span class="line">    <span class="comment">// 相当于一个 bean 标签</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Student <span class="title function_">myStudent</span><span class="params">()</span> &#123;  <span class="comment">// Student 是 bean 的类型，myStudent 是 bean id</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">1</span>, <span class="string">&quot;kecho&quot;</span>, <span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取 bean：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不再通过 xml 文件获取上下文</span></span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MyConfig.class);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;myUser&quot;</span>, User.class);</span><br></pre></td></tr></table></figure><p>如果要自动扫描包来加载 bean，可以为 MyConfig 类设置 <code>@ComponentScan(&quot;com.kecho.entity&quot;)</code>，同时搭配 <code>@Component</code> 来自动加载 bean。如下：</p><p>MyConfig 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.kecho.entity&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="meta">@Value(&quot;kecho&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;18&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IoC"><a href="#IoC" class="headerlink" title="IoC"></a>IoC</h2><p>控制反转（Inversion of Control，简称 IoC）是一种设计思想，它将对象的创建和依赖关系的管理交给容器，而不是在代码中直接控制对象的创建和依赖关系。IoC 的核心思想是通过容器来管理对象的生命周期和依赖关系，从而实现对象之间的松耦合。</p><h3 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* dao */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* daoImpl */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Apple</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;get a Apple&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Banana</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;get a Banana&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* service */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFruit</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* serviceImpl */</span></span><br><span class="line"><span class="keyword">public</span> UserServiceImpl <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Fruit</span> <span class="variable">fruit</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Apple</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFruit</span><span class="params">()</span> &#123;</span><br><span class="line">        fruit.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 主程序测试 */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        user.getFruit(); <span class="comment">// 输出 &quot;get a Apple&quot; </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前的控制权在业务层，每次用户需求改变时业务层也要跟着改变，即需要修改 UserServiceImpl 中的代码，如果工程量较大修改起来会很麻烦，而且修改代码容易对其它业务造成影响，可以考虑把控制权交给用户。</p><p>修改业务层的代码实现控制权的转换，程序由主动创建对象变为被动接收对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* serviceImpl */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Fruit fruit;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 利用 set 方法动态获取值的注入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFruit</span><span class="params">(Fruit fruit)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fruit = fruit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFruit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fruit.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 主程序测试 */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        user.setFruit(<span class="keyword">new</span> <span class="title class_">Apple</span>());</span><br><span class="line">        <span class="comment">//user.setFruit(new Banana());</span></span><br><span class="line">        user.getFruit(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 spring.xml 中就是这么配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;apple&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.dao.Apple&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;banana&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.dao.Banana&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;fruit&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;apple&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>核⼼技术点：XML 解析 + 反射机制</p><p>具体的思路：</p><p>1、根据需求编写 XML ⽂件，配置需要创建的 bean。</p><p>2、编写程序读取 XML ⽂件，获取 bean 相关信息，类、属性、id。</p><p>3、根据第 2 步获取到的信息，结合反射机制动态创建对象，同时完成属性的赋值。</p><p>4、将创建好的 bean 存⼊ Map 集合，设置 key - value 映射，key 就是 bean 中 id 值，value 就是 bean 对象。</p><p>5、提供⽅法从 Map 中通过 id 获取到对应的 value。</p><p>下面将自定义一个 MyClassPathXmlApplicationContext 类来实现。</p><p>首先需要在 <code>pom.xml</code> 引入依赖解析 xml 文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>自定义 MyClassPathXmlApplicationContext 类（这里假设 bean 的属性仅为 int 或 String 类型）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassPathXmlApplicationContext</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContext</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; iocMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassPathXmlApplicationContext</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        iocMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        parseXml(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">parseXml</span><span class="params">(String path)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SAXReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SAXReader</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> reader.read(<span class="string">&quot;src/main/resources/&quot;</span> + path);</span><br><span class="line">            <span class="type">Element</span> <span class="variable">rootElement</span> <span class="operator">=</span> document.getRootElement();</span><br><span class="line">            Iterator&lt;Element&gt; elementIterator = rootElement.elementIterator();</span><br><span class="line">            <span class="keyword">while</span> (elementIterator.hasNext()) &#123;</span><br><span class="line">                <span class="type">Element</span> <span class="variable">bean</span> <span class="operator">=</span> elementIterator.next();</span><br><span class="line">                <span class="type">String</span> <span class="variable">beanID</span> <span class="operator">=</span> bean.attributeValue(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">beanClassName</span> <span class="operator">=</span> bean.attributeValue(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">                <span class="comment">// 反射创建对象</span></span><br><span class="line">                <span class="type">Class</span> <span class="variable">myClass</span> <span class="operator">=</span> Class.forName(beanClassName);</span><br><span class="line">                <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> myClass.getConstructor();</span><br><span class="line">                <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> constructor.newInstance();</span><br><span class="line">                <span class="comment">// 给属性赋值</span></span><br><span class="line">                Iterator&lt;Element&gt; propertyIterator = bean.elementIterator();</span><br><span class="line">                <span class="keyword">while</span> (propertyIterator.hasNext()) &#123;</span><br><span class="line">                    <span class="type">Element</span> <span class="variable">property</span> <span class="operator">=</span> propertyIterator.next();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">propertyName</span> <span class="operator">=</span> property.attributeValue(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">propertyValue</span> <span class="operator">=</span> property.attributeValue(<span class="string">&quot;value&quot;</span>);</span><br><span class="line">                    <span class="comment">// 获取 setter 方法</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> <span class="string">&quot;set&quot;</span> + propertyName.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + propertyName.substring(<span class="number">1</span>);</span><br><span class="line">                    <span class="comment">// 获取属性和方法</span></span><br><span class="line">                    <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> myClass.getDeclaredField(propertyName);</span><br><span class="line">                    <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> myClass.getMethod(methodName, field.getType());</span><br><span class="line">                    <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> propertyValue;</span><br><span class="line">                    <span class="comment">// 类型转换（这里假设 bean 的属性仅为 int 或 String 类型）</span></span><br><span class="line">                    <span class="keyword">switch</span> (field.getType().getName())&#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;java.lang.String&quot;</span>:</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;int&quot;</span>:</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;java.lang.Integer&quot;</span>:</span><br><span class="line">                            value = Integer.parseInt(propertyValue);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 调用方法</span></span><br><span class="line">                    method.invoke(object, value);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 存入 Map</span></span><br><span class="line">                iocMap.put(beanID, object);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getBean</span><span class="params">(String beanID)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        <span class="keyword">return</span> iocMap.get(beanID);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 省略其它需要重写的方法......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>spring.xml</code> 配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args  )</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassPathXmlApplicationContext</span>(<span class="string">&quot;spring.xml&quot;</span>);</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) context.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">    System.out.println(student);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;Spring Framework 是一个功能强大的 Java 应用程序框架，旨在提供高效且可扩展的开发环境。它结合了轻量级的容器和依赖注入功能，提供了一种使用 POJO 进行容器配置和面向切面的编程的简单方法，以及一组用于 AOP 的模块。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="后端知识" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%90%8E%E7%AB%AF%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Spring" scheme="https://kechocy.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://kechocy.github.io/posts/2f57a694.html"/>
    <id>https://kechocy.github.io/posts/2f57a694.html</id>
    <published>2022-04-23T04:10:42.000Z</published>
    <updated>2022-04-23T04:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式是用字符串描述的一个匹配规则，使用正则表达式可以快速判断给定的字符串是否符合匹配规则。</p><span id="more"></span><h2 id="常见匹配规则"><a href="#常见匹配规则" class="headerlink" title="常见匹配规则"></a>常见匹配规则</h2><table><thead><tr><th align="left">正则表达式</th><th align="left">含义</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left"><code>\</code></td><td align="left">转义字符</td><td align="left">常用于转义 <code>\</code>、<code>(</code>、<code>[</code>、<code>&#123;</code> 等</td></tr><tr><td align="left"><code>^</code></td><td align="left">匹配字符串开头（第一个字符之前）</td><td align="left"></td></tr><tr><td align="left"><code>$</code></td><td align="left">匹配字符串结尾（最后一个字符之后）</td><td align="left"><code>^A\d&#123;3&#125;$</code> 可匹配 <code>A001</code>、<code>A380</code></td></tr><tr><td align="left"><code>.</code></td><td align="left">除 <code>\n</code>、<code>\r</code> 之外的任意单个字符</td><td align="left">注意 <code>[.]</code> 只会匹配 <code>.</code> 字符，等价于 <code>\.</code></td></tr><tr><td align="left"><code>A</code></td><td align="left">指定字符 <code>A</code></td><td align="left"></td></tr><tr><td align="left"><code>\u548c</code></td><td align="left">指定 Unicode 字符</td><td align="left"><code>\u548c</code> 可匹配 <code>和</code></td></tr><tr><td align="left"><code>\b</code></td><td align="left">匹配一个单词边界，即字与空格间的位置</td><td align="left">作用类似于 <code>^</code>、<code>$</code>，注意 <code>\bCha</code> 和 <code>Cha\b</code> 的区别</td></tr><tr><td align="left"><code>\B</code></td><td align="left"><code>\b</code> 的反义，即非单词边界匹配</td><td align="left"></td></tr><tr><td align="left"><code>\d</code></td><td align="left">数字 <code>0~9</code></td><td align="left">相当于 <code>[0-9]</code></td></tr><tr><td align="left"><code>\D</code></td><td align="left"><code>\d</code> 的反义，即非数字</td><td align="left">相当于 <code>[^0-9]</code></td></tr><tr><td align="left"><code>\w</code></td><td align="left">大小写字母，数字和下划线</td><td align="left">相当于 <code>[A-Za-z0-9_]</code></td></tr><tr><td align="left"><code>\W</code></td><td align="left"><code>\w</code> 的反义</td><td align="left"></td></tr><tr><td align="left"><code>\s</code></td><td align="left">匹配空白字符，如空格、制表符等</td><td align="left">相当于 <code>[ \t\v\r\n\f]</code></td></tr><tr><td align="left"><code>\S</code></td><td align="left"><code>\s</code> 的反义，即非空白符</td><td align="left"></td></tr><tr><td align="left"><code>*</code></td><td align="left">任意个数</td><td align="left"><code>A*</code> 可匹配 <code> </code>、<code>A</code>、<code>AA</code>、<code>AAA</code>、…</td></tr><tr><td align="left"><code>+</code></td><td align="left">至少一个</td><td align="left"><code>A+</code> 可匹配 <code>A</code>、<code>AA</code>、…</td></tr><tr><td align="left"><code>?</code></td><td align="left">0 或 1 个（也用于 <code>非贪婪匹配</code> ）</td><td align="left"><code>A?</code> 可匹配 <code> </code>、<code>A</code></td></tr><tr><td align="left"><code>&#123;3&#125;</code></td><td align="left">指定个数，此处指定为 <code>3</code> 个</td><td align="left"><code>A&#123;3&#125;</code> 可匹配 <code>AAA</code></td></tr><tr><td align="left"><code>&#123;2,3&#125;</code></td><td align="left">指定个数范围</td><td align="left"><code>A&#123;2,3&#125;</code> 可匹配 <code>AA</code>、<code>AAA</code></td></tr><tr><td align="left"><code>&#123;2,&#125;</code></td><td align="left">至少个数，此处为至少 <code>2</code> 个</td><td align="left"><code>A&#123;2,&#125;</code> 可匹配 <code>AA</code>、<code>AAA</code>、<code>AAAA</code>、…</td></tr><tr><td align="left"><code>&#123;0,2&#125;</code></td><td align="left">至多个数，此处为至多 <code>2</code> 个</td><td align="left"><code>A&#123;0,2&#125;</code> 可匹配 <code> </code>、<code>A</code>、<code>AA</code></td></tr><tr><td align="left"><code>X|Y</code></td><td align="left">匹配 <code>X</code> 或 <code>Y</code></td><td align="left"><code>(z|f)ood</code> 可匹配 <code>zood</code> 和 <code>food</code></td></tr><tr><td align="left"><code>[ABC]</code></td><td align="left">匹配 <code>[...]</code> 内的任意单个字符</td><td align="left"><code>[ABC]</code> 可匹配 <code>A</code>、<code>B</code>、<code>C</code></td></tr><tr><td align="left"><code>[^ABC]</code></td><td align="left">匹配除指定字符之外的任意单个字符</td><td align="left"><code>[^ABC]</code> 可匹配 <code>D</code>、<code>1</code>、<code>_</code></td></tr><tr><td align="left"><code>[A-C1-3X]</code></td><td align="left">匹配指定范围内的单个字符</td><td align="left"><code>[A-C1-3XY]</code> 可匹配 <code>A</code>、<code>B</code>、<code>C</code>、<code>1</code>、<code>2</code>、<code>3</code>、<code>X</code></td></tr><tr><td align="left"><code>[^A-C]</code></td><td align="left">匹配指定范围之外的任意单个字符</td><td align="left"><code>[^A-C]</code> 可匹配 <code>D</code>、<code>1</code>、<code>_</code>、…</td></tr><tr><td align="left"><code>ex1(?=ex2)</code></td><td align="left">查找 <code>ex1</code>，但后面是 <code>ex2</code></td><td align="left"></td></tr><tr><td align="left"><code>ex1(?!ex2)</code></td><td align="left">查找 <code>ex1</code>，但后面不是 <code>ex2</code></td><td align="left"></td></tr><tr><td align="left"><code>(?&lt;=ex2)ex1</code></td><td align="left">查找 <code>ex1</code>，但前面是 <code>ex2</code></td><td align="left"></td></tr><tr><td align="left"><code>(?&lt;!ex2)ex1</code></td><td align="left">查找 <code>ex1</code>，但前面不是 <code>ex2</code></td><td align="left"></td></tr></tbody></table><blockquote><ul><li>可使用 <code>(...)</code> 将子规则括起来</li><li>定位符（如 <code>^</code>、<code>$</code>、<code>/b</code>、<code>/B</code>）<strong>不能</strong>与限定符（<code>?</code>、<code>*</code>、<code>+</code>、<code>&#123;2,4&#125;</code> 等）一起使用</li></ul></blockquote><p>正则表达式默认使用<strong>贪婪匹配</strong>：任何一个规则，它总是尽可能多地向后匹配。<br><code>*</code> 和 <code>+</code> 限定符都是贪婪的，它们会尽可能多的匹配文字，在它们的后面加上一个 <code>?</code> 可以实现非贪婪或最小匹配。</p><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><p>带有修饰符的正则表达式格式：<code>/pattern/flags</code></p><table><thead><tr><th align="left">修饰符 flags</th><th align="left">含义</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left"><code>i</code></td><td align="left">不区分大小写</td><td align="left">默认区分大小写</td></tr><tr><td align="left"><code>g</code></td><td align="left">全局匹配</td><td align="left">查找所有匹配项，默认找到一项就停止</td></tr><tr><td align="left"><code>m</code></td><td align="left">多行匹配</td><td align="left">使边界字符 <code>^</code> 和 <code>$</code> 匹配<strong>每一行</strong>的开头和结尾</td></tr><tr><td align="left"><code>s</code></td><td align="left">特殊字符圆点 <code>.</code> 中包含换行符 <code>\n</code></td><td align="left">默认是不包含的</td></tr></tbody></table><h2 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h2><table><thead><tr><th align="left">字符</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>\cx</code></td><td align="left">匹配由 <code>x</code> 指明的控制字符。例如 <code>\cM</code> 匹配一个 Control-M 或回车符。<code>x</code> 的值必须为 A-Z 或 a-z 之一。否则，将 <code>c</code> 视为一个原义的 <code>&#39;c&#39;</code> 字符。</td></tr><tr><td align="left"><code>\t</code></td><td align="left">匹配一个制表符。等价于 <code>\x09</code> 和 <code>\cI</code></td></tr><tr><td align="left"><code>\v</code></td><td align="left">匹配一个垂直制表符。等价于 <code>\x0b</code> 和 <code>\cK</code></td></tr><tr><td align="left"><code>\r</code></td><td align="left">匹配一个回车符。等价于<code> \x0d</code> 和 <code>\cM</code></td></tr><tr><td align="left"><code>\n</code></td><td align="left">匹配一个换行符。等价于 <code>\x0a</code> 和 <code>\cJ</code></td></tr><tr><td align="left"><code>\f</code></td><td align="left">匹配一个换页符。等价于 <code>\x0c</code> 和 <code>\cL</code></td></tr><tr><td align="left"><code>\s</code></td><td align="left">匹配任何空白字符。等价于 <code>[ \t\v\r\n\f]</code>。注意 Unicode 正则表达式会匹配全角空格符。</td></tr><tr><td align="left"><code>\S</code></td><td align="left">匹配任何非空白字符。等价于 <code>[^ \t\v\r\n\f]</code></td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a class="link"   href="https://www.liaoxuefeng.com/wiki/1252599548343744/1304066080636961" >廖雪峰的官方网站-正则表达式<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.runoob.com/regexp/regexp-syntax.html" >菜鸟教程-正则表达式<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://tool.oschina.net/uploads/apidocs/jquery/regexp.html" >正则表达式手册<i class="fas fa-external-link-alt"></i></a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;正则表达式是用字符串描述的一个匹配规则，使用正则表达式可以快速判断给定的字符串是否符合匹配规则。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="通用工具" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%9A%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="正则表达式" scheme="https://kechocy.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>KMP 算法实现及改良</title>
    <link href="https://kechocy.github.io/posts/853edc9f.html"/>
    <id>https://kechocy.github.io/posts/853edc9f.html</id>
    <published>2022-04-18T06:41:02.000Z</published>
    <updated>2022-04-18T06:41:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>与每趟匹配失败都从头开始重新比较的暴力匹配算法不同，KMP 算法会按照已记录的数组移动到指定位置开始比较，能大幅提高效率。而该数组记录的内容仅与模式串本身结构相关，与主串无关。</p><span id="more"></span><h2 id="理论知识"><a href="#理论知识" class="headerlink" title="理论知识"></a>理论知识</h2><p>设：</p><ul><li><code>ababcabcacbab</code> 为主串, <code>i</code> 为主串的遍历指针</li><li><code>abcac</code> 为子串， <code>j</code> 为子串（也称模式串）的遍历指针</li><li><code>pm 数组</code>  为对应字符串的<a href="#%E6%89%8B%E5%8A%A8%E8%AE%A1%E7%AE%97%E9%83%A8%E5%88%86%E5%8C%B9%E9%85%8D%E5%80%BC"><strong>部分匹配值</strong></a></li><li><code>next 数组</code> 由 <code>pm 数组</code> 右移一位得到，其中规定 <code>next[0] = -1</code></li></ul><table><thead><tr><th align="left">index</th><th align="left">0</th><th align="left">1</th><th align="left">2</th><th align="left">3</th><th align="left">4</th></tr></thead><tbody><tr><td align="left">char</td><td align="left">a</td><td align="left">b</td><td align="left">c</td><td align="left">a</td><td align="left">c</td></tr><tr><td align="left">pm</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">next</td><td align="left">-1</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr></tbody></table><p>在 KMP 算法匹配过程中，假设第 j 位失配（从 0 编号）</p><p>已知：<code>移动位数 = 已经匹配的字符数（0 ~ j-1 共 j 个） - 最后一个匹配字符的部分匹配值（pm[j-1]）</code></p><p>记为：<code>move = j - pm[j-1]</code></p><p>替换：<code>move = j - next[j]</code></p><p>则 <code>j</code> 需要回退到 <code>j - move</code> 位置，即  <code>j = j - move = j - (j - next[j]) = next[j]</code> ，即 <code>j</code> 回退到 <code>next[j]</code> 位置</p><p>具体匹配过程：</p><ol><li><p>第一次匹配（失配时 <code>i = 2, j = 2</code>）</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><strong>i</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>主串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center"><code>a</code></td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center">b</td><td align="center">a</td><td align="center">b</td></tr><tr><td align="center"><strong>子串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center"><code>c</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>j</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>子串应向后移动 2 位，<code>j = 2</code> —-&gt; <code>j = 0</code> （<code>next[2] == 0</code>），<code>i = 2</code> —-&gt; <code>i = 2</code> （ i 不变）</p></blockquote></li><li><p>第二次匹配（失配时 <code>i = 6, j = 4</code>）</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><strong>i</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center"><code>2</code></td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center">6</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>主串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center"><code>b</code></td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center">b</td><td align="center">a</td><td align="center">b</td></tr><tr><td align="center"><strong>子串</strong>：</td><td align="center">#</td><td align="center">#</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center"><code>c</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>j</strong>：</td><td align="center"></td><td align="center"></td><td align="center"><code>0</code></td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>子串应继续向后移动 3 位，<code>j = 4</code> —-&gt; <code>j = 1</code> （<code>next[4] == 1</code>），<code>i = 6</code> —-&gt; <code>i = 6</code> （ i 不变）</p></blockquote></li><li><p>第三次匹配（匹配成功 <code>i = 10, j = 5</code>）</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><strong>i</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center"><code>6</code></td><td align="center">7</td><td align="center">8</td><td align="center">9</td><td align="center">10</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>主串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center">b</td><td align="center">a</td><td align="center">b</td></tr><tr><td align="center"><strong>子串</strong>：</td><td align="center">#</td><td align="center">#</td><td align="center">*</td><td align="center">*</td><td align="center">*</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>j</strong>：</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">0</td><td align="center"><code>1</code></td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>匹配成功，返回子串在主串中的首位置：<code>i - j = 5</code></p></blockquote></li></ol><p>所以 KMP 算法如何实现的问题就转化为如何构建 next 数组的问题。</p><p>手动如何求 next 数组呢？</p><ul><li>法一：先求部分匹配值，再右移得到 next 数组</li><li>法二：由 [0…j-1]个字符（已经匹配成功的字符）组成的串的最长相等前后缀长度就是 <code>next[j]</code></li></ul><blockquote><p>注：不同书中定义的 next 数组含义不同，有的是没有右移之前的，有的是右移一位的（如本文），有的是右移一位后数值再加 1 的，要具体情况具体分析。另外，本文中数组从 0 开始存字符，有的书可能从 1 开始，对应的代码会有些许差别。</p></blockquote><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>第一步：求 next 数组</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">getNextTable</span><span class="params">(string pattern,<span class="type">int</span> nextTable[])</span></span>&#123;  </span><br><span class="line">    nextTable[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">//第一个默认为-1  </span></span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>; <span class="comment">//j表示next数组下标  </span></span><br><span class="line">    <span class="type">int</span> k=nextTable[j]; <span class="comment">//k表示next数组的值  </span></span><br><span class="line">    <span class="keyword">while</span>(j &lt; pattern.<span class="built_in">size</span>())&#123; <span class="comment">//求next[j+1]  </span></span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span> || pattern[j] == pattern[k])&#123;  </span><br><span class="line">            nextTable[++j]=++k;  </span><br><span class="line">            <span class="comment">//相当于 j++; next[j]=k+1; 计算出 next[j+1]，然后令 k=next[j]; 继续循环</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            k = nextTable[k];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：根据 next 数组编写 KMP 算法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">KMP</span><span class="params">(string pattern, string str,<span class="type">int</span> nextTable[])</span></span>&#123;  </span><br><span class="line">    <span class="built_in">getNextTable</span>(pattern,nextTable);<span class="comment">//得到next数组  </span></span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>; <span class="type">int</span> j=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span>(i&lt;str.<span class="built_in">size</span>() &amp;&amp; j&lt;pattern.<span class="built_in">size</span>())&#123;  </span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || pattern[j]==str[i])&#123;  </span><br><span class="line">            i++; </span><br><span class="line">            j++; <span class="comment">//匹配成功则继续匹配  </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">            j = nextTable[j];<span class="comment">//匹配失败则回溯  </span></span><br><span class="line">        &#125;  </span><br><span class="line">    <span class="keyword">if</span>(j==pattern.<span class="built_in">size</span>())  </span><br><span class="line">        <span class="keyword">return</span> i-j; <span class="comment">//返回子串在主串的首位置(下标从零开始)  </span></span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>第三步：测试</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    string s=<span class="string">&quot;abcac&quot;</span>;  </span><br><span class="line">    string d=<span class="string">&quot;ababcabcacbab&quot;</span>;  </span><br><span class="line">    <span class="type">int</span> nextTable[s.<span class="built_in">size</span>()]; </span><br><span class="line">    cout&lt;&lt;<span class="built_in">KMP</span>(s,d,nextTable)&lt;&lt;endl; <span class="comment">//匹配成功返回子串在主串的首位置，不匹配返回 -1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="算法改良"><a href="#算法改良" class="headerlink" title="算法改良"></a>算法改良</h2><p>假设 <code>j == 3</code> 时失配，而 <code>next[3] == 2, next[2] == 1, next[1] == 0, next[0] == -1</code> （由计算 next 数组的规则可知，此时模式串中第 0、1、2 个字符必相同），则 <code>j</code> 需要依次回退到 <code>2</code>、<code>1</code>、<code>0</code>，我们可以改善 next 数组，让 <code>j</code> 直接回退到 <code>0</code> 位置，减少无效判断次数。</p><p>用 <code>nextval数组</code> 表示改良后的 <code>next数组</code>，过程如下：</p><ul><li>先算出 next 数组（<code>next[0] = -1</code>）</li><li>如果第 j 个字符和 j 的 next 所指向的字符相同，则它们的 nextval 值相同；否则让 j 的 nextval 值与 next 值相等。</li></ul><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">getNextvalTable</span><span class="params">(string pattern,<span class="type">int</span> nextvalTable[])</span></span>&#123;  </span><br><span class="line">    nextvalTable[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">//第一个默认为-1  </span></span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>; <span class="comment">//j表示nextval数组下标  </span></span><br><span class="line">    <span class="type">int</span> k=nextvalTable[j]; <span class="comment">//k表示nextval数组的值  </span></span><br><span class="line">    <span class="keyword">while</span>(j &lt; pattern.<span class="built_in">size</span>())&#123; <span class="comment">//求nextval[j+1]  </span></span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span> || pattern[j] == pattern[k])&#123;  </span><br><span class="line">            <span class="keyword">if</span>(pattern[++j] == pattern[++k])</span><br><span class="line">                nextvalTable[j] = nextvalTable[k]; </span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nextvalTable[j] = k; <span class="comment">//相当于nextval[j+1]=k+1; k=nextval[j+1]; j++;  </span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            k = nextvalTable[k];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>KMP 算法只要将其调用的函数 <code>getNextTable</code> 改为 <code>getNextvalTable</code> ，其余保持不变。</p><h2 id="手动计算部分匹配值"><a href="#手动计算部分匹配值" class="headerlink" title="手动计算部分匹配值"></a>手动计算部分匹配值</h2><p><code>部分匹配值</code>为字符串的前缀和后缀的最长相等前后缀长度，以 <code>ababa</code> 为例：</p><ul><li><code>a</code> 的前缀和后缀都为空集，最长相等前后缀长度为 0</li><li><code>ab</code> 的前缀为 { a }，后缀为 { b } ，交集为空集，最长相等前后缀长度为 0</li><li><code>aba</code> 的前缀为 { a, ab }，后缀为 { a, ba }，交集为 { a }，最长相等前后缀长度为 1</li><li><code>abab</code> 的前缀为 { a, ab, aba }，后缀为 { b, ab, bab }，交集为 { ab }，最长相等前后缀长度为 2</li><li><code>ababa</code> 的前缀为 { a, ab, aba, abab }，后缀为 { a, ba, aba, baba }，交集为 { a, aba }，最长相等前后缀长度为 3<br>所以字符串 <code>ababa</code> 的部分匹配值为 <code>00123</code></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>《王道数据结构考研复习指导》</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;与每趟匹配失败都从头开始重新比较的暴力匹配算法不同，KMP 算法会按照已记录的数组移动到指定位置开始比较，能大幅提高效率。而该数组记录的内容仅与模式串本身结构相关，与主串无关。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据结构与算法" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="KMP" scheme="https://kechocy.github.io/tags/KMP/"/>
    
    <category term="算法" scheme="https://kechocy.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="https://kechocy.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Handsome 主题美化教程</title>
    <link href="https://kechocy.github.io/posts/ffa86c2a.html"/>
    <id>https://kechocy.github.io/posts/ffa86c2a.html</id>
    <published>2022-04-17T02:37:44.000Z</published>
    <updated>2022-04-17T02:37:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://www.ihewro.com/archives/489/" >Handsome<i class="fas fa-external-link-alt"></i></a> 是一款收费的 Typecho 主题，本文给出的 Handsome 主题美化教程收集自网络，部分内容可能随着主题更新而失效。</p><span id="more"></span><h2 id="首页列表最前方广告位"><a href="#首页列表最前方广告位" class="headerlink" title="首页列表最前方广告位"></a>首页列表最前方广告位</h2><h3 id="新年倒计时"><a href="#新年倒计时" class="headerlink" title="新年倒计时"></a>新年倒计时</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"> </span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.gn_box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: none;     </span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">15px</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.gn_box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#fff</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_d</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#982585</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_h</span> &#123; </span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#8f79c1</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_m</span> &#123; </span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#65b4b5</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_s</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#83caa3</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gn_box&quot;</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#E80017</span>&gt;</span>2<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#D1002E</span>&gt;</span>0<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#BA0045</span>&gt;</span>2<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#A3005C</span>&gt;</span>1<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span>  <span class="attr">color</span>=<span class="string">#8C0073</span>&gt;</span>年<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#75008A</span>&gt;</span>-<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#5E00A1</span>&gt;</span>新<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#4700B8</span>&gt;</span>年<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#3000CF</span>&gt;</span>倒<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#1900E6</span>&gt;</span>计<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0200FD</span>&gt;</span>时<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;CountMsg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;HotDate&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_d&quot;</span>&gt;</span> 天<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_h&quot;</span>&gt;</span> 时<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_m&quot;</span>&gt;</span> 分<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_s&quot;</span>&gt;</span> 秒<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">getRTime</span>(<span class="params"></span>) &#123;   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> <span class="title class_">EndTime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2021/02/12 00:00:00&#x27;</span>);  </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> <span class="title class_">NowTime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();  </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> t = <span class="title class_">EndTime</span>.<span class="title function_">getTime</span>() - <span class="title class_">NowTime</span>.<span class="title function_">getTime</span>();   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> d = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> h = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> m = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> / <span class="number">60</span> % <span class="number">60</span>);   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> s = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> % <span class="number">60</span>); </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> day = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_d&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (day != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          day.<span class="property">innerHTML</span> = d + <span class="string">&quot; 天&quot;</span>;   </span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> hour = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_h&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (hour != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          hour.<span class="property">innerHTML</span> = h + <span class="string">&quot; 时&quot;</span>;  </span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> min = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_m&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (min != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          min.<span class="property">innerHTML</span> = m + <span class="string">&quot; 分&quot;</span>;   </span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> sec = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_s&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (sec != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          sec.<span class="property">innerHTML</span> = s + <span class="string">&quot; 秒&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;   </span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setInterval</span>(getRTime, <span class="number">1000</span>);   </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自定义-CSS"><a href="#自定义-CSS" class="headerlink" title="自定义 CSS"></a>自定义 CSS</h2><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><h3 id="头像呼吸环和鼠标悬停旋转放大"><a href="#头像呼吸环和鼠标悬停旋转放大" class="headerlink" title="头像呼吸环和鼠标悬停旋转放大"></a>头像呼吸环和鼠标悬停旋转放大</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img-full</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">animation</span>: light <span class="number">4s</span> ease-in-out infinite;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.img-full</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.15</span>) <span class="built_in">rotate</span>(<span class="number">720deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> light &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">#f00</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">25%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span> <span class="number">#0f0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">50%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">#00f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">75%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span> <span class="number">#0f0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">#f00</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打赏图标跳动"><a href="#打赏图标跳动" class="headerlink" title="打赏图标跳动"></a>打赏图标跳动</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn-pay</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: star <span class="number">0.5s</span> ease-in-out infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> star &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义鼠标指针"><a href="#自定义鼠标指针" class="headerlink" title="自定义鼠标指针"></a>自定义鼠标指针</h3><p>可以使用下面代码，或者直接下载插件 <a class="link"   href="https://www.vidcss.com/364.html" >HoerMouse<i class="fas fa-external-link-alt"></i></a> 使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27;鼠标指针图片链接&#x27;</span>), auto;</span><br><span class="line">&#125;</span><br><span class="line">select, <span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">a</span>, <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27;鼠标指针图片链接&#x27;</span>), auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[disabled]</span>, select<span class="selector-attr">[disabled]</span>, <span class="selector-tag">textarea</span><span class="selector-attr">[disabled]</span>, <span class="selector-tag">input</span><span class="selector-attr">[readonly]</span>, select<span class="selector-attr">[readonly]</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27;鼠标指针图片链接&#x27;</span>), auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义右侧滚动条"><a href="#自定义右侧滚动条" class="headerlink" title="自定义右侧滚动条"></a>自定义右侧滚动条</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class="line">::-webkit-scrollbar&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*定义滚动条轨道 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-track&#123;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*定义滑块 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-thumb&#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章列表悬浮"><a href="#首页文章列表悬浮" class="headerlink" title="首页文章列表悬浮"></a>首页文章列表悬浮</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-post</span> <span class="selector-class">.panel</span><span class="selector-pseudo">:not</span>(<span class="selector-tag">article</span>) &#123;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blog-post</span> <span class="selector-class">.panel</span><span class="selector-pseudo">:not</span>(<span class="selector-tag">article</span>)<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">10px</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">15px</span> <span class="built_in">rgba</span>(<span class="number">73</span>, <span class="number">90</span>, <span class="number">47</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章列表宽度"><a href="#首页文章列表宽度" class="headerlink" title="首页文章列表宽度"></a>首页文章列表宽度</h3><p>盒子模型下我感觉页面有点小，但非盒子模型下首页文章列表感觉太宽了，特别在首页设置了大头图情况下，图片看起来就更不美观了，所以可以用以下代码改窄一点。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-post</span>&#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">900px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章版式阴影化"><a href="#首页文章版式阴影化" class="headerlink" title="首页文章版式阴影化"></a>首页文章版式阴影化</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.panel</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.panel-small</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> p3x <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.panel-small</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> p3x <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.app</span><span class="selector-class">.container</span> &#123;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.baidu-record</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: normal normal normal <span class="number">12px</span>/<span class="number">1</span> FontAwesome;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\f024&quot;</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章标题颜色渐变"><a href="#首页文章标题颜色渐变" class="headerlink" title="首页文章标题颜色渐变"></a>首页文章标题颜色渐变</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.index-post-title</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>:<span class="built_in">rgba</span>(<span class="number">107</span>, <span class="number">209</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">     <span class="attribute">transition</span>:color <span class="number">0.2s</span> linear</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文章标题居中"><a href="#文章标题居中" class="headerlink" title="文章标题居中"></a>文章标题居中</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span> <span class="selector-tag">h2</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-item-foot-icon</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文章图片悬停放大"><a href="#文章图片悬停放大" class="headerlink" title="文章图片悬停放大"></a>文章图片悬停放大</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.entry-thumbnail</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果想放大并超出范围请删除上面代码*/</span></span><br><span class="line"><span class="selector-id">#post-content</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#post-content</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.05</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文章末尾转载说明"><a href="#文章末尾转载说明" class="headerlink" title="文章末尾转载说明"></a>文章末尾转载说明</h3><p>可使用插件 <a class="link"   href="https://github.com/Yves-X/Copyright-for-Typecho" >Copyright<i class="fas fa-external-link-alt"></i></a></p><h2 id="自定义-JavaScript"><a href="#自定义-JavaScript" class="headerlink" title="自定义 JavaScript"></a>自定义 JavaScript</h2><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><h3 id="鼠标点击爱心"><a href="#鼠标点击爱心" class="headerlink" title="鼠标点击爱心"></a>鼠标点击爱心</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">! <span class="keyword">function</span> (<span class="params">e, t, a</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">c</span>(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>), <span class="title function_">o</span>(), <span class="title function_">r</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">r</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.<span class="property">length</span>; e++) d[e].<span class="property">alpha</span> &lt;= <span class="number">0</span> ? (t.<span class="property">body</span>.<span class="title function_">removeChild</span>(d[e].<span class="property">el</span>), d.<span class="title function_">splice</span>(e, <span class="number">1</span>)) : (d[e].<span class="property">y</span>--, d[e].<span class="property">scale</span> += <span class="number">.004</span>, d[e].<span class="property">alpha</span> -= <span class="number">.013</span>, d[e].<span class="property">el</span>.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&quot;left:&quot;</span> + d[e].<span class="property">x</span> + <span class="string">&quot;px;top:&quot;</span> + d[e].<span class="property">y</span> + <span class="string">&quot;px;opacity:&quot;</span> + d[e].<span class="property">alpha</span> + <span class="string">&quot;;transform:scale(&quot;</span> + d[e].<span class="property">scale</span> + <span class="string">&quot;,&quot;</span> + d[e].<span class="property">scale</span> + <span class="string">&quot;) rotate(45deg);background:&quot;</span> + d[e].<span class="property">color</span> + <span class="string">&quot;;z-index:99999&quot;</span>);</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(r)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e.<span class="property">onclick</span> &amp;&amp; e.<span class="property">onclick</span>;</span><br><span class="line">    e.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      t &amp;&amp; <span class="title function_">t</span>(), <span class="title function_">i</span>(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    a.<span class="property">className</span> = <span class="string">&quot;heart&quot;</span>, d.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">el</span>: a,</span><br><span class="line">      <span class="attr">x</span>: e.<span class="property">clientX</span> - <span class="number">5</span>,</span><br><span class="line">      <span class="attr">y</span>: e.<span class="property">clientY</span> - <span class="number">5</span>,</span><br><span class="line">      <span class="attr">scale</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">alpha</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">color</span>: <span class="title function_">s</span>()</span><br><span class="line">    &#125;), t.<span class="property">body</span>.<span class="title function_">appendChild</span>(a)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);</span><br><span class="line">    a.<span class="property">type</span> = <span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      a.<span class="title function_">appendChild</span>(t.<span class="title function_">createTextNode</span>(e))</span><br><span class="line">    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">      a.<span class="property">styleSheet</span>.<span class="property">cssText</span> = e</span><br><span class="line">    &#125;</span><br><span class="line">    t.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(a)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;rgb(&quot;</span> + ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) + <span class="string">&quot;,&quot;</span> + ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) + <span class="string">&quot;,&quot;</span> + ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) + <span class="string">&quot;)&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> d = [];</span><br><span class="line">  e.<span class="property">requestAnimationFrame</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">requestAnimationFrame</span> || e.<span class="property">webkitRequestAnimationFrame</span> || e.<span class="property">mozRequestAnimationFrame</span> || e.<span class="property">oRequestAnimationFrame</span> || e.<span class="property">msRequestAnimationFrame</span> || <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;(), <span class="title function_">n</span>()</span><br><span class="line">&#125;(<span class="variable language_">window</span>, <span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure><h3 id="彩色数字"><a href="#彩色数字" class="headerlink" title="彩色数字"></a>彩色数字</h3><p>可用于将左侧各分类下文章数目变成彩色数字，右侧博客信息变成彩色，标签变成彩色。<br><strong>如果启用 pjax，添加自定义 JavaScript 的同时还要将代码放入 pjax 函数中，否则无效。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> tags = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#tag_cloud-2 a&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> infos = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.badge&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> colorArr = [<span class="string">&quot;#428BCA&quot;</span>, <span class="string">&quot;#AEDCAE&quot;</span>, <span class="string">&quot;#ECA9A7&quot;</span>, <span class="string">&quot;#DA99FF&quot;</span>, <span class="string">&quot;#FFB380&quot;</span>, <span class="string">&quot;#D9B999&quot;</span>];</span><br><span class="line">tags.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    tagsColor = colorArr[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colorArr.<span class="property">length</span>)];</span><br><span class="line">    tag.<span class="property">style</span>.<span class="property">backgroundColor</span> = tagsColor;</span><br><span class="line">&#125;);</span><br><span class="line">infos.<span class="title function_">forEach</span>(<span class="function"><span class="params">info</span> =&gt;</span> &#123;</span><br><span class="line">    infosColor = colorArr[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colorArr.<span class="property">length</span>)];</span><br><span class="line">    info.<span class="property">style</span>.<span class="property">backgroundColor</span> = infosColor;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="网页标签获得-x2F-失去焦点时更改标题内容"><a href="#网页标签获得-x2F-失去焦点时更改标题内容" class="headerlink" title="网页标签获得&#x2F;失去焦点时更改标题内容"></a>网页标签获得&#x2F;失去焦点时更改标题内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//网页标签获得/失去焦点时更改标题内容</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;visibilitychange&quot;</span>,</span><br><span class="line"><span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;怎么走了(；д｀)ゞ&quot;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;回来了ヾ(◍°∇°◍)ﾉﾞ)&quot;</span>;</span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">2000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="多处组合改动"><a href="#多处组合改动" class="headerlink" title="多处组合改动"></a>多处组合改动</h2><h3 id="复制弹窗提醒"><a href="#复制弹窗提醒" class="headerlink" title="复制弹窗提醒"></a>复制弹窗提醒</h3><p>第一步：将 <a class="link"   href="https://gist.githubusercontent.com/kechocy/80fb24f33b6e3cc16c76ba09d2096277/raw/2243af994d60c1912d6c656bacacd54e143f3cad/layer.js" >layer.js<i class="fas fa-external-link-alt"></i></a> 保存至自己的服务器上。</p><p>第二步：将以下代码添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义输出 head 头部的 HTML 代码</code>，注意修改引用路径。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://xxxx/layer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三步：将以下代码添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">oncopy</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;layer.<span class="title function_">msg</span>(<span class="string">&#x27;复制成功，若要转载请务必保留本文链接！&#x27;</span>);&#125;;</span><br></pre></td></tr></table></figure><h3 id="彩色-3D-云标签"><a href="#彩色-3D-云标签" class="headerlink" title="彩色 3D 云标签"></a>彩色 3D 云标签</h3><ul><li><p>彩色标签<br>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#d02f53</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">colorfultags</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> tags = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#tag_cloud-2 a&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> colorArr = [<span class="string">&quot;#f60&quot;</span>, <span class="string">&quot;#45B6F7&quot;</span>, <span class="string">&quot;#15a287&quot;</span>, <span class="string">&quot;#5cb85c&quot;</span>, <span class="string">&quot;#d9534f&quot;</span>, <span class="string">&quot;#567e95&quot;</span>, <span class="string">&quot;#00a67c&quot;</span>, <span class="string">&quot;#b37333&quot;</span>];</span><br><span class="line"><span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line">tags.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    tagsColor = colorArr[count%<span class="number">8</span>];</span><br><span class="line">    tag.<span class="property">style</span>.<span class="property">backgroundColor</span> = tagsColor;</span><br><span class="line">    count++;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span>=<span class="title function_">colorfultags</span>();</span><br></pre></td></tr></table></figure></li><li><p>3D 标签<br>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">240px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> black;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3d标签，和css搭配使用</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">around3D</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> oDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tag_cloud-2&#x27;</span>).<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">null</span> == oDiv) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> radius = <span class="number">80</span>;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">var</span> dtr = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>;</span><br><span class="line">    <span class="keyword">var</span> mcList = [];</span><br><span class="line">    <span class="keyword">var</span> lasta = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> lastb = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> distr = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> tspeed = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">var</span> size = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">var</span> mouseX = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> mouseY = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> howElliptical = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> aA = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> oTag = <span class="literal">null</span>;</span><br><span class="line">    aA = oDiv.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      oTag = &#123;&#125;;</span><br><span class="line">      aA[i].<span class="property">onmouseover</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          obj.<span class="property">on</span> = <span class="literal">true</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="number">9999</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#0099ff&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px 5px&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=100)&quot;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)(oTag)</span><br><span class="line">      aA[i].<span class="property">onmouseout</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          obj.<span class="property">on</span> = <span class="literal">false</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#30899B&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * obj.<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = obj.<span class="property">alpha</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)(oTag)</span><br><span class="line">      oTag.<span class="property">offsetWidth</span> = aA[i].<span class="property">offsetWidth</span>;</span><br><span class="line">      oTag.<span class="property">offsetHeight</span> = aA[i].<span class="property">offsetHeight</span>;</span><br><span class="line">      mcList.<span class="title function_">push</span>(oTag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sineCosine</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_">positionAll</span>();</span><br><span class="line">    (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">update</span>();</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>, <span class="number">40</span>);</span><br><span class="line">    &#125;)();</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> a, b, c = <span class="number">0</span>;</span><br><span class="line">      a = (<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseY, -size), size) / radius) * tspeed;</span><br><span class="line">      b = (-<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseX, -size), size) / radius) * tspeed;</span><br><span class="line">      lasta = a;</span><br><span class="line">      lastb = b;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(a) &lt;= <span class="number">0.01</span> &amp;&amp; <span class="title class_">Math</span>.<span class="title function_">abs</span>(b) &lt;= <span class="number">0.01</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">sineCosine</span>(a, b, c);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> rx1 = mcList[i].<span class="property">cx</span>;</span><br><span class="line">        <span class="keyword">var</span> ry1 = mcList[i].<span class="property">cy</span> * ca + mcList[i].<span class="property">cz</span> * (-sa);</span><br><span class="line">        <span class="keyword">var</span> rz1 = mcList[i].<span class="property">cy</span> * sa + mcList[i].<span class="property">cz</span> * ca;</span><br><span class="line">        <span class="keyword">var</span> rx2 = rx1 * cb + rz1 * sb;</span><br><span class="line">        <span class="keyword">var</span> ry2 = ry1;</span><br><span class="line">        <span class="keyword">var</span> rz2 = rx1 * (-sb) + rz1 * cb;</span><br><span class="line">        <span class="keyword">var</span> rx3 = rx2 * cc + ry2 * (-sc);</span><br><span class="line">        <span class="keyword">var</span> ry3 = rx2 * sc + ry2 * cc;</span><br><span class="line">        <span class="keyword">var</span> rz3 = rz2;</span><br><span class="line">        mcList[i].<span class="property">cx</span> = rx3;</span><br><span class="line">        mcList[i].<span class="property">cy</span> = ry3;</span><br><span class="line">        mcList[i].<span class="property">cz</span> = rz3;</span><br><span class="line">        per = d / (d + rz3);</span><br><span class="line">        mcList[i].<span class="property">x</span> = (howElliptical * rx3 * per) - (howElliptical * <span class="number">2</span>);</span><br><span class="line">        mcList[i].<span class="property">y</span> = ry3 * per;</span><br><span class="line">        mcList[i].<span class="property">scale</span> = per;</span><br><span class="line">        <span class="keyword">var</span> alpha = per;</span><br><span class="line">        alpha = (alpha - <span class="number">0.6</span>) * (<span class="number">10</span> / <span class="number">6</span>);</span><br><span class="line">        mcList[i].<span class="property">alpha</span> = alpha * alpha * alpha - <span class="number">0.2</span>;</span><br><span class="line">        mcList[i].<span class="property">zIndex</span> = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">100</span> - <span class="title class_">Math</span>.<span class="title function_">floor</span>(mcList[i].<span class="property">cz</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">doPosition</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">depthSort</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">var</span> aTmp = [];</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        aTmp.<span class="title function_">push</span>(aA[i]);</span><br><span class="line">      &#125;</span><br><span class="line">      aTmp.<span class="title function_">sort</span>(</span><br><span class="line">        <span class="keyword">function</span>(<span class="params">vItem1, vItem2</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &gt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &lt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aTmp.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        aTmp[i].<span class="property">style</span>.<span class="property">zIndex</span> = i;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">positionAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> phi = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">var</span> theta = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">var</span> max = mcList.<span class="property">length</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (distr) &#123;</span><br><span class="line">          phi = <span class="title class_">Math</span>.<span class="title function_">acos</span>(-<span class="number">1</span> + (<span class="number">2</span> * (i + <span class="number">1</span>) - <span class="number">1</span>) / max);</span><br><span class="line">          theta = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(max * <span class="title class_">Math</span>.<span class="property">PI</span>) * phi;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          phi = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">          theta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">2</span>* <span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        mcList[i].<span class="property">cx</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">        mcList[i].<span class="property">cy</span> = radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">        mcList[i].<span class="property">cz</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(phi);</span><br><span class="line">        aA[i].<span class="property">style</span>.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        aA[i].<span class="property">style</span>.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">doPosition</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> l = oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">var</span> t = oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> aAs = aA[i].<span class="property">style</span>;</span><br><span class="line">        <span class="keyword">if</span> (mcList[i].<span class="property">alpha</span> &gt; <span class="number">0.1</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            aAs.<span class="property">display</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">            aAs.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        aAs.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + l - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        aAs.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + t - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">        aAs.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * mcList[i].<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">        aAs.<span class="property">zIndex</span> = mcList[i].<span class="property">zIndex</span>;</span><br><span class="line">        aAs.<span class="property">opacity</span> = mcList[i].<span class="property">alpha</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">sineCosine</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">      sa = <span class="title class_">Math</span>.<span class="title function_">sin</span>(a * dtr);</span><br><span class="line">      ca = <span class="title class_">Math</span>.<span class="title function_">cos</span>(a * dtr);</span><br><span class="line">      sb = <span class="title class_">Math</span>.<span class="title function_">sin</span>(b * dtr);</span><br><span class="line">      cb = <span class="title class_">Math</span>.<span class="title function_">cos</span>(b * dtr);</span><br><span class="line">      sc = <span class="title class_">Math</span>.<span class="title function_">sin</span>(c * dtr);</span><br><span class="line">      cc = <span class="title class_">Math</span>.<span class="title function_">cos</span>(c * dtr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="title function_">around3D</span>();</span><br></pre></td></tr></table></figure><blockquote><p>如果启用了 pjax ，要实现 3D 彩色标签，则保持上面两个自定义 CSS 不变，将上面两个自定义 JavaScript 删掉，替换成下面这个自定义 JavaScript，然后后台 pjax 回调函数加上 <code>colorfultags();around3D();</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">colorfultags</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> tags = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#tag_cloud-2 a&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> colorArr = [<span class="string">&quot;#f60&quot;</span>, <span class="string">&quot;#45B6F7&quot;</span>, <span class="string">&quot;#15a287&quot;</span>, <span class="string">&quot;#5cb85c&quot;</span>, <span class="string">&quot;#d9534f&quot;</span>, <span class="string">&quot;#567e95&quot;</span>, <span class="string">&quot;#00a67c&quot;</span>, <span class="string">&quot;#b37333&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line">    tags.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">        tagsColor = colorArr[count%<span class="number">8</span>];</span><br><span class="line">        tag.<span class="property">style</span>.<span class="property">backgroundColor</span> = tagsColor;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">around3D</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> oDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tag_cloud-2&#x27;</span>).<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == oDiv) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> radius = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">var</span> dtr = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>;</span><br><span class="line">        <span class="keyword">var</span> mcList = [];</span><br><span class="line">        <span class="keyword">var</span> lasta = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> lastb = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> distr = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> tspeed = <span class="number">11</span>;</span><br><span class="line">        <span class="keyword">var</span> size = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">var</span> mouseX = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> mouseY = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">var</span> howElliptical = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> aA = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> oTag = <span class="literal">null</span>;</span><br><span class="line">        aA = oDiv.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            oTag = &#123;&#125;;</span><br><span class="line">            aA[i].<span class="property">onmouseover</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    obj.<span class="property">on</span> = <span class="literal">true</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="number">9999</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#0099ff&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px 5px&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=100)&quot;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = <span class="number">1</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)(oTag)</span><br><span class="line">            aA[i].<span class="property">onmouseout</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    obj.<span class="property">on</span> = <span class="literal">false</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#30899B&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * obj.<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = obj.<span class="property">alpha</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)(oTag)</span><br><span class="line">            oTag.<span class="property">offsetWidth</span> = aA[i].<span class="property">offsetWidth</span>;</span><br><span class="line">            oTag.<span class="property">offsetHeight</span> = aA[i].<span class="property">offsetHeight</span>;</span><br><span class="line">            mcList.<span class="title function_">push</span>(oTag);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">sineCosine</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="title function_">positionAll</span>();</span><br><span class="line">        (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">update</span>();</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>, <span class="number">40</span>);</span><br><span class="line">        &#125;)();</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a, b, c = <span class="number">0</span>;</span><br><span class="line">            a = (<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseY, -size), size) / radius) * tspeed;</span><br><span class="line">            b = (-<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseX, -size), size) / radius) * tspeed;</span><br><span class="line">            lasta = a;</span><br><span class="line">            lastb = b;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(a) &lt;= <span class="number">0.01</span> &amp;&amp; <span class="title class_">Math</span>.<span class="title function_">abs</span>(b) &lt;= <span class="number">0.01</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">sineCosine</span>(a, b, c);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> rx1 = mcList[i].<span class="property">cx</span>;</span><br><span class="line">                <span class="keyword">var</span> ry1 = mcList[i].<span class="property">cy</span> * ca + mcList[i].<span class="property">cz</span> * (-sa);</span><br><span class="line">                <span class="keyword">var</span> rz1 = mcList[i].<span class="property">cy</span> * sa + mcList[i].<span class="property">cz</span> * ca;</span><br><span class="line">                <span class="keyword">var</span> rx2 = rx1 * cb + rz1 * sb;</span><br><span class="line">                <span class="keyword">var</span> ry2 = ry1;</span><br><span class="line">                <span class="keyword">var</span> rz2 = rx1 * (-sb) + rz1 * cb;</span><br><span class="line">                <span class="keyword">var</span> rx3 = rx2 * cc + ry2 * (-sc);</span><br><span class="line">                <span class="keyword">var</span> ry3 = rx2 * sc + ry2 * cc;</span><br><span class="line">                <span class="keyword">var</span> rz3 = rz2;</span><br><span class="line">                mcList[i].<span class="property">cx</span> = rx3;</span><br><span class="line">                mcList[i].<span class="property">cy</span> = ry3;</span><br><span class="line">                mcList[i].<span class="property">cz</span> = rz3;</span><br><span class="line">                per = d / (d + rz3);</span><br><span class="line">                mcList[i].<span class="property">x</span> = (howElliptical * rx3 * per) - (howElliptical * <span class="number">2</span>);</span><br><span class="line">                mcList[i].<span class="property">y</span> = ry3 * per;</span><br><span class="line">                mcList[i].<span class="property">scale</span> = per;</span><br><span class="line">                <span class="keyword">var</span> alpha = per;</span><br><span class="line">                alpha = (alpha - <span class="number">0.6</span>) * (<span class="number">10</span> / <span class="number">6</span>);</span><br><span class="line">                mcList[i].<span class="property">alpha</span> = alpha * alpha * alpha - <span class="number">0.2</span>;</span><br><span class="line">                mcList[i].<span class="property">zIndex</span> = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">100</span> - <span class="title class_">Math</span>.<span class="title function_">floor</span>(mcList[i].<span class="property">cz</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">doPosition</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">depthSort</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> aTmp = [];</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                aTmp.<span class="title function_">push</span>(aA[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            aTmp.<span class="title function_">sort</span>(</span><br><span class="line">                <span class="keyword">function</span>(<span class="params">vItem1, vItem2</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &gt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &lt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aTmp.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                aTmp[i].<span class="property">style</span>.<span class="property">zIndex</span> = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">positionAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> phi = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> theta = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> max = mcList.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (distr) &#123;</span><br><span class="line">                    phi = <span class="title class_">Math</span>.<span class="title function_">acos</span>(-<span class="number">1</span> + (<span class="number">2</span> * (i + <span class="number">1</span>) - <span class="number">1</span>) / max);</span><br><span class="line">                    theta = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(max * <span class="title class_">Math</span>.<span class="property">PI</span>) * phi;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    phi = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">                    theta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                mcList[i].<span class="property">cx</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">                mcList[i].<span class="property">cy</span> = radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">                mcList[i].<span class="property">cz</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(phi);</span><br><span class="line">                aA[i].<span class="property">style</span>.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                aA[i].<span class="property">style</span>.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">doPosition</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> l = oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> t = oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> aAs = aA[i].<span class="property">style</span>;</span><br><span class="line">                <span class="keyword">if</span> (mcList[i].<span class="property">alpha</span> &gt; <span class="number">0.1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                        aAs.<span class="property">display</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">                        aAs.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                aAs.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + l - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                aAs.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + t - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                aAs.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * mcList[i].<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">                aAs.<span class="property">zIndex</span> = mcList[i].<span class="property">zIndex</span>;</span><br><span class="line">                aAs.<span class="property">opacity</span> = mcList[i].<span class="property">alpha</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">sineCosine</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">            sa = <span class="title class_">Math</span>.<span class="title function_">sin</span>(a * dtr);</span><br><span class="line">            ca = <span class="title class_">Math</span>.<span class="title function_">cos</span>(a * dtr);</span><br><span class="line">            sb = <span class="title class_">Math</span>.<span class="title function_">sin</span>(b * dtr);</span><br><span class="line">            cb = <span class="title class_">Math</span>.<span class="title function_">cos</span>(b * dtr);</span><br><span class="line">            sc = <span class="title class_">Math</span>.<span class="title function_">sin</span>(c * dtr);</span><br><span class="line">            cc = <span class="title class_">Math</span>.<span class="title function_">cos</span>(c * dtr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="文件改动"><a href="#文件改动" class="headerlink" title="文件改动"></a>文件改动</h2><h3 id="左侧导航全站友链显示头像"><a href="#左侧导航全站友链显示头像" class="headerlink" title="左侧导航全站友链显示头像"></a>左侧导航全站友链显示头像</h3><p>在 <code>aside.php</code> 文件中大约 213 行左右 “使用links插件，输出全站友链” 位置下方修改代码，在 php 代码中的 a 标签内加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">\</span>&quot;<span class="attr">width:18px</span>;<span class="attr">height:18px</span>;<span class="attr">border-radius:50</span>%;<span class="attr">margin-right:3px</span>;\&quot; <span class="attr">src</span>=<span class="string">\</span>&quot;&#123;<span class="attr">image</span>&#125;\&quot; /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="左、右下角彩色版权声明"><a href="#左、右下角彩色版权声明" class="headerlink" title="左、右下角彩色版权声明"></a>左、右下角彩色版权声明</h3><p>找到主题文件夹下 <code>handsomecomponentfooter.php</code> 文件，找到下方这段代码（在文件中可按 Ctrl+F 进行查找）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Powered by <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.typecho.org&quot;</span>&gt;</span>Typecho<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> | </span><br><span class="line">Theme by <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span><span class="attr">href</span>=<span class="string">&quot;https://www.ihewro.com/archives/489/&quot;</span>&gt;</span>handsome<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改为:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper bg-light&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--右下角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;pull-right hidden-xs text-ellipsis&quot;</span>&gt;</span></span><br><span class="line">        <span class="meta">&lt;?php $this-&gt;options-&gt;BottomInfo(); ?&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.typecho.org&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Typecho&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>Powered by<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-blue&quot;</span>&gt;</span>Typecho<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> | <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.ihewro.com/archives/489/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Handsome&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>Theme by<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-green&quot;</span>&gt;</span>Handsome<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--左下角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-ellipsis&quot;</span>&gt;</span></span><br><span class="line">        <span class="meta">&lt;?php $this-&gt;options-&gt;BottomleftInfo(); ?&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://blog.kecho.top&quot;</span> <span class="attr">title</span>=<span class="string">&quot;©2022 Kecho&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>Copyright<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-blue&quot;</span>&gt;</span>©2022 Kecho<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> | <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.beian.miit.gov.cn&quot;</span> <span class="attr">title</span>=<span class="string">&quot;赣ICP备 20004569号-1&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>备案号<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-green&quot;</span>&gt;</span>赣ICP备 20004569号-1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code>中添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*最底部版权声明样式*/</span></span><br><span class="line"><span class="selector-class">.github-badge</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#abbac3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-subject</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4d4d4d</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-value</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">6px</span> <span class="number">4px</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-blue</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#007ec6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-orange</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffa500</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-red</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f00</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-green</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3bca6e</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-purple</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ab34e9</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="网站顶部彩虹条"><a href="#网站顶部彩虹条" class="headerlink" title="网站顶部彩虹条"></a>网站顶部彩虹条</h3><p>第一步：将以下代码添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gundongtiao</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: gundongtiao <span class="number">1s</span> infinite linear;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>:<span class="number">9999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> gundongtiao&#123;</span><br><span class="line">    <span class="number">0%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>, <span class="number">#34aadc</span>, <span class="number">#5856d6</span>, <span class="number">#ff2d55</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">20%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>, <span class="number">#34aadc</span>,<span class="number">#5856d6</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">40%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>, <span class="number">#34aadc</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">60%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#34aadc</span>,<span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">80%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#007aff</span>,<span class="number">#34aadc</span>,<span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#5ac8fa</span>,<span class="number">#007aff</span>,<span class="number">#34aadc</span>,<span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：在网站文件 <code>footer.php</code> (文件路径为 <code>handsome/component/footer.php</code> )末尾添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gundongtiao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加访客-3D-地球"><a href="#添加访客-3D-地球" class="headerlink" title="添加访客 3D 地球"></a>添加访客 3D 地球</h3><p>找到 <code>handsome/component/sidebar.php</code> 下方代码位置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;li <span class="class"><span class="keyword">class</span>=&quot;<span class="title">list</span>-<span class="title">group</span>-<span class="title">item</span> <span class="title">text</span>-<span class="title">second</span>&quot;&gt;&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">blog</span>-<span class="title">info</span>-<span class="title">icons</span>&quot;&gt; &lt;<span class="title">i</span> <span class="title">data</span>-<span class="title">feather</span>=&quot;<span class="title">activity</span>&quot;&gt;&lt;/<span class="title">i</span>&gt;&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="class">     &lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">badge</span> </span></span><br><span class="line"><span class="class">        <span class="title">pull</span>-<span class="title">right</span>&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> <span class="title">Utils</span>::<span class="title">getLatestTime</span>($<span class="title">this</span>); ?&gt;&lt;/<span class="title">span</span>&gt;&lt;?<span class="title">php</span> <span class="title">_me</span>(&quot;最后活动&quot;) ?&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;/<span class="title">section</span>&gt; </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;!--插入位置--&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"> &lt;?<span class="title">php</span> <span class="title">endif</span>; ?&gt;</span></span><br><span class="line"><span class="class"> &lt;?<span class="title">php</span> <span class="title">if</span> ($<span class="title">this</span>-&gt;<span class="title">options</span>-&gt;<span class="title">adContentSidebar</span> != &quot;&quot;): ?&gt;</span></span><br><span class="line"><span class="class"> &lt;!--广告位置--&gt;</span></span><br><span class="line"><span class="class">     &lt;<span class="title">section</span> <span class="title">id</span>=&quot;<span class="title">a_d_sidebar</span>&quot; <span class="title">class</span>=&quot;<span class="title">widget</span> <span class="title">widget_categories</span> <span class="title">wrapper</span>-<span class="title">md</span> <span class="title">clear</span>&quot;&gt;</span></span><br><span class="line"><span class="class">         &lt;<span class="title">h5</span> <span class="title">class</span>=&quot;<span class="title">widget</span>-<span class="title">title</span> <span class="title">m</span>-<span class="title">t</span>-<span class="title">none</span> <span class="title">text</span>-<span class="title">md</span>&quot;&gt;&lt;?<span class="title">php</span> <span class="title">_me</span>(&quot;广告&quot;) ?&gt;&lt;/<span class="title">h5</span>&gt;</span></span><br><span class="line"><span class="class">         &lt;?<span class="title">php</span> $<span class="title">this</span>-&gt;<span class="title">options</span>-&gt;<span class="title">adContentSidebar</span>(); ?&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">section</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;?<span class="title">php</span> <span class="title">endif</span>; ?&gt;</span></span><br></pre></td></tr></table></figure><p>插入以下代码：（可以修改其中的 <code>height</code> 来调整大小）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--自定义访客地球--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;tag_cloud-2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;widget widget_tag_cloud wrapper-md clear&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title m-t-none text-md&quot;</span>&gt;</span>访客统计<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;visitors&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tags l-h-2x&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:185px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后去 <a class="link"   href="https://www.revolvermaps.com/" >RevolverMaps<i class="fas fa-external-link-alt"></i></a> 找自己喜欢的地球样式，并且把它给的 JavaScript 代码复制下来，然后将复制的代码进行转义，即将 <code>/</code> 改为 <code>\/</code> ，将 <code>&quot;</code> 改为 <code>\&quot;</code>，将转义后的代码和下方代码合并在一起，放到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(document).<span class="title function_ invoke__">ready</span>(function()&#123;</span><br><span class="line">$(<span class="string">&quot;#visitors&quot;</span>).<span class="title function_ invoke__">append</span>(<span class="string">&quot;这里是您在 RevolverMaps 地球网站上复制的转义后的代码&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(document).<span class="title function_ invoke__">on</span>(<span class="string">&#x27;pjax:complete&#x27;</span>, function() &#123;</span><br><span class="line">$(<span class="string">&#x27;#morphing&#x27;</span>).<span class="title function_ invoke__">tooltip</span>(<span class="string">&#x27;show&#x27;</span>); </span><br><span class="line">$(<span class="string">&quot;#visitors&quot;</span>).<span class="title function_ invoke__">append</span>(<span class="string">&quot;这里是您在 RevolverMaps 地球网站上复制的转义后的代码&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果你不会转义，也可以直接使用我转义好的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">\</span>&quot;<span class="attr">text</span>/<span class="attr">javascript</span>\&quot; <span class="attr">src</span>=<span class="string">\</span>&quot;//<span class="attr">rf.revolvermaps.com</span>/<span class="attr">0</span>/<span class="attr">0</span>/<span class="attr">8.js</span>?<span class="attr">i</span>=<span class="string">51frwlq4tnv&amp;m</span>=<span class="string">0&amp;c</span>=<span class="string">ff0000&amp;cr1</span>=<span class="string">ffffff&amp;f</span>=<span class="string">arial&amp;l</span>=<span class="string">33&amp;bv</span>=<span class="string">65\</span>&quot; <span class="attr">async</span>=<span class="string">\</span>&quot;<span class="attr">async</span>\&quot;&gt;</span>&lt;\/script&gt;</span><br></pre></td></tr></table></figure><h3 id="评论框打字特效"><a href="#评论框打字特效" class="headerlink" title="评论框打字特效"></a>评论框打字特效</h3><p>详见 <a class="link"   href="https://moe.best/modification/js-input-effect.html" >网页输入框打字特效<i class="fas fa-external-link-alt"></i></a></p><h3 id="左侧导航栏输出优化"><a href="#左侧导航栏输出优化" class="headerlink" title="左侧导航栏输出优化"></a>左侧导航栏输出优化</h3><p>详见 <a class="link"   href="https://blog.baoshuo.ren/post/handsome-leftbar-layout/" >Handsome 魔改教程：左侧边栏输出优化<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://www.ihewro.com/archives/489/&quot; &gt;Handsome&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt; 是一款收费的 Typecho 主题，本文给出的 Handsome 主题美化教程收集自网络，部分内容可能随着主题更新而失效。&lt;/p&gt;</summary>
    
    
    
    <category term="折腾记录" scheme="https://kechocy.github.io/categories/%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Handsome" scheme="https://kechocy.github.io/tags/Handsome/"/>
    
    <category term="Typecho" scheme="https://kechocy.github.io/tags/Typecho/"/>
    
  </entry>
  
</feed>
