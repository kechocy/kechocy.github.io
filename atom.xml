<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kecho&#39;s Blog</title>
  
  
  <link href="https://kechocy.github.io/atom.xml" rel="self"/>
  
  <link href="https://kechocy.github.io/"/>
  <updated>2025-09-06T06:58:21.000Z</updated>
  <id>https://kechocy.github.io/</id>
  
  <author>
    <name>kecho</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 Snail Job 定时任务同步 Welink 部门和用户信息</title>
    <link href="https://kechocy.github.io/posts/a7ea8c76.html"/>
    <id>https://kechocy.github.io/posts/a7ea8c76.html</id>
    <published>2025-09-06T06:58:21.000Z</published>
    <updated>2025-09-06T06:58:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将以同步 Welink 部门和用户为例，介绍如何使用 Snail Job 创建定时任务并适配 RuoYiPlus 项目。</p><span id="more"></span><p>在<a href="./6bcd8e4.html">上文</a>中实现了 Welink 的绑定与扫码登录功能，但是项目一开始是没有用户的，于是就有了本文，通过定时任务来获取 Welink 部门和用户信息构造系统部门和用户，并进行绑定。</p><p>如何使用 Snail Job 创建定时任务并启动可参考：<a class="link"   href="https://juejin.cn/post/7418074037392293914" >snail-job集群定时任务 | 掘金<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://snailjob.opensnail.com/docs/introduce/preface.html" >Snail Job  文档<i class="fas fa-external-link-alt"></i></a></p><h2 id="编写任务类"><a href="#编写任务类" class="headerlink" title="编写任务类"></a>编写任务类</h2><p>CreateDeptAndUserFromWelinkJob.java 中使用 @JobExecutor 注解给任务命名，在后台创建任务时就不需要全限定类名，需要编写 jobExecute 方法来完成实际操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@JobExecutor(name = &quot;createDeptAndUserFromWelinkJob&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CreateDeptAndUserFromWelinkJob</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SocialProperties socialProperties;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ISysDeptService deptService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ISysUserService userService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ISysSocialService socialService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ISysTenantService tenantService;</span><br><span class="line">    <span class="keyword">private</span> List&lt;SysDeptBo&gt; deptBoList; <span class="comment">// 部门列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;SysUserBo&gt; userBoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(); <span class="comment">// 用户列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SOURCE</span> <span class="operator">=</span> <span class="string">&quot;welink&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String accessToken;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getAccessToken</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SocialLoginConfigProperties</span> <span class="variable">obj</span> <span class="operator">=</span> socialProperties.getType().get(SOURCE);</span><br><span class="line">        <span class="keyword">if</span> (ObjectUtil.isNull(obj)) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;not find &#123;&#125; application profile&quot;</span>, SOURCE);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">AuthRequest</span> <span class="variable">authRequest</span> <span class="operator">=</span> SocialUtils.getAuthRequest(SOURCE, socialProperties);</span><br><span class="line">        <span class="type">AuthToken</span> <span class="variable">authToken</span> <span class="operator">=</span> authRequest.getAccessToken(<span class="keyword">new</span> <span class="title class_">AuthCallback</span>());</span><br><span class="line">        accessToken = authToken.getAccessToken();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">getDeptList</span><span class="params">(String deptRootCode)</span> &#123;</span><br><span class="line">        <span class="type">JSONArray</span> <span class="variable">allDeptJsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">50</span>; <span class="comment">// 最大 100</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageNo</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasMore</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        getAccessToken();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( StringUtils.isEmpty(accessToken)) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; get access token fail&quot;</span>, SOURCE);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            Map&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            headers.put(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">            headers.put(<span class="string">&quot;x-wlk-gray&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">            headers.put(<span class="string">&quot;x-wlk-Authorization&quot;</span>, accessToken);</span><br><span class="line"></span><br><span class="line">            Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            params.put(<span class="string">&quot;deptCode&quot;</span>, deptRootCode);</span><br><span class="line">            params.put(<span class="string">&quot;recursiveflag&quot;</span>, <span class="string">&quot;1&quot;</span>); <span class="comment">// 递归查询子部门</span></span><br><span class="line">            params.put(<span class="string">&quot;offset&quot;</span>, String.valueOf(pageNo));</span><br><span class="line">            params.put(<span class="string">&quot;limit&quot;</span>, String.valueOf(pageSize));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> OkHttpUtil.get(UrlBuilder.fromBaseUrl(AuthWelinkSource.WELINK.deptList()).build(), headers, params);</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">object</span> <span class="operator">=</span> JSONObject.parseObject(body);</span><br><span class="line">                log.info(<span class="string">&quot;get dept list body: &#123;&#125;&quot;</span>, object);</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.checkResponse(object))&#123;</span><br><span class="line">                    hasMore = object.getInteger(<span class="string">&quot;totalCount&quot;</span>) &gt; pageNo * pageSize;</span><br><span class="line">                    pageNo++;</span><br><span class="line">                    <span class="type">JSONArray</span> <span class="variable">deptArray</span> <span class="operator">=</span> object.getJSONArray(<span class="string">&quot;departmentInfo&quot;</span>);</span><br><span class="line">                    allDeptJsonArray.addAll(deptArray);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; get dept list fail, pageNo: &#123;&#125;&quot;</span>, SOURCE, pageNo);</span><br><span class="line">                    <span class="comment">// 部分出错，如分页查询时失败</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; get dept list fail, &#123;&#125;&quot;</span>, SOURCE, e.getMessage());</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (hasMore);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!allDeptJsonArray.isEmpty())&#123;</span><br><span class="line">            List&lt;JSONObject&gt; deptListJson = JSONArray.parseArray(allDeptJsonArray.toJSONString(), JSONObject.class);</span><br><span class="line">            <span class="comment">// 将 JSONObject 转换为 SysDeptBo</span></span><br><span class="line">            deptBoList = deptListJson.stream().map(json -&gt; &#123;</span><br><span class="line">                <span class="type">SysDeptBo</span> <span class="variable">bo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDeptBo</span>();</span><br><span class="line">                bo.setDeptId(json.getLong(<span class="string">&quot;deptCode&quot;</span>));</span><br><span class="line">                bo.setDeptName(json.getString(<span class="string">&quot;deptNameCn&quot;</span>));</span><br><span class="line">                bo.setParentId(json.getLong(<span class="string">&quot;fatherCode&quot;</span>));</span><br><span class="line">                bo.setDeptCategory(SOURCE);</span><br><span class="line">                bo.setOrderNum(json.getInteger(<span class="string">&quot;orderNo&quot;</span>));</span><br><span class="line">                <span class="keyword">return</span> bo;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 手动创建根部门</span></span><br><span class="line">            <span class="type">SysDeptBo</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDeptBo</span>();</span><br><span class="line">            root.setDeptId(Convert.toLong(deptRootCode));</span><br><span class="line">            root.setOrderNum(<span class="number">0</span>);</span><br><span class="line">            root.setDeptName(<span class="string">&quot;xxxxxx有限公司&quot;</span>);</span><br><span class="line">            root.setParentId(<span class="number">0L</span>);</span><br><span class="line">            root.setDeptCategory(SOURCE);</span><br><span class="line">            deptBoList.add(root);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">getUserListByDeptId</span><span class="params">(String deptId)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(accessToken)) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; get access token fail&quot;</span>, SOURCE);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">JSONArray</span> <span class="variable">userJsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">50</span>; <span class="comment">// 最大 50</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageNo</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasMore</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            Map&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            headers.put(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">            headers.put(<span class="string">&quot;x-wlk-gray&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">            headers.put(<span class="string">&quot;x-wlk-Authorization&quot;</span>, accessToken);</span><br><span class="line"></span><br><span class="line">            Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            params.put(<span class="string">&quot;deptCode&quot;</span>, deptId);</span><br><span class="line">            params.put(<span class="string">&quot;pageNo&quot;</span>, String.valueOf(pageNo));</span><br><span class="line">            params.put(<span class="string">&quot;pageSize&quot;</span>, String.valueOf(pageSize));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> OkHttpUtil.get(UrlBuilder.fromBaseUrl(AuthWelinkSource.WELINK.userList()).build(), headers, params);</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">object</span> <span class="operator">=</span> JSONObject.parseObject(body);</span><br><span class="line">                log.info(<span class="string">&quot;get user list body: &#123;&#125;&quot;</span>, object);</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.checkResponse(object))&#123;</span><br><span class="line">                    hasMore = object.getInteger(<span class="string">&quot;hasMore&quot;</span>) == <span class="number">0</span>; <span class="comment">// 0 表示还有下一页</span></span><br><span class="line">                    pageNo++;</span><br><span class="line">                    <span class="type">JSONArray</span> <span class="variable">userArray</span> <span class="operator">=</span> object.getJSONArray(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">                    userJsonArray.addAll(userArray);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; get user list fail。deptId: &#123;&#125;, pageNo: &#123;&#125;&quot;</span>, SOURCE, deptId, pageNo);</span><br><span class="line">                    <span class="comment">// 部分出错（如某部门没有用户）或某个分页查询时失败</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; get user list fail, &#123;&#125;&quot;</span>, SOURCE, e.getMessage());</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">while</span>(hasMore);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!userJsonArray.isEmpty())&#123;</span><br><span class="line">            List&lt;JSONObject&gt; userListJson = JSONArray.parseArray(userJsonArray.toJSONString(), JSONObject.class);</span><br><span class="line">            List&lt;SysUserBo&gt; userBoListOneDept = userListJson.stream().map(json -&gt; &#123;</span><br><span class="line">                <span class="type">SysUserBo</span> <span class="variable">bo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysUserBo</span>();</span><br><span class="line">                Map&lt;String, Object&gt; remark = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">                remark.put(<span class="string">&quot;welinkId&quot;</span>, json.getString(<span class="string">&quot;userId&quot;</span>));</span><br><span class="line">                remark.put(<span class="string">&quot;avatar&quot;</span>, json.getString(<span class="string">&quot;avatar&quot;</span>)); <span class="comment">// welink avatar 为链接， 系统 avatar 为 bigint</span></span><br><span class="line">                bo.setRemark(<span class="keyword">new</span> <span class="title class_">JSONObject</span>(remark).toJSONString()); <span class="comment">// welink 用户id 为字符串而系统表为 long，保存用于更新 sys_social 表</span></span><br><span class="line">                bo.setDeptId(Convert.toLong(json.get(<span class="string">&quot;mainDeptCode&quot;</span>)));</span><br><span class="line">                bo.setUserName(json.getString(<span class="string">&quot;employeeId&quot;</span>));</span><br><span class="line">                bo.setNickName(json.getString(<span class="string">&quot;userNameCn&quot;</span>));</span><br><span class="line">                bo.setStatus(<span class="string">&quot;3&quot;</span>.equals(json.getString(<span class="string">&quot;userStatus&quot;</span>)) ? <span class="string">&quot;0&quot;</span> : <span class="string">&quot;1&quot;</span>); <span class="comment">// 0 正常 1 停用</span></span><br><span class="line">                bo.setPhonenumber(json.getString(<span class="string">&quot;mobileNumber&quot;</span>).replaceFirst(<span class="string">&quot;^\\+\\d+-&quot;</span>, <span class="string">&quot;&quot;</span>)); <span class="comment">// 去除 &#x27;+86-&#x27; 或 &#x27;+1-&#x27; 等</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">rawSex</span> <span class="operator">=</span> json.getString(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">                bo.setSex(<span class="string">&quot;M&quot;</span>.equalsIgnoreCase(rawSex) ? <span class="string">&quot;0&quot;</span> : (<span class="string">&quot;F&quot;</span>.equalsIgnoreCase(rawSex) ? <span class="string">&quot;1&quot;</span> : <span class="string">&quot;2&quot;</span>)); <span class="comment">// &#x27;M&#x27; -&gt; &#x27;0&#x27; ; &#x27;F&#x27; -&gt; &#x27;1&#x27;; else -&gt; &#x27;2&#x27;</span></span><br><span class="line">                bo.setEmail(json.getString(<span class="string">&quot;userEmail&quot;</span>));</span><br><span class="line">                bo.setPassword(BCrypt.hashpw(<span class="string">&quot;Cd123456$&quot;</span>));</span><br><span class="line">                <span class="keyword">return</span> bo;</span><br><span class="line">            &#125;).toList();</span><br><span class="line">            <span class="comment">// 过滤用户名不为空或空白字符</span></span><br><span class="line">            userBoListOneDept = userBoListOneDept.stream().filter(bo -&gt; !StringUtils.isBlank(bo.getUserName())).toList();</span><br><span class="line">            userBoList.addAll(userBoListOneDept);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">createSysDept</span><span class="params">(String deptRootCode)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(deptRootCode)) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; create dept list fail, deptRootCode is null or blank string&quot;</span>, SOURCE);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (deptBoList.isEmpty()) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; create dept list fail, dept list is empty&quot;</span>, SOURCE);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> flag;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            flag = deptService.batchInsertOrUpdateDept(deptBoList);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; create dept list fail, &#123;&#125;&quot;</span>, SOURCE, e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">createUser</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (userBoList.isEmpty()) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; create user list fail, user list is empty&quot;</span>, SOURCE);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        DataPermissionHelper.enableIgnore(); <span class="comment">// 忽略数据权限</span></span><br><span class="line">        <span class="type">boolean</span> flag;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            flag = userService.batchInsertOrUpdateUserByUserName(userBoList); <span class="comment">// username email phone 一定唯一，插入不用校验</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            SnailJobLog.REMOTE.error(<span class="string">&quot;&#123;&#125; create user list fail, &#123;&#125;&quot;</span>, SOURCE, e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">bindWelink</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!createUser())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SnailJobLog.REMOTE.info(<span class="string">&quot;create &#123;&#125; user success! userCount: &#123;&#125;&quot;</span>, SOURCE, userBoList.size());</span><br><span class="line">        <span class="comment">// welink 绑定信息更新</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bindFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(SysUserBo bo: userBoList)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">object</span> <span class="operator">=</span> JSON.parseObject(bo.getRemark());</span><br><span class="line">                <span class="keyword">if</span>(Objects.nonNull(object) &amp;&amp; object.containsKey(<span class="string">&quot;welinkId&quot;</span>)) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">welinkId</span> <span class="operator">=</span> object.getString(<span class="string">&quot;welinkId&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">authId</span> <span class="operator">=</span> SOURCE + welinkId;</span><br><span class="line">                    <span class="type">SysSocialBo</span> <span class="variable">socialBo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysSocialBo</span>();</span><br><span class="line">                    socialBo.setUserId(bo.getUserId());</span><br><span class="line">                    socialBo.setAuthId(authId);</span><br><span class="line">                    socialBo.setOpenId(welinkId);</span><br><span class="line">                    socialBo.setSource(SOURCE);</span><br><span class="line">                    socialBo.setUserName(bo.getUserName());</span><br><span class="line">                    socialBo.setNickName(bo.getNickName());</span><br><span class="line">                    socialBo.setEmail(bo.getEmail());</span><br><span class="line">                    socialBo.setAccessToken(accessToken);</span><br><span class="line">                    <span class="keyword">if</span> (object.containsKey(<span class="string">&quot;avatar&quot;</span>)) &#123;</span><br><span class="line">                        socialBo.setAvatar(object.getString(<span class="string">&quot;avatar&quot;</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 查询是否已经绑定用户</span></span><br><span class="line">                    <span class="type">SysSocialBo</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysSocialBo</span>();</span><br><span class="line">                    params.setUserId(bo.getUserId());</span><br><span class="line">                    params.setSource(SOURCE);</span><br><span class="line">                    List&lt;SysSocialVo&gt; socialList = socialService.queryList(params);</span><br><span class="line">                    <span class="type">boolean</span> success;</span><br><span class="line">                    <span class="keyword">if</span> (socialList.isEmpty()) &#123;</span><br><span class="line">                        success = socialService.insertByBo(socialBo);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        socialBo.setId(socialList.getFirst().getId());</span><br><span class="line">                        <span class="comment">// 通过 id 更新</span></span><br><span class="line">                        <span class="comment">// bindFlag =  socialService.updateByBo(socialBo);  // 不能这么写，如果新值和旧值一样，返回的是 false</span></span><br><span class="line">                        socialService.updateByBo(socialBo);</span><br><span class="line">                        List&lt;SysSocialVo&gt; checkList = socialService.selectByAuthId(socialBo.getAuthId());</span><br><span class="line">                        success = CollUtil.isNotEmpty(checkList);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(!success) &#123;</span><br><span class="line">                        bindFlag = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (JSONException e)&#123;</span><br><span class="line">                <span class="comment">// json 解析出错，自动进入下一个循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                bindFlag = <span class="literal">false</span>; <span class="comment">// 数据库报错</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bindFlag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ExecuteResult <span class="title function_">jobExecute</span><span class="params">(JobArgs jobArgs)</span> &#123;</span><br><span class="line">        JSONObject object;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            object = JSON.parseObject(jobArgs.getJobParams().toString());</span><br><span class="line">        &#125;<span class="keyword">catch</span> (JSONException e)&#123;</span><br><span class="line">            <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;JSON parsing error in JobParams&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tenantId</span> <span class="operator">=</span> object.getString(<span class="string">&quot;tenantId&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootDeptId</span> <span class="operator">=</span> object.getString(<span class="string">&quot;rootDeptId&quot;</span>);</span><br><span class="line">        SnailJobLog.REMOTE.info(<span class="string">&quot;租户：&#123;&#125;, 根部门ID：&#123;&#125;&quot;</span>, tenantId, rootDeptId);</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isBlank(tenantId))&#123;</span><br><span class="line">            <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;tenantId is blank&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isBlank(rootDeptId))&#123;</span><br><span class="line">            <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;rootDeptId is blank&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">SysTenantVo</span> <span class="variable">tenant</span> <span class="operator">=</span> tenantService.queryByTenantId(tenantId);</span><br><span class="line">        <span class="keyword">if</span>(ObjectUtil.isNull(tenant))&#123;</span><br><span class="line">            <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;tenantId is not exist&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置所属租户</span></span><br><span class="line">        TenantHelper.setDynamic(tenantId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建部门</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">getDeptFlag</span> <span class="operator">=</span> getDeptList(rootDeptId);</span><br><span class="line">        <span class="keyword">if</span>(getDeptFlag)&#123;</span><br><span class="line">            SnailJobLog.REMOTE.info(<span class="string">&quot;get &#123;&#125; dept list success!&quot;</span>, SOURCE);</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">insertDeptFlag</span> <span class="operator">=</span> createSysDept(rootDeptId);</span><br><span class="line">            <span class="keyword">if</span>(insertDeptFlag)&#123;</span><br><span class="line">                SnailJobLog.REMOTE.info(<span class="string">&quot;create &#123;&#125; dept success! deptCount: &#123;&#125;&quot;</span>, SOURCE, deptBoList.size());</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;create &#123;&#125; dept fail&quot;</span>, SOURCE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;get &#123;&#125; dept list fail&quot;</span>, SOURCE );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建用户并绑定</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">getUserFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(SysDeptBo deptBo: deptBoList)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">deptCode</span> <span class="operator">=</span> deptBo.getDeptId().toString();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">getUserOneDeptFlag</span> <span class="operator">=</span> getUserListByDeptId(deptCode); <span class="comment">// 循环获取每个部门的所有用户</span></span><br><span class="line">            <span class="keyword">if</span>(!getUserOneDeptFlag)&#123;</span><br><span class="line">                getUserFlag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">// 某一个部门出错则终止</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(getUserFlag)&#123;</span><br><span class="line">            SnailJobLog.REMOTE.info(<span class="string">&quot;get &#123;&#125; user list success!&quot;</span>, SOURCE);</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">bindFlag</span> <span class="operator">=</span> bindWelink();</span><br><span class="line">            <span class="keyword">if</span>(bindFlag)&#123;</span><br><span class="line">                SnailJobLog.REMOTE.info(<span class="string">&quot;bind &#123;&#125; user success!&quot;</span>, SOURCE);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;bind &#123;&#125; user fail&quot;</span>, SOURCE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> ExecuteResult.failure(<span class="string">&quot;get &#123;&#125; user list fail&quot;</span>, SOURCE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ExecuteResult.success(<span class="string">&quot;任务成功&quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">checkResponse</span><span class="params">(JSONObject object)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(Objects.isNull(object)) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;response body is null, request fail！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!Objects.equals(object.getString(<span class="string">&quot;code&quot;</span>), <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">            log.error(<span class="string">&quot;response body message: &#123;&#125;&quot;</span>, object.getString(<span class="string">&quot;message&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中发送 Http 请求的封装代码参考<a href="./6bcd8e4.html#OkHttp-%E5%B0%81%E8%A3%85">上文附录</a></p><p>在 AuthWelinkSource 中定义接口地址，增加以下内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">AuthWelinkSource</span> <span class="keyword">implements</span> <span class="title class_">AuthSource</span> &#123;</span><br><span class="line">    WELINK;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deptList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://open.welink.huaweicloud.com/api/contact/v3/departments/list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">userList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://open.welink.huaweicloud.com/api/contact/v2/user/list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Service-类中方法扩充"><a href="#Service-类中方法扩充" class="headerlink" title="Service 类中方法扩充"></a>Service 类中方法扩充</h2><p>任务类中调用的 <code>deptService.batchInsertOrUpdateDept</code> 和 <code>userService.batchInsertOrUpdateUserByUserName</code> 方法是为了批量创建或更新部门和用户，但是 RuoYiPlus 中没有，需要自己实现。</p><p>SysDeptServiceImpl.java 新增：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量新增或更新部门信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list:  部门信息列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean 是否成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">batchInsertOrUpdateDept</span><span class="params">(List&lt;SysDeptBo&gt; list)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (list.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将 bo 转换为 sysDept, 暂不构建 ancestors</span></span><br><span class="line">    List&lt;SysDept&gt; sysDeptList = MapstructUtils.convert(list, SysDept.class);</span><br><span class="line">    <span class="keyword">if</span> (Objects.isNull(sysDeptList))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 构建 Map 快速查找</span></span><br><span class="line">    Map&lt;Long, SysDept&gt; deptMap = sysDeptList.stream().collect(Collectors.toMap(SysDept::getDeptId, d -&gt; d));</span><br><span class="line">    sysDeptList.forEach(d -&gt; &#123;</span><br><span class="line">        d.setAncestors(buildAncestors(d, deptMap));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> baseMapper.insertOrUpdateBatch(sysDeptList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造祖先部门列表</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">buildAncestors</span><span class="params">(SysDept dept, Map&lt;Long, SysDept&gt; deptMap)</span> &#123;</span><br><span class="line">    List&lt;Long&gt; ancestors = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">parentId</span> <span class="operator">=</span> dept.getParentId();</span><br><span class="line">    <span class="keyword">while</span>(ObjectUtil.isNotNull(parentId) &amp;&amp; parentId != <span class="number">0</span>) &#123;</span><br><span class="line">        ancestors.add(parentId);</span><br><span class="line">        <span class="type">SysDept</span> <span class="variable">parent</span> <span class="operator">=</span> deptMap.get(parentId);</span><br><span class="line">        <span class="keyword">if</span>(ObjectUtil.isNotNull(parent)) &#123;</span><br><span class="line">            parentId = parent.getParentId();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>; <span class="comment">// 没有找到上级</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Collections.reverse(ancestors); <span class="comment">// 倒序，从顶级到父级</span></span><br><span class="line">    <span class="keyword">return</span> ancestors.stream().map(String::valueOf).collect(Collectors.joining(StringUtils.SEPARATOR));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SysUserServiceImpl.java 新增：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 批量插入或更新用户</span><br><span class="line"> *</span><br><span class="line"> * @param list:  用户信息列表</span><br><span class="line"> * @return boolean 是否成功</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">@Transactional(rollbackFor = Exception.class)</span><br><span class="line">public boolean batchInsertOrUpdateUserByUserName(List&lt;SysUserBo&gt; list) &#123;</span><br><span class="line">    if (list.isEmpty()) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 将 bo 转换为 sysUser</span><br><span class="line">    List&lt;SysUser&gt; sysUserList = MapstructUtils.convert(list, SysUser.class);</span><br><span class="line">    if (sysUserList == null)&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 批量插入或更新 （根据 userName 判断是插入还是更新，没有一定是插入）</span><br><span class="line">    // 仅单个租户中 userName 唯一</span><br><span class="line">    // 此处不校验 userName, email, phone 唯一性，由函数调用方自行处理</span><br><span class="line">    for(SysUser sysUser : sysUserList)&#123;</span><br><span class="line">        int rows = baseMapper.update(sysUser, new LambdaQueryWrapper&lt;SysUser&gt;().eq(SysUser::getUserName, sysUser.getUserName()));</span><br><span class="line">        if( rows == 0)&#123; // 未更新说明不存在</span><br><span class="line">            // 如果是插入，会自动回填 sysUser.userId</span><br><span class="line">            baseMapper.insert(sysUser);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            // 如果是更新，需要手动查询</span><br><span class="line">            SysUser dbUser = baseMapper.selectOne(new LambdaQueryWrapper&lt;SysUser&gt;().eq(SysUser::getUserName, sysUser.getUserName()));</span><br><span class="line">            if(dbUser != null)&#123;</span><br><span class="line">                sysUser.setUserId(dbUser.getUserId());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    // 回填生成的 userid 更新其它表</span><br><span class="line">    IntStream.range(0, sysUserList.size()).forEach(i -&gt; &#123;</span><br><span class="line">        SysUser sysUser = sysUserList.get(i);</span><br><span class="line">        list.get(i).setUserId(sysUser.getUserId());</span><br><span class="line">    &#125;);</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不要忘了在对应抽象类中定义  <code>batchInsertOrUpdateDept</code> 和 <code>batchInsertOrUpdateUserByUserName</code> 方法</p><h2 id="后台创建任务"><a href="#后台创建任务" class="headerlink" title="后台创建任务"></a>后台创建任务</h2><p>下图中表示每月 1 日的凌晨 1 点执行一次任务，既支持 Cron 表达式也支持固定时间间隔执行。</p><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/09/06/nzctr3-0.png"                        alt="Snail Job 后台创建任务示例"                 ></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文将以同步 Welink 部门和用户为例，介绍如何使用 Snail Job 创建定时任务并适配 RuoYiPlus 项目。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Welink" scheme="https://kechocy.github.io/tags/Welink/"/>
    
    <category term="Snail Job" scheme="https://kechocy.github.io/tags/Snail-Job/"/>
    
  </entry>
  
  <entry>
    <title>RuoYiPlus 扩展 JustAuth 支持 Welink 登录</title>
    <link href="https://kechocy.github.io/posts/6bcd8e4.html"/>
    <id>https://kechocy.github.io/posts/6bcd8e4.html</id>
    <published>2025-09-06T02:54:22.000Z</published>
    <updated>2025-09-06T02:54:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>RuoYiPlus 使用 JustAuth 进行三方登录，但是 JustAuth 不支持 Welink 登录，本文将介绍如何扩展 JustAuth 以支持 Welink 登录，并适配 RuoYiPlus 项目。</p><span id="more"></span><p><a class="link"   href="https://www.justauth.cn/" >JustAuth 文档<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://plus-doc.dromara.org/#/ruoyi-vue-plus/home" >RuoYiPlus 后端文档<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://plus-doc.dromara.org/#/plus-ui/home" >RuoYiPlus 前端文档<i class="fas fa-external-link-alt"></i></a></p><h2 id="第三方网站-Welink-登录流程"><a href="#第三方网站-Welink-登录流程" class="headerlink" title="第三方网站 Welink 登录流程"></a>第三方网站 Welink 登录流程</h2><p>免登录时，可以由前端生成 code 传递给后端，由后端去请求 Welink 接口返回用户信息给前端。也可以通过 OAuth 方式，由后端构造三方授权地址传递给前端跳转到指定地址，授权通过后再由 Welink 携带 code 返回到重定向地址，前端再将 code 传递给后端，由后端去请求 Welink 接口返回用户信息给前端。</p><h3 id="前台免登录"><a href="#前台免登录" class="headerlink" title="前台免登录"></a>前台免登录</h3><p>我们先来了解一下 <a class="link"   href="https://open.welink.huaweicloud.com/docs/#/990hh0/whokyc/zv6f8s" >Welink 的免登录流程<i class="fas fa-external-link-alt"></i></a>：</p><ol><li>前端生成 code 传递给后端</li><li>后端使用 client_id 和 client_secret 请求三方得到 access_token</li><li>后端使用 code 和 access_token 请求三方得到 userId</li><li>后端使用 userId 和 access_token 请求三方得到用户详细信息</li></ol><p>PC 端生成 code 授权码有两种形式（移动端可参考 <a class="link"   href="https://open.welink.huaweicloud.com/docs/#/990hh0/whokyc/48s22j" >移动端获取授权登录码 | WeLink<i class="fas fa-external-link-alt"></i></a>）：</p><ol><li>通过 Welink 打开轻应用</li><li>通过扫码登录</li></ol><p>先说<a class="link"   href="https://open.welink.huaweicloud.com/docs/#/990hh0/whokyc/xdmzas" >通过 Welink 打开轻应用<i class="fas fa-external-link-alt"></i></a>：</p><ol><li><p>需要在 Welink 后台配置轻应用的 PC 端首页地址：</p><p> 假定 PC 端打开链接为：<code>https://www.example.com/index</code>，需要在链接后面添加参数：<code>code=$(code)</code>，那么配置地址则为：<code>https://www.example.com/index?code=$(code)</code></p></li><li><p>从 URLSearchParams 获取 code 提交给后端向三方请求用户信息：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">getWelinkLoginCode</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> urlParams = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> code = urlParams.<span class="title function_">get</span>(<span class="string">&quot;code&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (code) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 发送请求将 code 传递给后端</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">loginWithCode</span>(code);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>再说<a class="link"   href="https://open.welink.huaweicloud.com/docs/#/990hh0/whokyc/i0wzzh" >扫码登录<i class="fas fa-external-link-alt"></i></a>：</p><ol><li><p>前端引入 js 文件：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://login.welink.huaweicloud.com/sso-proxy-front/public/qrcode/0.0.1/wlQrcodeLogin.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>前端构造二维码：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;welink-login-container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 生成二维码</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">getWelinkLoginERCode</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> clientId = <span class="string">&quot;2025xxxxxxxxxxx1413&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> state = <span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> redirectUri  = <span class="string">&#x27;https://www.example.com/social-callback?source=welink&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">wlQrcodeLogin</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: <span class="string">&quot;welink-login-container&quot;</span>, <span class="comment">// 这里需要你在自己的页面定义一个 HTML 标签并设置 id，例如 &lt;div id=&quot;welink-login-container&quot;&gt;&lt;/div&gt;，也可以使用 span</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">client_id</span>: clientId, </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">response_type</span>: <span class="string">&quot;code&quot;</span>, </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">scope</span>: <span class="string">&quot;snsapi_login&quot;</span>, </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">state</span>: state, </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">redirect_uri</span>: redirectUri,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">style</span>: <span class="string">&quot;border:none;background-color:#FFFFFF;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    width : <span class="string">&quot;400&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">height</span>: <span class="string">&quot;300&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">lang</span>: <span class="string">&#x27;cn&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">self_redirect</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>注意</strong>：redirectUri 的域名或 IP 需要和 Welink 后台设置的 “应用管理后台” 地址保持一致，并且不能使用 localhost，否则可能导致二维码生成失败。</p></li><li><p>从 MessageEvent 获取 code 提交给后端向三方请求用户信息：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">const</span> <span class="title function_">getWelinkLoginCode</span> = (<span class="params">event</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> origin = event.<span class="property">origin</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(origin === <span class="string">&quot;https://login.welink.huaweicloud.com&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(event)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> code = event.<span class="property">data</span> <span class="keyword">as</span> string;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(code);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(code) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 发送请求将 code 传递给后端</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">loginWithCode</span>(code);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">window</span>.<span class="property">addEventListener</span> != <span class="string">&#x27;undefined&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, getWelinkLoginCode, <span class="literal">false</span>);</span></span><br><span class="line"><span class="language-javascript"> &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">window</span>.<span class="property">attachEvent</span> != <span class="string">&#x27;undefined&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">window</span>.<span class="title function_">attachEvent</span>(<span class="string">&#x27;onmessage&#x27;</span>, getWelinkLoginCode);</span></span><br><span class="line"><span class="language-javascript"> &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="管理后台免登录"><a href="#管理后台免登录" class="headerlink" title="管理后台免登录"></a>管理后台免登录</h3><p>上面说的都是由前台产生 code 传递给后台，然后后台拿 code 去请求三方获取信息。</p><p>下面将介绍 <a class="link"   href="https://open.welink.huaweicloud.com/docs/#/990hh0/whokyc/3hs4bu" >Welink 中 OAuth 登录方式<i class="fas fa-external-link-alt"></i></a>流程：</p><ol><li>前端点击按钮后向后端发送请求</li><li>后端构造三方跳转地址并返回前端</li><li>前端跳转指定三方跳转地址</li><li>三方会判断用户是否登录三方，没有则跳转三方登录页，登录后三方会生成 code 并带参跳转到 redirect_uri 地址</li><li>可以在前端判断用户是否是登录状态，请求后端对应的接口处理</li></ol><h2 id="JustAuth-扩展流程"><a href="#JustAuth-扩展流程" class="headerlink" title="JustAuth 扩展流程"></a>JustAuth 扩展流程</h2><p>根据  <a class="link"   href="https://www.justauth.cn/features/customize-the-oauth/" >自定义第三方平台的OAuth | JustAuth<i class="fas fa-external-link-alt"></i></a> 可以得知扩展步骤主要分为三步：</p><ol><li>在 application.yml 配置 justauth 中第三方平台的 client_id 和 client_secret 等信息</li><li>创建一个类实现 AuthSource 接口</li><li>创建一个类继承 AuthDefaultRequest 类，并重写 getAccessToken 和 getUserInfo 方法</li></ol><p>JustAuth 官方文档中例子的源码可见：<a class="link"   href="https://github.com/justauth/JustAuth-demo/blob/master/src/main/java/me/zhyd/justauth/custom/AuthMyGitlabRequest.java" >AuthMyGitlabRequest.java | Github<i class="fas fa-external-link-alt"></i></a></p><h2 id="理解-RuoYiPlus-中三方登录流程"><a href="#理解-RuoYiPlus-中三方登录流程" class="headerlink" title="理解 RuoYiPlus 中三方登录流程"></a>理解 RuoYiPlus 中三方登录流程</h2><blockquote><p>结论：RuoYiPlus 中需要先绑定三方账号，才能使用三方登录。</p></blockquote><p>前端在 login.vue 登录页面或登录后 thirdParty.vue 绑定应用页面都会调用 <code>auth/binding/&#123;source&#125;</code> 接口。</p><p>后端将创建 AuthRequest 调用 authorize 方法构造三方跳转地址 （会用到 yml 中配置的信息）并传递给前端（AuthController 中 authBinding 方法）。</p><p>前端跳转到指定三方地址后由三方返回到指定的重定向地址 <code>/social-callback</code>（此路由对应前端 SocialCallback.vue 页面）。</p><p>前端 SocialCallback.vue 中会判断是否是登录状态，如果已登录则请求 <code>auth/social/callback</code> 接口，未登录则请求 <code>auth/login</code> 接口（AuthController 中 socialCallback 和 login 方法 ）。</p><p>AuthController 中 login 方法中最关键的是 <code>LoginVo loginVo = IAuthStrategy.login(body, client, grantType)</code>，点进去看一下 IAuthStrategy.login 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> LoginVo <span class="title function_">login</span><span class="params">(String body, SysClientVo client, String grantType)</span> &#123;</span><br><span class="line">    <span class="comment">// 授权类型和客户端id</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">beanName</span> <span class="operator">=</span> grantType + BASE_NAME;</span><br><span class="line">    <span class="keyword">if</span> (!SpringUtils.containsBean(beanName)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;授权类型不正确!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">IAuthStrategy</span> <span class="variable">instance</span> <span class="operator">=</span> SpringUtils.getBean(beanName);</span><br><span class="line">    <span class="keyword">return</span> instance.login(body, client);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里 grantType 是 “social”，BASE_NAME 就是 “AuthStrategy”，所以实际调用的是 socialAuthStrategy.login 方法。再看一下 SocialAuthStrategy 中 login 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> LoginVo <span class="title function_">login</span><span class="params">(String body, SysClientVo client)</span> &#123;</span><br><span class="line">    <span class="type">SocialLoginBody</span> <span class="variable">loginBody</span> <span class="operator">=</span> JsonUtils.parseObject(body, SocialLoginBody.class);</span><br><span class="line">    ValidatorUtils.validate(loginBody);</span><br><span class="line">    AuthResponse&lt;AuthUser&gt; response = SocialUtils.loginAuth(</span><br><span class="line">        loginBody.getSource(), loginBody.getSocialCode(),</span><br><span class="line">        loginBody.getSocialState(), socialProperties);</span><br><span class="line">    <span class="keyword">if</span> (!response.ok()) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(response.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">AuthUser</span> <span class="variable">authUserData</span> <span class="operator">=</span> response.getData();</span><br><span class="line">    <span class="comment">/// 以下省略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到就是通过 SocialUtils.loginAuth 方法来调用三方接口，拿到用户信息。再看一下 SocialUtils.loginAuth 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> AuthResponse&lt;AuthUser&gt; <span class="title function_">loginAuth</span><span class="params">(String source, String code, String state, SocialProperties socialProperties)</span> <span class="keyword">throws</span> AuthException &#123;</span><br><span class="line">    <span class="type">AuthRequest</span> <span class="variable">authRequest</span> <span class="operator">=</span> getAuthRequest(source, socialProperties);</span><br><span class="line">    <span class="type">AuthCallback</span> <span class="variable">callback</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AuthCallback</span>();</span><br><span class="line">    callback.setCode(code);</span><br><span class="line">    callback.setState(state);</span><br><span class="line">    <span class="keyword">return</span> authRequest.login(callback);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到是先调用 getAuthRequest 获取到对应平台的 AuthRequest 类，然后调用其中的 login 方法。我们再看一下 getAuthRequest 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> AuthRequest <span class="title function_">getAuthRequest</span><span class="params">(String source, SocialProperties socialProperties)</span> <span class="keyword">throws</span> AuthException &#123;</span><br><span class="line">    <span class="type">SocialLoginConfigProperties</span> <span class="variable">obj</span> <span class="operator">=</span> socialProperties.getType().get(source);</span><br><span class="line">    <span class="keyword">if</span> (ObjectUtil.isNull(obj)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AuthException</span>(<span class="string">&quot;不支持的第三方登录类型&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    AuthConfig.<span class="type">AuthConfigBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> AuthConfig.builder()</span><br><span class="line">        .clientId(obj.getClientId())</span><br><span class="line">        .clientSecret(obj.getClientSecret())</span><br><span class="line">        .redirectUri(obj.getRedirectUri())</span><br><span class="line">        .scopes(obj.getScopes());</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">switch</span> (source.toLowerCase()) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;dingtalk&quot;</span> -&gt; <span class="keyword">new</span> <span class="title class_">AuthDingTalkV2Request</span>(builder.build(), STATE_CACHE);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;baidu&quot;</span> -&gt; <span class="keyword">new</span> <span class="title class_">AuthBaiduRequest</span>(builder.build(), STATE_CACHE);</span><br><span class="line">            <span class="comment">// ... </span></span><br><span class="line">            <span class="comment">// 此处省略若干</span></span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;welink&quot;</span> -&gt; <span class="keyword">new</span> <span class="title class_">AuthWelinkRequest</span>(builder.build(), STATE_CACHE);</span><br><span class="line">        <span class="keyword">default</span> -&gt; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AuthException</span>(<span class="string">&quot;未获取到有效的Auth配置&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没错，socialProperties.getType() 返回的是 map 类型，就是用于读取 yml 配置文件中配置内容构造对应的 AuthRequest 类。</p><p>所以总结一下：AuthController 中 login 方法就是执行对应平台的 AuthRequest 类中的 login 方法。</p><p>本文中的 AuthWelinkRequest 之所以要重写基类 AuthDefaultRequest 中的 login 方法，是因为 Welink  获取用户信息的流程不太一样，需要先获取 userId 才能获取用户信息，再重复定义一遍 responseError 也是因为基类中的该方法是 private，子类无法调用。</p><p>回到 SocialAuthStrategy 中 login 方法后面代码部分，获取到三方平台的用户信息后会去查询 sys_social 表，检查是否有此账号绑定记录，没有则则抛出异常提示需要先进行绑定。如果有记录则查询对应的系统用户 Id，然后通过 Id 获取系统用户信息，使用 SaToken 生成 token 进行登录。</p><p>AuthController 中 socialCallback 方法则先对用户登录状态判断，只有登录状态才会调用 SocialUtils.loginAuth 方法，上面分析了这实际就是调用对应平台的 AuthRequest 类中的 login 方法获取三方用户信息。然后通过 loginService.socialRegister 方法去新增或修改绑定记录。</p><h2 id="RuoYiPlus-适配"><a href="#RuoYiPlus-适配" class="headerlink" title="RuoYiPlus 适配"></a>RuoYiPlus 适配</h2><p>由于在扫码登录时，Welink 的认证需要向第三方传递前端传过来 code 参数，并且需要先获取 userId 才能获取用户信息，所以本文和官方的扩展流程有些许不同。</p><h3 id="后端改造"><a href="#后端改造" class="headerlink" title="后端改造"></a>后端改造</h3><p>application-dev.yml 增加 Welink 平台配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">justauth:</span></span><br><span class="line">  <span class="comment"># 前端访问地址，不能使用 localhost</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">https://www.example.com:80</span></span><br><span class="line">  <span class="attr">type:</span></span><br><span class="line">    <span class="attr">welink:</span></span><br><span class="line">      <span class="attr">client-id:</span> <span class="string">2025xxxxxxxxxxx1413</span></span><br><span class="line">      <span class="attr">client-secret:</span> <span class="string">xxxxxxxxxxxxx</span></span><br><span class="line">      <span class="attr">redirect-uri:</span> <span class="string">$&#123;justauth.address&#125;/social-callback?source=welink</span> <span class="comment"># 前端路由</span></span><br></pre></td></tr></table></figure><p>AuthWelinkSource.java 定义接口地址：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">AuthWelinkSource</span> <span class="keyword">implements</span> <span class="title class_">AuthSource</span> &#123;</span><br><span class="line">    WELINK;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">snsAuthorize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://login.welink.huaweicloud.com/sso/oauth2/sns_authorize&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">authorize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://login.welink.huaweicloud.com/sso/oauth2/authorize&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">accessToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://open.welink.huaweicloud.com/api/auth/v2/tickets&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">userInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://open.welink.huaweicloud.com/api/contact/v2/user/detail&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;? <span class="keyword">extends</span> <span class="title class_">AuthDefaultRequest</span>&gt; getTargetClass() &#123;</span><br><span class="line">        <span class="keyword">return</span> AuthWelinkRequest.class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">userId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://open.welink.huaweicloud.com/api/auth/v2/userid&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AuthWelinkRequest.java 发送请求：</p><p>相比较官方示例代码，注意改变了以下几点：：</p><ol><li>重写的 getUserInfo(AuthToken authToken) 方法啥也没写，因为用不到</li><li>增加了 getUserInfoById(AuthToken authToken, AuthCallback authCallback) 方法，增加一个参数获取 code，即 authCallback.code</li><li>增加了 getUserId 方法</li><li>重载了 authorize 方法，分别用于扫码登录和绑定账号两个不同场景</li><li>没有使用自带的 doGetXxxxxx 或 doPostXxxxxx 方法，而是使用封装的 OkHttp 库，封装代码将放在文章末尾。因为使用 doPostAuthorizationCode 请求 access_token 时返回内容一直提示：”clientId为空”，其实请求时是有传递 client_id 的，换了之后就成功了。我猜测是因为自带的 doPostXxxxxx 并没有把请求参数放在 body 里面而是以 <code>?client_id=xxx&amp;client_secret=xxx</code> 这种方式拼接在 url 后面导致的</li><li>重写了 login 方法 和 增加了 responseError 方法（这两个方法就是仿照基类 AuthDefaultRequest 中对应方法写的）。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthWelinkRequest</span> <span class="keyword">extends</span> <span class="title class_">AuthDefaultRequest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AuthWelinkRequest</span><span class="params">(AuthConfig config)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(config, AuthWelinkSource.WELINK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AuthWelinkRequest</span><span class="params">(AuthConfig config, AuthStateCache authStateCache)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(config, AuthWelinkSource.WELINK, authStateCache);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AuthUser <span class="title function_">getUserInfo</span><span class="params">(AuthToken authToken)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AuthToken <span class="title function_">getAccessToken</span><span class="params">(AuthCallback authCallback)</span> &#123;</span><br><span class="line">        <span class="comment">// AuthCallback 这里用不到</span></span><br><span class="line">        Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;client_id&quot;</span>, <span class="built_in">this</span>.config.getClientId());</span><br><span class="line">        params.put(<span class="string">&quot;client_secret&quot;</span>, <span class="built_in">this</span>.config.getClientSecret());</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        headers.put(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">        headers.put(<span class="string">&quot;x-wlk-gray&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">object</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> OkHttpUtil.post(UrlBuilder.fromBaseUrl(<span class="built_in">this</span>.source.accessToken()).build(), JSON.toJSONString(params), MediaType.parse(<span class="string">&quot;application/json&quot;</span>), headers);</span><br><span class="line">            object = JSONObject.parseObject(body);</span><br><span class="line">            log.info(<span class="string">&quot;welink get access token success, access token body:[&#123;&#125;]&quot;</span>, body);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;get welink access token fail&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        AuthToken.<span class="type">AuthTokenBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> AuthToken.builder();</span><br><span class="line">        <span class="keyword">if</span>(object != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.checkResponse(object))&#123;</span><br><span class="line">            builder.accessToken(object.getString(<span class="string">&quot;access_token&quot;</span>))</span><br><span class="line">                .expireIn(object.getInteger(<span class="string">&quot;expires_in&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> AuthUser <span class="title function_">getUserInfoById</span><span class="params">(AuthToken authToken, AuthCallback authCallback)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> <span class="built_in">this</span>.getUserId(authToken, authCallback.getCode());</span><br><span class="line">        AuthUser.<span class="type">AuthUserBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> AuthUser.builder();</span><br><span class="line">        <span class="keyword">if</span>(userId == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> builder.build();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;userId&quot;</span>, userId);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        headers.put(<span class="string">&quot;x-wlk-Authorization&quot;</span>, authToken.getAccessToken());</span><br><span class="line">        headers.put(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        headers.put(<span class="string">&quot;Accept-Charset&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">object</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> OkHttpUtil.post(UrlBuilder.fromBaseUrl(AuthWelinkSource.WELINK.userInfo()).build(), JSON.toJSONString(params), MediaType.parse(<span class="string">&quot;application/json&quot;</span>), headers);</span><br><span class="line">            object = JSONObject.parseObject(body);</span><br><span class="line">            log.info(<span class="string">&quot;welink get user info success, user info body:[&#123;&#125;]&quot;</span>, body);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;get welink user info fail&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(object != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.checkResponse(object))&#123;</span><br><span class="line">            <span class="type">AuthUserGender</span> <span class="variable">gender</span> <span class="operator">=</span> <span class="keyword">switch</span> (object.getString(<span class="string">&quot;sex&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;F&quot;</span> -&gt; AuthUserGender.FEMALE;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;M&quot;</span> -&gt; AuthUserGender.MALE;</span><br><span class="line">                <span class="keyword">default</span> -&gt; AuthUserGender.UNKNOWN;</span><br><span class="line">            &#125;;</span><br><span class="line">            builder.uuid(object.getString(<span class="string">&quot;userId&quot;</span>))</span><br><span class="line">                .username(object.getString(<span class="string">&quot;employeeId&quot;</span>))</span><br><span class="line">                .nickname(object.getString(<span class="string">&quot;userNameCn&quot;</span>))</span><br><span class="line">                .avatar(object.getString(<span class="string">&quot;avatar&quot;</span>))</span><br><span class="line">                .email(object.getString(<span class="string">&quot;userEmail&quot;</span>))</span><br><span class="line">                .company(object.getString(<span class="string">&quot;mainDeptCode&quot;</span>))</span><br><span class="line">                .gender(gender)</span><br><span class="line">                .token(authToken)</span><br><span class="line">                .source(source.toString())</span><br><span class="line">                .rawUserInfo(object);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserId</span><span class="params">(AuthToken authToken, String code)</span>&#123;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        headers.put(<span class="string">&quot;x-wlk-Authorization&quot;</span>, authToken.getAccessToken());</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">object</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> OkHttpUtil.get(UrlBuilder.fromBaseUrl(AuthWelinkSource.WELINK.userId()).build(), headers, params);</span><br><span class="line">            object = JSONObject.parseObject(body);</span><br><span class="line">            log.info(<span class="string">&quot;welink get user id success, user id body:[&#123;&#125;]&quot;</span>, body);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;get welink user id fail&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(object != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.checkResponse(object))&#123;</span><br><span class="line">            <span class="keyword">return</span> object.getString(<span class="string">&quot;userId&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">authorize</span><span class="params">(String code, String state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> UrlBuilder.fromBaseUrl(AuthWelinkSource.WELINK.snsAuthorize())</span><br><span class="line">            .queryParam(<span class="string">&quot;response_type&quot;</span>, <span class="string">&quot;code&quot;</span>)</span><br><span class="line">            .queryParam(<span class="string">&quot;client_id&quot;</span>, <span class="built_in">this</span>.config.getClientId())</span><br><span class="line">            .queryParam(<span class="string">&quot;redirect_uri&quot;</span>, URLEncoder.encode(<span class="built_in">this</span>.config.getRedirectUri(), StandardCharsets.UTF_8))</span><br><span class="line">            .queryParam(<span class="string">&quot;state&quot;</span>, <span class="built_in">this</span>.getRealState(state))</span><br><span class="line">            .queryParam(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;snsapi_login&quot;</span>)</span><br><span class="line">            .queryParam(<span class="string">&quot;code&quot;</span>, code)</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">authorize</span><span class="params">(String state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> UrlBuilder.fromBaseUrl(AuthWelinkSource.WELINK.authorize())</span><br><span class="line">            .queryParam(<span class="string">&quot;response_type&quot;</span>, <span class="string">&quot;code&quot;</span>)</span><br><span class="line">            .queryParam(<span class="string">&quot;client_id&quot;</span>, <span class="built_in">this</span>.config.getClientId())</span><br><span class="line">            .queryParam(<span class="string">&quot;redirect_uri&quot;</span>, URLEncoder.encode(<span class="built_in">this</span>.config.getRedirectUri(), StandardCharsets.UTF_8))</span><br><span class="line">            .queryParam(<span class="string">&quot;state&quot;</span>, <span class="built_in">this</span>.getRealState(state))</span><br><span class="line">            .queryParam(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;backendlogin&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AuthResponse&lt;AuthUser&gt; <span class="title function_">login</span><span class="params">(AuthCallback authCallback)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">this</span>.config.isIgnoreCheckState()) &#123;</span><br><span class="line">                AuthChecker.checkState(authCallback.getState(), <span class="built_in">this</span>.source, <span class="built_in">this</span>.authStateCache);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">AuthToken</span> <span class="variable">authToken</span> <span class="operator">=</span> <span class="built_in">this</span>.getAccessToken(authCallback);</span><br><span class="line">            <span class="type">AuthUser</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.getUserInfoById(authToken, authCallback);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> AuthResponse.&lt;AuthUser&gt;builder().code(AuthResponseStatus.SUCCESS.getCode()).data(user).build();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var4) &#123;</span><br><span class="line">            Log.error(<span class="string">&quot;Failed to login with oauth authorization.&quot;</span>, var4);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.responseError(var4);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">checkResponse</span><span class="params">(JSONObject object)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(object == <span class="literal">null</span>) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;response body is null, request fail！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!Objects.equals(object.getString(<span class="string">&quot;code&quot;</span>), <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">            log.error(<span class="string">&quot;response body message: &#123;&#125;&quot;</span>, object.getString(<span class="string">&quot;message&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    AuthResponse&lt;AuthUser&gt; <span class="title function_">responseError</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">errorCode</span> <span class="operator">=</span> AuthResponseStatus.FAILURE.getCode();</span><br><span class="line">        <span class="type">String</span> <span class="variable">errorMsg</span> <span class="operator">=</span> e.getMessage();</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> AuthException authException) &#123;</span><br><span class="line">            errorCode = authException.getErrorCode();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotEmpty(authException.getErrorMsg())) &#123;</span><br><span class="line">                errorMsg = authException.getErrorMsg();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> AuthResponse.&lt;AuthUser&gt;builder().code(errorCode).msg(errorMsg).build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AuthController 类中 authBinding 方法新增 code 参数，并对 Welink 平台扫码登录时特殊处理：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/binding/&#123;source&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R&lt;String&gt; <span class="title function_">authBinding</span><span class="params">(<span class="meta">@PathVariable(&quot;source&quot;)</span> String source, <span class="meta">@RequestParam(required = false)</span> String code,</span></span><br><span class="line"><span class="params">                             <span class="meta">@RequestParam</span> String tenantId, <span class="meta">@RequestParam</span> String domain)</span> &#123;</span><br><span class="line">    <span class="type">SocialLoginConfigProperties</span> <span class="variable">obj</span> <span class="operator">=</span> socialProperties.getType().get(source);</span><br><span class="line">    <span class="keyword">if</span> (ObjectUtil.isNull(obj)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.fail(source + <span class="string">&quot;平台账号暂不支持&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">AuthRequest</span> <span class="variable">authRequest</span> <span class="operator">=</span> SocialUtils.getAuthRequest(source, socialProperties);</span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;tenantId&quot;</span>, tenantId);</span><br><span class="line">    map.put(<span class="string">&quot;domain&quot;</span>, domain);</span><br><span class="line">    map.put(<span class="string">&quot;state&quot;</span>, AuthStateUtils.createState());</span><br><span class="line">    String authorizeUrl;</span><br><span class="line">    <span class="keyword">if</span>(authRequest <span class="keyword">instanceof</span> AuthWelinkRequest welinkRequest &amp;&amp; !StringUtils.isBlank(code))&#123;</span><br><span class="line">        <span class="comment">// 仅 welink 扫码登录需要特殊处理，welink 绑定时同其它平台一样</span></span><br><span class="line">        authorizeUrl = welinkRequest.authorize(code, Base64.encode(JsonUtils.toJsonString(map), StandardCharsets.UTF_8));</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        authorizeUrl = authRequest.authorize(Base64.encode(JsonUtils.toJsonString(map), StandardCharsets.UTF_8));</span><br><span class="line">    &#125;</span><br><span class="line">    log.info(<span class="string">&quot;authorize url: &quot;</span> + authorizeUrl);</span><br><span class="line">    <span class="keyword">return</span> R.ok(<span class="string">&quot;操作成功&quot;</span>, authorizeUrl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SocialUtils 类中 getAuthRequest 方法中增加 case：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> AuthRequest <span class="title function_">getAuthRequest</span><span class="params">(String source, SocialProperties socialProperties)</span> <span class="keyword">throws</span> AuthException &#123;</span><br><span class="line">    <span class="comment">// ... </span></span><br><span class="line">    <span class="comment">// 此处省略若干</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">switch</span> (source.toLowerCase()) &#123;</span><br><span class="line"><span class="comment">// ... </span></span><br><span class="line"><span class="comment">// 此处省略若干</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;welink&quot;</span> -&gt; <span class="keyword">new</span> <span class="title class_">AuthWelinkRequest</span>(builder.build(), STATE_CACHE);</span><br><span class="line">        <span class="keyword">default</span> -&gt; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AuthException</span>(<span class="string">&quot;未获取到有效的Auth配置&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端改造"><a href="#前端改造" class="headerlink" title="前端改造"></a>前端改造</h3><p>前端涉及到登录页和绑定应用页，需要改造 login.vue 和 thirdParty.vue 页面。</p><p>auth.ts 中 authBinding 方法增加 code 参数：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绑定账号</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">authBinding</span>(<span class="params">source: <span class="built_in">string</span>, tenantId: <span class="built_in">string</span>, code: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/auth/binding/&#x27;</span> + source,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">code</span>: code,</span><br><span class="line">      <span class="attr">tenantId</span>: tenantId,</span><br><span class="line">      <span class="attr">domain</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">host</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.js 引入 js 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://login.welink.huaweicloud.com/sso-proxy-front/public/qrcode/0.0.1/wlQrcodeLogin.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>assets&#x2F;icons&#x2F;svg 放入 welink.svg 图标</p><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/09/06/k04l7r.png"                        alt="Welink"                 ></p><p>lang&#x2F;zh_CN.ts 和 en_US.ts 增加 <code>login.social.welink</code> 语言内容：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// zh_CN.ts</span></span><br><span class="line"><span class="attr">login</span>: &#123;  </span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line">    <span class="attr">social</span>: &#123;</span><br><span class="line">        <span class="attr">welink</span>: <span class="string">&#x27;Welink 登录&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// en_US.ts</span></span><br><span class="line"><span class="attr">login</span>: &#123;</span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line">    <span class="attr">social</span>: &#123;</span><br><span class="line"><span class="attr">welink</span>: <span class="string">&#x27;Welink Login&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>login.vue 中使用 Element-Plus 中的 Dialog 组件来展示二维码，使用 <code>@opened</code> 实现打开弹窗时调用函数生成二维码。</p><p><strong>注意</strong>：redirectUri 的域名或 IP 需要和 Welink 后台设置的 “应用管理后台” 地址保持一致，并且不能使用 localhost，否则可能导致二维码生成失败。</p><p>代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- Welink 扫码登录弹窗 --&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;isWelinkLogin&quot; </span><br><span class="line">        :title=&quot;proxy.$t(&#x27;login.social.welink&#x27;)&quot; </span><br><span class="line">        @opened=&quot;getWelinkLoginERCode&quot;</span><br><span class="line">        width=&quot;500&quot; center align-center&gt;</span><br><span class="line">        &lt;div class=&quot;welink-login-dialog&quot;&gt;</span><br><span class="line">            &lt;div id=&quot;welink-login-container&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">// 是否 welink 登录</span><br><span class="line">const isWelinkLogin = ref(false);</span><br><span class="line"></span><br><span class="line">// 生成二维码</span><br><span class="line">const getWelinkLoginERCode = () =&gt; &#123;</span><br><span class="line">  const clientId = &quot;2025xxxxxxxxxxx1413&quot;;</span><br><span class="line">  const state = Date.now().toString();</span><br><span class="line">  const redirectUri  = &#x27;https://www.example.com/social-callback?source=welink&#x27;;</span><br><span class="line">  window.wlQrcodeLogin(&#123;</span><br><span class="line">    id: &quot;welink-login-container&quot;, // 这里需要你在自己的页面定义一个 HTML 标签并设置 id，例如 &lt;div id=&quot;welink-login-container&quot;&gt;&lt;/div&gt;，也可以使用 span</span><br><span class="line">    client_id: clientId, </span><br><span class="line">    response_type: &quot;code&quot;, </span><br><span class="line">    scope: &quot;snsapi_login&quot;, </span><br><span class="line">    state: state, </span><br><span class="line">    redirect_uri: redirectUri,</span><br><span class="line">    style: &quot;border:none;background-color:#FFFFFF;&quot;,</span><br><span class="line">    width : &quot;400&quot;,</span><br><span class="line">    height: &quot;300&quot;,</span><br><span class="line">    lang: &#x27;cn&#x27;,</span><br><span class="line">    self_redirect: false</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">const getWelinkLoginCode = (event: MessageEvent) =&gt; &#123;</span><br><span class="line">  const origin = event.origin;</span><br><span class="line">  if(origin === &quot;https://login.welink.huaweicloud.com&quot;) &#123;</span><br><span class="line">    console.log(event)</span><br><span class="line">    const code = event.data as string;</span><br><span class="line">    console.log(code);</span><br><span class="line">    if(code) &#123;</span><br><span class="line">      // 发送请求将 code 传递给后端</span><br><span class="line">      doSocialLogin(&#x27;welink&#x27;, code)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  window.addEventListener(&quot;message&quot;, getWelinkLoginCode, false);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">onBeforeUnmount(() =&gt; &#123;</span><br><span class="line">  window.removeEventListener(&quot;message&quot;, getWelinkLoginCode, false);</span><br><span class="line">&#125;)</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.welink-login-dialog &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>thirtyParty.vue 中在可绑定应用中增加 Welink：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;authlist&quot; class=&quot;user-bind&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;third-app&quot; href=&quot;#&quot; title=&quot;使用 Welink 账号授权登录&quot; @click=&quot;authUrl(&#x27;welink&#x27;)&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;git-other-login-icon&quot;&gt;</span><br><span class="line">            &lt;svg-icon icon-class=&quot;welink&quot; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;span class=&quot;app-name&quot;&gt;Welink&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;!-- 省略其它列表 --&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="OkHttp-封装"><a href="#OkHttp-封装" class="headerlink" title="OkHttp 封装"></a>OkHttp 封装</h3><p>Maven 引入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.okhttp3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>okhttp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>OkHttpUtil 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OkHttpUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">OkHttpClient</span> <span class="variable">okHttpClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(String url, Map&lt;String, String&gt; headers, Map&lt;String, String&gt; urlParams)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Request.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(url)) &#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="literal">null</span>) &#123;</span><br><span class="line">            builder.headers(setHeaders(headers));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (urlParams != <span class="literal">null</span>) &#123;</span><br><span class="line">            builder.url(setUrlParams(url, urlParams));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            builder.url(url);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> builder.build();</span><br><span class="line">        <span class="keyword">try</span>(<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> okHttpClient.newCall(request).execute())&#123;</span><br><span class="line">            <span class="keyword">if</span>(response.body() != <span class="literal">null</span>)&#123;</span><br><span class="line">                result = response.body().string();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">post</span><span class="params">(String url, String json, MediaType mediaType)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">RequestBody</span> <span class="variable">body</span> <span class="operator">=</span> RequestBody.create(json, mediaType);</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">            .url(url)</span><br><span class="line">            .post(body)</span><br><span class="line">            .build();</span><br><span class="line">        <span class="keyword">try</span>(<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> okHttpClient.newCall(request).execute())&#123;</span><br><span class="line">            <span class="keyword">if</span>(response.body() != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> response.body().string();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新增：支持自定义 header 的 post 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">post</span><span class="params">(String url, String json, MediaType mediaType, Map&lt;String, String&gt; headers)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">RequestBody</span> <span class="variable">body</span> <span class="operator">=</span> RequestBody.create(json, mediaType);</span><br><span class="line">        Request.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">            .url(url)</span><br><span class="line">            .post(body);</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="literal">null</span>) &#123;</span><br><span class="line">            builder.headers(setHeaders(headers));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> builder.build();</span><br><span class="line">        <span class="keyword">try</span>(<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> okHttpClient.newCall(request).execute())&#123;</span><br><span class="line">            <span class="keyword">if</span>(response.body() != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> response.body().string();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Headers <span class="title function_">setHeaders</span><span class="params">(Map&lt;String, String&gt; headersParams)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Headers</span> <span class="variable">headers</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        okhttp3.Headers.<span class="type">Builder</span> <span class="variable">headersbuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">okhttp3</span>.Headers.Builder();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (headersParams != <span class="literal">null</span>) &#123;</span><br><span class="line">            Iterator&lt;String&gt; iterator = headersParams.keySet().iterator();</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">                key = iterator.next();</span><br><span class="line">                headersbuilder.add(key, headersParams.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        headers = headersbuilder.build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> headers;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">setUrlParams</span><span class="params">(String url, Map&lt;String, String&gt; mapParams)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">strParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">if</span> (mapParams != <span class="literal">null</span>) &#123;</span><br><span class="line">            Iterator&lt;String&gt; iterator = mapParams.keySet().iterator();</span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : mapParams.entrySet()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!strParams.isEmpty()) &#123;</span><br><span class="line">                    strParams.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                strParams.append(entry.getKey()).append(<span class="string">&quot;=&quot;</span>).append(entry.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (url.endsWith(<span class="string">&quot;?&quot;</span>)) &#123;</span><br><span class="line">                url += strParams;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                url += <span class="string">&quot;?&quot;</span> + strParams;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何读取-yml-配置"><a href="#如何读取-yml-配置" class="headerlink" title="如何读取 yml 配置"></a>如何读取 yml 配置</h3><p>首先定义一个 SocialProperties 类，使用 @ConfigurationProperties 注解将 yml 下 justauth.* 的内容映射到这个类里面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;justauth&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SocialProperties</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, SocialLoginConfigProperties&gt; type;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后定义一个配置类，使用 @EnableConfigurationProperties 注解来启用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AutoConfiguration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(SocialProperties.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SocialAutoConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> AuthStateCache <span class="title function_">authStateCache</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AuthRedisStateCache</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;RuoYiPlus 使用 JustAuth 进行三方登录，但是 JustAuth 不支持 Welink 登录，本文将介绍如何扩展 JustAuth 以支持 Welink 登录，并适配 RuoYiPlus 项目。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JustAuth" scheme="https://kechocy.github.io/tags/JustAuth/"/>
    
    <category term="Welink" scheme="https://kechocy.github.io/tags/Welink/"/>
    
  </entry>
  
  <entry>
    <title>出栈顺序个数之卡特兰数</title>
    <link href="https://kechocy.github.io/posts/6fd3c141.html"/>
    <id>https://kechocy.github.io/posts/6fd3c141.html</id>
    <published>2025-07-24T04:50:47.000Z</published>
    <updated>2025-07-24T04:50:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>在数据结构中有个问题：n 个元素进栈，共有多少种出栈顺序？</p><span id="more"></span><p>答案：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="52.551ex" height="6.081ex" role="img" focusable="false" viewBox="0 -1727.7 23227.5 2687.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1539,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2205.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(3261.6,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5059.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(6059.8,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8560.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(9616.6,0)"><g data-mml-node="msubsup" transform="translate(593.3,763.5)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><rect width="2522.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(12656.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(13712.6,0)"><g data-mml-node="mrow" transform="translate(534.3,812.8)"><g data-mml-node="TeXAtom" data-mjx-texclass="OPEN"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path></g></g><g data-mml-node="mfrac" transform="translate(458,0)"><g data-mml-node="mrow" transform="translate(0,444) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(176.8,-345) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="CLOSE" transform="translate(1235.8,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><rect width="2522.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(16752.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(17808.6,0)"><g data-mml-node="mrow" transform="translate(1631.4,710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(889,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1489,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1878,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3100.4,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g><g data-mml-node="mo" transform="translate(3600.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4100.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4700.9,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><rect width="5178.9" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>可以利用动态规划里面的子问题来进行推导。</p><p>把 n 个元素的出栈顺序个数的记为 f(n)：</p><ul><li>当 n = 1 时，假设元素是 a，那么出栈顺序只有 ( a )，则 f(1) = 1</li><li>当 n = 2 时，假设元素是 a b，那么出栈顺序有 ( a b ) ( b a )，则 f(2) = 2</li><li>当 n = 3 时，假设元素是 a b c，那么出栈顺序有 ( a b c ) ( a c b ) ( b a c ) ( b c a ) ( c b a )，则 f(3) = 5</li></ul><p>当 n = 4 时, 假设元素是 a b c d，那么：元素 a 结果只可能出现在 1 号位置，2 号位置，3 号位置和 4 号位置。</p><p>分析：</p><ul><li><p>如果元素 a 在 1 号位置，那么只可能 a 先进栈且马上出栈，此时还剩 3 个元素等待操作，就是子问题 f(3)</p></li><li><p>如果元素 a 在 2 号位置，那么一定有 1 个元素比 a 先出栈（只能是 b ），即有 f(1) 种可能顺序。一定有 2 个元素比 a 后出栈，即有 f(2) 种可能顺序，根据乘法原理一共的顺序个数为 f(1) * f(2)</p></li><li><p>如果元素 a 在 3 号位置，那么一定有 2 个元素比 a 先出栈，即有 f(2) 种可能顺序。一定有 1 个元素比 a 后出栈（只能是 d ），即有 f(1) 种可能顺序，根据乘法原理一共的顺序个数为 f(2) * f(1)</p></li><li><p>如果元素 a 在 4 号位置，那么在 a 最后出栈前已经有 3 个元素进行了入栈出栈操作，就是子问题 f(3)</p></li></ul><p>结合所有情况，即：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="40.264ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 17796.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(939,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(1439,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2105.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3161.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3711.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(4100.6,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(4600.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5211.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(6212,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(6762,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(7151,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(7651,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(8040,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(8590,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(8979,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9479,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10090.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11090.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(11640.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(12029.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(12529.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(12918.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(13468.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(13857.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(14357.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14968.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(15968.9,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(16518.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(16907.9,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(17407.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p>我们定义 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.284ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3661.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(939,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1439,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2105.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3161.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>。于是可以重新写为：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="47.292ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 20902.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(939,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(1439,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2105.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3161.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3711.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(4100.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4600.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(4989.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(5539.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(5928.6,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(6428.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7039.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(8040,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(8590,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(8979,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9479,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(9868,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(10418,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(10807,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(11307,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11918.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(12918.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(13468.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(13857.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(14357.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14746.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(15135.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15635.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(16246.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(17246.9,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(17796.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(18185.9,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(18685.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(19074.9,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(19624.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(20013.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(20513.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p>推广到 n，于是我们可以得到：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="55.512ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 24536.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1539,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2205.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3261.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3811.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(4200.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4700.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(5089.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(5639.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6028.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6850.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(7851,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8351,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8962.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(9962.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(10512.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(10901.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(11401.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(11790.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(12340.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12729.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(13551.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(14551.9,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(15051.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15663.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(16663.3,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(18057.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(19057.8,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(19607.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(19996.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(20819,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(21819.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(22319.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(22708.2,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(23258.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(23647.2,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(24147.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p>这就是卡特兰数的递推公式：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="33.918ex" height="6.712ex" role="img" focusable="false" viewBox="0 -1720.9 14991.8 2966.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1500,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(2555.8,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(58,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(4166.5,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(5208.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1878,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2656,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mi" transform="translate(8128.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">且</text></g><g data-mml-node="msub" transform="translate(9128.5,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mn" transform="translate(748,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(10557.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(11613.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(12113.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(12558.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(13436,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(14491.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p><blockquote><p>习题：元素 ABCDE 依次入栈，则以下（）是不可能的出栈次序。</p><p>A、ABCDE</p><p>B、EDCBA</p><p>C、BADCE</p><p>D、DBCAE</p><p>答案：D</p><p>解析：看 A 的位置 n，结果中排在 A 左边的元素一定是 A 的后 n - 1 个元素当中的。比如 D 选项：A 在结果中的位置是 4，那么结果中排在 A 左边的元素一定只能是 A 的后 3 个元素（即 B C D）当中的，此时符合。但是还要判断以 A 为界，左右两个子问题是否符合此规律。对于左边子问题 D B C ，同理要看 B 的位置，B 在子问题结果中的位置是 2，结果中排在 B 左边的元素一定只能是 B 的后 1 个元素，即出现在 B 的左边一定只能是 C，所以不符合。</p><p>总结：判断原问题是否符合规则，若符合则继续判断子问题是否符合。</p></blockquote><h2 id="通项推导"><a href="#通项推导" class="headerlink" title="通项推导"></a>通项推导</h2><h3 id="几何法"><a href="#几何法" class="headerlink" title="几何法"></a>几何法</h3><p>可通过折线法求得通项：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.738ex;" xmlns="http://www.w3.org/2000/svg" width="28.007ex" height="5.06ex" role="img" focusable="false" viewBox="0 -1468.5 12379 2236.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1539,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2205.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(3261.6,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5059.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(6059.8,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8560.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(9616.6,0)"><g data-mml-node="msubsup" transform="translate(593.3,763.5)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><rect width="2522.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>要求：有两种操作即入栈和出栈，要求每种操作的总次数一样，且进行第 k 次出栈前必须先进行至少 k 次入栈。</p><p>假设：一个人从原点出发，<strong>入栈</strong>是此人沿右上角 45° 走一个单位（一个单位长为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>）。<strong>出栈</strong>是此人沿右下角 45° 走一个单位。</p><p>因为有<strong>入栈和出栈操作的次数相同</strong>的限制，所以最后必将到到达点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.386ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2822.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(889,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1489,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1933.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2433.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 。</p><p>因为有<strong>第 k 次出栈前必须先进行至少 k 次入栈</strong>的限制，导致走出来的折线不会跨越 x 轴走到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="7.017ex" height="1.971ex" role="img" focusable="false" viewBox="0 -666 3101.6 871"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(767.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1823.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2601.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 这条线上。</p><p><img lazyload="" alt="折线法-合法走法" data-src="https://img.kecho.top/i/2025/07/24/itlwbu-0.png"></p><p>如果没有限制第 k 次出栈前必须先进行至少 k 次入栈，只要求两种操作各 n 次，那么其不同折线共有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.687ex;" xmlns="http://www.w3.org/2000/svg" width="3.565ex" height="2.282ex" role="img" focusable="false" viewBox="0 -705 1575.8 1008.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container> 种可能，其中减去不合法的可能就是要求的内容。</p><p><img lazyload="" alt="折线法-不合法走法" data-src="https://img.kecho.top/i/2025/07/24/iran1q-0.png"></p><p>对于任意跨越 x 轴的折线情况，找出第一个与 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="7.017ex" height="1.971ex" role="img" focusable="false" viewBox="0 -666 3101.6 871"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(767.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1823.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2601.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 相交的点 k，将 k 点以右的折线根据 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="7.017ex" height="1.971ex" role="img" focusable="false" viewBox="0 -666 3101.6 871"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(767.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1823.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2601.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 对称。可以发现终点最终都会从 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.386ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2822.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(889,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1489,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1933.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2433.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 对称到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.146ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3600.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(889,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1489,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(1933.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2711.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3211.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>。</p><p>我们可以得出所有<strong>跨越了 x 轴的折线总数</strong>与<strong>从 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.029ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2222.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1333.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1833.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.146ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3600.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(889,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1489,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(1933.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2711.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3211.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 的折线总数</strong>相等。</p><p>而从 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.029ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2222.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1333.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1833.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.146ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3600.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(889,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1489,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(1933.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2711.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3211.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 的折线表示的是入栈和出栈的总数是 2n 且出栈的数量比入栈多了 2 次，则出栈 n + 1 次，入栈 n - 1 次。所以其不同折线有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.69ex;" xmlns="http://www.w3.org/2000/svg" width="5.03ex" height="2.687ex" role="img" focusable="false" viewBox="0 -882.5 2223.2 1187.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,411.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-297.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container> 或者 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.69ex;" xmlns="http://www.w3.org/2000/svg" width="5.03ex" height="2.687ex" role="img" focusable="false" viewBox="0 -882.5 2223.2 1187.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,411.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-297.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container> 种可能。</p><p>所以合法的折线有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.912ex;" xmlns="http://www.w3.org/2000/svg" width="18.378ex" height="3.294ex" role="img" focusable="false" viewBox="0 -1053.1 8123 1456.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1798,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2798.3,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,411.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-297.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5299.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(6355,0)"><g data-mml-node="msubsup" transform="translate(326.8,554.6) scale(0.707)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><rect width="1527.9" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 种可能。</p><p>得证：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.738ex;" xmlns="http://www.w3.org/2000/svg" width="28.007ex" height="5.06ex" role="img" focusable="false" viewBox="0 -1468.5 12379 2236.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1539,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2205.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(3261.6,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5059.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(6059.8,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8560.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(9616.6,0)"><g data-mml-node="msubsup" transform="translate(593.3,763.5)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(845.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(748,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><rect width="2522.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><h3 id="代数法"><a href="#代数法" class="headerlink" title="代数法"></a>代数法</h3><p>我还不会组合数学，看不明白生成函数！呜呜呜~</p><h2 id="典例"><a href="#典例" class="headerlink" title="典例"></a>典例</h2><ol><li><p>汽车胡同加油问题<br>一个汽车队在狭窄的路面上行驶，不得超车，但可以进入一个死胡同去加油，然后再插队行驶，共有 n 辆汽车，问共有多少种不同的方式使得车队开出城去？</p></li><li><p>摞碗问题<br>饭后姐姐洗碗，妹妹把姐姐洗过的碗一个一个放进碗橱摞成一摞。一共有n个不同的碗，洗前也是摞成一摞的，也许因为小妹贪玩而使碗拿进碗橱不及时，姐姐则把洗过的碗摞在旁边，问：小妹摞起的碗有多少种可能的方式？</p></li><li><p>01 序列问题<br>给出一个 n，要求一个长度为 2n 的 01 序列，使得序列的任意前缀中 1 的个数不少于 0 的个数，有多少个不同的 01 序列?</p></li><li><p>借书还书问题<br>在图书馆一共 2n 个人在排队，n 个还《面试宝典》一书，n 个在借《面试宝典》一书，图书馆此时没有面试宝典了，求他们有多少种排队的情形？</p></li><li><p>高矮排队问题<br>2n 个高矮不同的人排成两排，每排必须是从矮到高排列，而且第二排比对应的第一排的人高，问排列方式有多少种?</p></li><li><p>单调路径问题<br>一位大城市的律师在他住所以北 n 个街区和以东 n 个街区处工作，每天他走 2n 个街区去上班。如果他从不穿越（但可以碰到）从家到办公室的对角线，那么有多少条可能的道路？</p></li><li><p>找零问题<br>2n 个人要买票价为五元的电影票，每人只买一张，但是售票员没有钱找零。其中 n 个人持有五元，另外 n 个人持有十元，问在不发生找零困难的情况下，有多少种排队方法？</p></li><li><p>括号匹配问题<br>n 对括号有多少种合法匹配方式？</p></li><li><p>凸多边形划分<br>在一个 n 边形中，通过不相交于 n 边形内部的对角线，把 n 边形拆分为若干个三角形，问有多少种拆分方案？</p></li><li><p>圆上线段<br>在圆上选择 2n 个点，将这些点成对连接起来使得所得到的 n 条线段不相交的方法数？</p></li><li><p>填充阶梯图形<br>用 n 个长方形填充一个高度为 n 的阶梯状图形的方法个数？</p></li><li><p>二叉树问题<br>a) 由 n 个节点构成的二叉树的个数？<br>b) 有 n + 1 个叶子的二叉树的个数？<br>c) 先序序列为 a b c d 的不同二叉树个数？</p></li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a class="link" href="https://www.cnblogs.com/zhizhan/p/4892924.html">n个元素进栈，共有多少种出栈顺序？ - 止战 - 博客园<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://www.cnblogs.com/Dinosaur-Po/p/12671979.html">卡特兰数的证明及其应用 - _Dinosaur_Po - 博客园<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://blog.csdn.net/sherry_yue/article/details/88364746">卡特兰数（Catalan）公式、证明、代码、典例.-CSDN博客<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在数据结构中有个问题：n 个元素进栈，共有多少种出栈顺序？&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="栈" scheme="https://kechocy.github.io/tags/%E6%A0%88/"/>
    
    <category term="卡特兰数" scheme="https://kechocy.github.io/tags/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>KeepassDx 的魔法键盘适配小米手机键盘全面屏优化</title>
    <link href="https://kechocy.github.io/posts/ca3e9532.html"/>
    <id>https://kechocy.github.io/posts/ca3e9532.html</id>
    <published>2025-07-18T03:29:22.000Z</published>
    <updated>2025-07-18T03:29:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将通过修改包名的方式使 KeepassDx 的魔法键盘适配小米手机键盘全面屏优化。</p><span id="more"></span><hr><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>密码管理工具 KeepassDX 填充密码时可以使用魔法键盘填充，防止密码被第三方输入法读取，但是切换输入法需要去设置应用手动切换，十分麻烦。</p><p>小米手机在 “设置 -&gt; 更多设置 -&gt; 语言与输入法” 中打开 “全面屏键盘优化” 能够实现快捷切换输入法，但是目前只支持三个小米版输入法，分别是百度输入法小米版、搜狗输入法小米版、讯飞输入法小米版。</p><p>有人对其实现的原理进行了<a class="link"   href="https://gitee.com/xixilala-2019/ime-of-xiaomi-optimization" >分析<i class="fas fa-external-link-alt"></i></a>，发现是系统是根据包名来判断的，那我们可以把包名修改成其中之一，也就能够实现快捷切换了。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1.电脑新建文件夹 demo，下载 <a class="link"   href="https://ibotpeaches.github.io/Apktool/" >反编译工具 apktool<i class="fas fa-external-link-alt"></i></a> 到其中并重命名为 <code>apktool.apk</code>，<a class="link"   href="https://github.com/Kunzisoft/KeePassDX/releases" >下载 KeePassDX 安装包<i class="fas fa-external-link-alt"></i></a> 到其中并重命名为 <code>KeePassDX.apk</code>，下载 <a class="link"   href="https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/windows/apktool.bat" >脚本文件<i class="fas fa-external-link-alt"></i></a> 到其中并重命名为 <code>apktool.bat</code>，然后双击脚本文件。</p><p>2.进入 demo 目录下执行命令：<code>apktool d KeePassDX.apk</code> 进行解包。</p><p>3.打开 <code>KeePassDX</code> 目录中的 <code>AndroidManifest.xml</code> 文件，将第一行中 <code>package=&quot;com.kunzisoft.keepass.libre&quot;</code> 改为 <code>package=&quot;com.iflytek.inputmethod.miui&quot;</code>。</p><blockquote><p>包名在 <code>com.iflytek.inputmethod.miui，com.sohu.inputmethod.sogou.xiaomi，com.baidu.input_mi</code> 三个中选一个，不要和正常在用的键盘包名重复</p></blockquote><p>4.执行命令：<code>apktool b &quot;KeePassDX&quot; -o KeePassDX-new.apk</code> 将文件重新打包。</p><p>5.手机下载并安装 <a class="link"   href="https://mt2.cn/" >MT 管理器<i class="fas fa-external-link-alt"></i></a></p><p>6.将 <code>KeePassDX-new.apk</code> 发送到手机，打开 MT 管理器，长按文件选择 “签名”。</p><p>7.安装签名后的文件。</p><p>安装完成后，去系统设置里面启用魔法键盘，之后就能快速切换键盘实现填充密码了。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a class="link"   href="https://www.cnblogs.com/sandianyiyuan/p/16984848.html" >KeepassDx的魔法键盘适配小米全面屏优化 - 三点一圆 - 博客园<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文将通过修改包名的方式使 KeepassDx 的魔法键盘适配小米手机键盘全面屏优化。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Keepass" scheme="https://kechocy.github.io/tags/Keepass/"/>
    
    <category term="Android" scheme="https://kechocy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Windows 本地部署 DeepSeek 大模型</title>
    <link href="https://kechocy.github.io/posts/8bd9618c.html"/>
    <id>https://kechocy.github.io/posts/8bd9618c.html</id>
    <published>2025-07-18T03:03:04.000Z</published>
    <updated>2025-07-18T03:03:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何通过 Ollama 部署 DeepSeek-R1 蒸馏版。</p><span id="more"></span><hr><h2 id="安装-DeepSeek"><a href="#安装-DeepSeek" class="headerlink" title="安装 DeepSeek"></a>安装 DeepSeek</h2><p>去官网下载 <a class="link"   href="https://ollama.com/download" >Ollama 安装程序<i class="fas fa-external-link-alt"></i></a>，使用 <code>OllamaSetup.exe /DIR=D:\Software\Ollama</code> 可指定安装路径。</p><p>Ollama 安装后执行 <code>ollama run deepseek-r1:14b</code> 即可运行 DeepSeek-R1-Distill-Qwen-14B，可以替换数字以安装不同数据集大小的模型，更多信息见 <a class="link"   href="https://ollama.com/library/deepseek-r1" >Ollama DeepSeek-R1<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="安装-open-webui"><a href="#安装-open-webui" class="headerlink" title="安装 open-webui"></a>安装 open-webui</h2><p>运行成功后默认是通过命令行进行交互，可以利用安装 open-webui 提供网页交互入口，此处使用 pip 安装（依赖 python 3.11 ）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需已安装 python 3.11</span></span><br><span class="line">pip install open-webui</span><br><span class="line">open-webui serve</span><br></pre></td></tr></table></figure><p>你也可以使用 docker 安装，更多信息详见 <a class="link"   href="https://docs.openwebui.com/" >Open WebUI 文档<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a class="link"   href="https://ollama.com/library/deepseek-r1" >Ollama Deepseek-R1<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://docs.openwebui.com/" >Open WebUI 文档<i class="fas fa-external-link-alt"></i></a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍如何通过 Ollama 部署 DeepSeek-R1 蒸馏版。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Windows" scheme="https://kechocy.github.io/tags/Windows/"/>
    
    <category term="DeepSeek" scheme="https://kechocy.github.io/tags/DeepSeek/"/>
    
    <category term="大模型" scheme="https://kechocy.github.io/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="AI" scheme="https://kechocy.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Tampermonkey 脚本开发记录：自动化播放学习视频</title>
    <link href="https://kechocy.github.io/posts/a1bb09bc.html"/>
    <id>https://kechocy.github.io/posts/a1bb09bc.html</id>
    <published>2025-07-16T07:33:47.000Z</published>
    <updated>2025-07-16T07:33:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要想记录一下我的第一个 Tampermonkey 脚本。</p><span id="more"></span><p>有这样一个内部视频学习平台，每月都要求学习指定视频，视频的内容和质量懂得都懂，于是就想利用 Tampermonkey 脚本来实现自动学习，功能如下：</p><ul><li>移除窗口最小化或鼠标离开窗口时自动暂停视频的限制</li><li>更改默认播放速度</li><li>自动切换下一章节播放</li></ul><div class="keep-note info"><p>代码由 AI 辅助生成，<code>@match</code> 中域名已匿名化，仅试用于特定平台。</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         自动播放视频</span></span><br><span class="line"><span class="comment">// @namespace    https://www.kecho.top</span></span><br><span class="line"><span class="comment">// @version      1.1.0</span></span><br><span class="line"><span class="comment">// @description  防止切屏或点击其它地方导致视频暂停；自动切换下一章节视频</span></span><br><span class="line"><span class="comment">// @author       Kecho</span></span><br><span class="line"><span class="comment">// @match        https://xxx.example.com/dlp-webapp/course/learning/*</span></span><br><span class="line"><span class="comment">// @match        http://xxx.example.com/dlp-webapp/course/learning/*</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">waitForIframe</span>(<span class="params">selector, callback, timeout = <span class="number">5000</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line"></span><br><span class="line">        (<span class="keyword">function</span> <span class="title function_">poll</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> iframe = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(selector);</span><br><span class="line">            <span class="keyword">if</span> (iframe) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(iframe);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title class_">Date</span>.<span class="title function_">now</span>() - start &lt; timeout) &#123;</span><br><span class="line">                <span class="title function_">requestAnimationFrame</span>(poll);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;⚠️ iframe 等待超时&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">monitorVideoPlay</span>(<span class="params">container</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> video = container.<span class="property">body</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;video&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (video &amp;&amp; video.<span class="property">paused</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;✅ 播放 video&#x27;</span>);</span><br><span class="line">                video.<span class="title function_">addEventListener</span>(<span class="string">&#x27;timeupdate&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">                    e.<span class="title function_">stopImmediatePropagation</span>();</span><br><span class="line">                    e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">                &#125;, <span class="literal">true</span>);</span><br><span class="line">                video.<span class="property">playbackRate</span> = <span class="number">10</span>;</span><br><span class="line">                video.<span class="property">defaultPlaybackRate</span> = <span class="number">10</span>;</span><br><span class="line">                video.<span class="property">muted</span> = <span class="literal">true</span>;</span><br><span class="line">                video.<span class="title function_">play</span>().<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">warn</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        observer.<span class="title function_">observe</span>(container.<span class="property">body</span>, &#123;</span><br><span class="line">            <span class="attr">childList</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">subtree</span>: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等待 iframe 加载</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">waitForIframe</span>(<span class="string">&#x27;iframe&#x27;</span>, <span class="function">(<span class="params">iframe</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 防止窗口最小化被暂停</span></span><br><span class="line">            <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="title class_">Document</span>.<span class="property"><span class="keyword">prototype</span></span>, <span class="string">&#x27;hidden&#x27;</span>, &#123;<span class="attr">get</span>: <span class="function">() =&gt;</span> <span class="literal">false</span>&#125;);</span><br><span class="line">            <span class="comment">// 防止鼠标点击其它处被暂停</span></span><br><span class="line">            [<span class="string">&#x27;blur&#x27;</span>, <span class="string">&#x27;visibilitychange&#x27;</span>, <span class="string">&#x27;webkitvisibilitychange&#x27;</span>].<span class="title function_">forEach</span>(<span class="function"><span class="params">evt</span> =&gt;</span> &#123;</span><br><span class="line">                iframe.<span class="property">contentWindow</span>.<span class="title function_">addEventListener</span>(evt, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">                    e.<span class="title function_">stopImmediatePropagation</span>();</span><br><span class="line">                    e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">                &#125;, <span class="literal">true</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            iframe.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> <span class="title function_">checkVideo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> iframeDoc = iframe.<span class="property">contentDocument</span> || iframe.<span class="property">contentWindow</span>.<span class="property">document</span>;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;✅ video 准备好&#x27;</span>);</span><br><span class="line">                        <span class="comment">// 监听 video 加载完成</span></span><br><span class="line">                        <span class="title function_">monitorVideoPlay</span>(iframeDoc);</span><br><span class="line">                        <span class="comment">// 视频未播放完成时可能已经可以下一章</span></span><br><span class="line">                        <span class="keyword">const</span> interval = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">const</span> nextBtn = iframeDoc.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.submit-quiz-button button&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">                            <span class="keyword">if</span> (nextBtn) &#123;</span><br><span class="line">                                <span class="keyword">const</span> isDisabled = nextBtn.<span class="property">disabled</span> || nextBtn.<span class="title function_">getAttribute</span>(<span class="string">&#x27;aria-disabled&#x27;</span>) === <span class="string">&#x27;true&#x27;</span> || nextBtn.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (!isDisabled) &#123;</span><br><span class="line">                                    <span class="keyword">if</span>(nextBtn.<span class="property">innerText</span> === <span class="string">&#x27;下一页&#x27;</span>)&#123;</span><br><span class="line">                                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;✅ 跳转下一章节&#x27;</span>);</span><br><span class="line">                                        nextBtn.<span class="title function_">click</span>();</span><br><span class="line">                                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nextBtn.<span class="property">innerText</span> === <span class="string">&#x27;完成学习&#x27;</span>)&#123;</span><br><span class="line">                                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;✅ 完成学习&#x27;</span>);</span><br><span class="line">                                        nextBtn.<span class="title function_">click</span>();</span><br><span class="line">                                        <span class="built_in">clearInterval</span>(interval);</span><br><span class="line">                                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                                        <span class="built_in">clearInterval</span>(interval);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;❌ 跨域访问错误:&#x27;</span>, e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="title function_">checkVideo</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">main</span>();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要想记录一下我的第一个 Tampermonkey 脚本。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Tampermonkey" scheme="https://kechocy.github.io/tags/Tampermonkey/"/>
    
  </entry>
  
  <entry>
    <title>Windows 注册表备忘</title>
    <link href="https://kechocy.github.io/posts/e36ef7eb.html"/>
    <id>https://kechocy.github.io/posts/e36ef7eb.html</id>
    <published>2025-07-05T03:01:26.000Z</published>
    <updated>2025-07-05T03:01:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录 Windows 系统常用注册表。</p><span id="more"></span><h2 id="系统代理记录清除"><a href="#系统代理记录清除" class="headerlink" title="系统代理记录清除"></a>系统代理记录清除</h2><p>删除 <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings</code> 中 <code>ProxyServer</code> 和 <code>ProxyOverride</code> 的值</p><h2 id="共享网络默认网关修改"><a href="#共享网络默认网关修改" class="headerlink" title="共享网络默认网关修改"></a>共享网络默认网关修改</h2><p>修改 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters</code> 中 <code>ScopeAddress</code> 和 <code>ScopeAddressBackup</code> 的值</p><h2 id="RDP-默认端口修改"><a href="#RDP-默认端口修改" class="headerlink" title="RDP 默认端口修改"></a>RDP 默认端口修改</h2><p>修改 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</code> 中 <code>PortNumber</code> 的值</p><h2 id="Webdav-挂载支持-http"><a href="#Webdav-挂载支持-http" class="headerlink" title="Webdav 挂载支持 http"></a>Webdav 挂载支持 http</h2><p>修改 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters</code> 中 <code>BasicAuthLevel</code> 的值为 <code>2</code>，然后重新启动计算机</p><h2 id="开机自启项"><a href="#开机自启项" class="headerlink" title="开机自启项"></a>开机自启项</h2><p>可使用 <a class="link"   href="https://learn.microsoft.com/zh-cn/sysinternals/downloads/autoruns" >autoruns<i class="fas fa-external-link-alt"></i></a> 管理开机自启项。</p><p><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code><br><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code><br><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</code><br><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code><br><code>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Run</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录 Windows 系统常用注册表。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Windows" scheme="https://kechocy.github.io/tags/Windows/"/>
    
    <category term="注册表" scheme="https://kechocy.github.io/tags/%E6%B3%A8%E5%86%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Debian 服务器配置备忘</title>
    <link href="https://kechocy.github.io/posts/f7465fc9.html"/>
    <id>https://kechocy.github.io/posts/f7465fc9.html</id>
    <published>2025-07-04T08:50:20.000Z</published>
    <updated>2025-08-23T07:09:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录个人 Debian 服务器的配置过程。</p><span id="more"></span><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><p><a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/" >debian | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror<i class="fas fa-external-link-alt"></i></a></p><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo - root</span><br><span class="line">vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure><p>其中 main contrib non-free non-free-firmware 表示不同类型的软件包。</p><ul><li>main 表示符合 <a class="link"   href="https://www.debian.org/doc/manuals/debian-handbook/sect.foundation-documents.zh-cn.html#sect.dfsg" >Debian Free Software Guidelines<i class="fas fa-external-link-alt"></i></a> 的包；</li><li>contrib 是依赖一些非自由软件就才能正常运作的开源软件；</li><li>non-free 和 non-free-firmware 表示非自由软件。</li></ul><blockquote><p>上述这种格式称为传统格式（又称 One-Line-Style 格式）。</p><p>新的 DEB822 格式自 APT 1.1（2015 年发布）起支持，文件后缀为 <code>.sources</code>，存储在 <code>/etc/apt/sources.list.d/</code> 目录下，格式类似如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Types: deb deb-src</span><br><span class="line">URIs: https://mirrors.tuna.tsinghua.edu.cn/debian</span><br><span class="line">Suites: bookworm bookworm-updates bookworm-backports</span><br><span class="line">Components: main contrib non-free non-free-firmware</span><br><span class="line">Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line">Types: deb deb-src</span><br><span class="line">URIs: http://security.debian.org/debian-security</span><br><span class="line">Suites: bookworm-security</span><br><span class="line">Components: main</span><br><span class="line">Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg</span><br></pre></td></tr></table></figure></blockquote><p>安装常用工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install vim git wget curl</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apt update    <span class="comment"># 更新软件索引</span></span><br><span class="line">apt upgrade  <span class="comment"># 更新系统中的所有软件包，但不安装额外的软件包或卸载软件包</span></span><br><span class="line">apt full-upgrade <span class="comment"># 更新系统中的所有软件包，并且在必要的时候安装额外的软件包或卸载软件包</span></span><br><span class="line">apt install foo   <span class="comment"># 安装软件包 foo 和它的全部依赖</span></span><br><span class="line">apt remove foo  <span class="comment"># 卸载软件包 foo</span></span><br><span class="line">apt purge foo    <span class="comment"># 卸载软件包 foo 和它的配置文件</span></span><br><span class="line">apt list --upgradable  <span class="comment"># 列出所有可以更新到新版本的软件包</span></span><br><span class="line"></span><br><span class="line">apt search foo  <span class="comment"># 找出描述中包含 foo 的软件包</span></span><br><span class="line">apt show foo    <span class="comment"># 打印软件包的详细信息</span></span><br><span class="line">apt-cache depends foo    <span class="comment"># 打印软件包的依赖</span></span><br><span class="line">apt-cache showpkg foo   <span class="comment"># 打印软件包各可用版本的详细信息，以及反向依赖它的软件包</span></span><br></pre></td></tr></table></figure><h3 id="dpkg"><a href="#dpkg" class="headerlink" title="dpkg"></a>dpkg</h3><p>除了使用 apt 软件管理工具安装软件外，还可以直接使用 dpkg 命令本地安装 deb 软件包</p><p>deb 包安装与卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i hello.deb       <span class="comment"># 安装</span></span><br><span class="line">dpkg -r hello.deb       <span class="comment"># 保留配置文件卸载</span></span><br><span class="line">dpkg -P hello.deb       <span class="comment"># 清除配置文件卸载</span></span><br><span class="line"></span><br><span class="line">dpkg -l                 <span class="comment"># 显示已安装程序列表</span></span><br><span class="line">dpkg -l | grep <span class="string">&quot;hello&quot;</span>  <span class="comment"># 查询已安装包</span></span><br><span class="line">dpkg -l | grep ^rc      <span class="comment"># 查看处于 rc 状态的软件包</span></span><br></pre></td></tr></table></figure><p><code>dpkg -l</code> 显示已安装程序列表，其中每行输出的第一列 <code>ii</code> 表示软件包的安装和配置状态，其格式如下：<code>期望状态|当前状态|错误</code> 。</p><p>期望状态有以下几种：</p><ul><li>u：即 unknown，软件包未安装且用户未请求安装</li><li>i：即 install，用户请求安装该软件包</li><li>r：即 remove，用户请求卸载该软件包</li><li>p：即 purge，用户请求卸载该软件包并清理配置文件</li><li>h：即 hold，用户请求保持续当前软件包版本</li></ul><p>当前状态有以下几种：</p><ul><li>n：即 not-installed，软件包未安装</li><li>i：即 installed，软件包已安装并完成配置</li><li>c：即 config-files，软件包已经被卸载，但是其配置文件未清理</li><li>u：即 unpacked，软件包已经被解压缩，但还未配置</li><li>f：即 half-configured，配置软件包时出现错误</li><li>w：即 triggers-awaited，触发器等待</li><li>t：即 triggers-pending，触发器未决</li></ul><p>错误状态有以下几种：</p><ul><li>h：软件包被强制保持</li><li>r：即 reinstall-required，需要卸载并重新安装</li><li>x：软件包被破坏</li></ul><p>因此 <code>ii</code> 表示该软件需要安装且已经安装，没有出现错误；<code>iu</code> 表示已经安装该软件，但未正确配置；<code>rc</code> 表示该软件已经被删除，但配置文件未清理。</p><p>一个 deb 包的目录结构如下：</p><ul><li>my.deb<ul><li>DEBIAN<ul><li>control （存放软件包的作者、版本、描述等信息）</li><li>preinst （安装前执行的脚本）</li><li>postinst （安装后执行的脚本）</li><li>prerm （卸载前执行的脚本）</li><li>postrm （卸载后执行的脚本）</li></ul></li><li>usr （存放源码）<ul><li>xxxxxx</li></ul></li></ul></li></ul><p>可以使用以下命令对 deb 包进行解压和打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpkg -x my.deb build  <span class="comment"># 解压源码</span></span><br><span class="line">dpkg -e my.deb build  <span class="comment"># 解压其中的 DEBIAN 内容</span></span><br><span class="line">dpkg -b build my.deb  <span class="comment"># 重新打包为 deb</span></span><br></pre></td></tr></table></figure><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - root</span><br><span class="line">apt install sudo</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -aG sudo username <span class="comment">#将用户 username 添加到 sudo 组中</span></span><br></pre></td></tr></table></figure><p>或者使用 <code>visudo</code> 命令或者编辑 <code>/etc/sudoers</code> 文件，文中添加 <code>username ALL=(ALL) ALL</code> ，保存文件后注销重新登录。</p><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p><a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/" >docker-ce | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror<i class="fas fa-external-link-alt"></i></a></p><p>卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> pkg <span class="keyword">in</span> docker.io docker-doc docker-compose podman-docker containerd runc; <span class="keyword">do</span> apt-get remove <span class="variable">$pkg</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>信任公钥并添加仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">install -m 0755 -d /etc/apt/keyrings</span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line">sudo <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.gpg</span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \</span></span><br><span class="line"><span class="string">  &quot;</span>$(. /etc/os-release &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$VERSION_CODENAME</span>&quot;</span>)<span class="string">&quot; stable&quot;</span> | \</span><br><span class="line">  <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>增加代理加速地址：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://docker.1panel.live&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://docker.ketches.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://hub.iyuu.cn&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo vim docker-compose.yml <span class="comment"># 编辑容器配置文件</span></span><br><span class="line">sudo docker compose up -d</span><br><span class="line">sudo docker compose down</span><br><span class="line">sudo docker <span class="built_in">exec</span> -it [contianer_name] /bin/bash</span><br><span class="line">sudo docker images <span class="comment"># 列出所有镜像</span></span><br><span class="line">sudo docker image remove xxx:xxx <span class="comment"># 删除指定镜像</span></span><br><span class="line">sudo docker container ps <span class="comment"># 列出在运行容器</span></span><br></pre></td></tr></table></figure><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><p>增加内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s3</span><br><span class="line">iface enp0s3 inet static</span><br><span class="line">address 192.168.1.240/24</span><br><span class="line">network 192.168.1.0</span><br><span class="line">broadcast 192.168.1.255</span><br><span class="line">gateway 192.168.1.1</span><br><span class="line">dns-nameservers 223.5.5.5</span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart networking.service</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip address <span class="comment"># 查看网络接口</span></span><br><span class="line">ip route <span class="comment"># 查看路由</span></span><br></pre></td></tr></table></figure><h2 id="smb"><a href="#smb" class="headerlink" title="smb"></a>smb</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install samba</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> share <span class="comment"># 创建共享文件夹</span></span><br><span class="line">sudo vim /etc/samba/smb.conf <span class="comment"># 编辑配置文件</span></span><br></pre></td></tr></table></figure><p>末尾增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SHARE]</span><br><span class="line">comment = My Share Folder</span><br><span class="line">path = /home/username/share</span><br><span class="line">writable = yes</span><br><span class="line">browseable = no</span><br><span class="line">guest ok = no</span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart smbd.service</span><br></pre></td></tr></table></figure><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><p>Debian 12 已经默认安装了 cron</p><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install cron</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">crontab –e     //修改 crontab 文件，如果文件不存在会自动创建</span><br><span class="line">crontab –l      //显示 crontab 文件</span><br><span class="line">crontab -r      //删除 crontab 文件</span><br><span class="line">crontab -ir     //删除 crontab 文件前提醒用户</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认使用当前用户，可以使用 -u 指定用户</span></span><br><span class="line">crontab [-u username] -e</span><br></pre></td></tr></table></figure><h2 id="frpc-自启动"><a href="#frpc-自启动" class="headerlink" title="frpc 自启动"></a>frpc 自启动</h2><p>创建配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/frpc.service</span><br></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Frpc Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=idle</span><br><span class="line">ExecStart=/home/kecho/frp/frpc -c /home/kecho/frp/frpc.toml</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=30s</span><br><span class="line">User=nobody</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>服务启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> frpc.service</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录个人 Debian 服务器的配置过程。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="https://kechocy.github.io/tags/Linux/"/>
    
    <category term="Debian" scheme="https://kechocy.github.io/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 整合 Swagger 实现接口文档</title>
    <link href="https://kechocy.github.io/posts/448c169.html"/>
    <id>https://kechocy.github.io/posts/448c169.html</id>
    <published>2025-06-04T03:16:51.000Z</published>
    <updated>2025-06-04T03:16:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍 OpenApi、Swagger、SpringFox 和 SpringDoc 之间的区别，以及 SpringBoot 如何整合并使用 Swagger 实现接口文档。</p><span id="more"></span><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ul><li>OpenApi 是什么？</li></ul><p><strong>解答：</strong> OpenApi 是一个用于描述、定义和共享 RESTful API 文档的规范。最新规范是 OpenAPI 3.0。</p><ul><li>Swagger 是什么？</li></ul><p><strong>解答：</strong> Swagger 是一个用于设计和测试 RESTful API 的工具，是无关语言的。它提供了 API 描述、请求和响应示例、API 测试和文档生成等丰富的功能。最新版本是 Swagger 3，支持 OpenAPI 3.0 规范。</p><ul><li>SpringFox 是什么？</li></ul><p><strong>解答：</strong> SpringFox 是 Spring 社区维护的一个项目（非官方），帮助使用者将 Swagger 2 集成到 Spring 中。</p><p>地址：<a class="link"   href="https://github.com/springfox/springfox" >https://github.com/springfox/springfox<i class="fas fa-external-link-alt"></i></a></p><ul><li>SpringDoc 是什么？</li></ul><p><strong>解答：</strong> SpringDoc 也是 Spring 社区维护的一个项目（非官方），帮助使用者将 Swagger 3 集成到 Spring 中。SpringDoc 支持 Swagger 页面、Oauth2 登录，相较于 SpringFox 而言，它的支撑时间更长，无疑是更好的选择。</p><p>地址：<a class="link"   href="https://springdoc.org/" >https://springdoc.org/<i class="fas fa-external-link-alt"></i></a></p><ul><li>它们之间的关系</li></ul><p><strong>解答：</strong> OpenAPI 定义了一种标准的格式来表示 API 文档，而 Swagger 是一个实现 OpenAPI 规范的工具，而 SpringFox 和 SpringDoc 都是将 Swagger 继承到 Spring 框架中方便使用。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>如何将 Swagger 集成到 SpringBoot 中？</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>JDK 17</li><li>SpringBoot 3</li></ul><p>在 SpringBoot 3 之前用的都是 SpringFox 来集成 Swagger 管理我们的 API 接口文档，但是 SpringFox 已经停止更新了，本次我们使用的是 SpringBoot 3 、JDK 17 的环境，推荐使用 SpringDoc 来整合 Swagger。</p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springdoc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springdoc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/07/05/h5ejrs.png"                        alt="不再使用的旧 swagger 依赖"                 ></p><h3 id="编写-Controller-类"><a href="#编写-Controller-类" class="headerlink" title="编写 Controller 类"></a>编写 Controller 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问接口页面"><a href="#访问接口页面" class="headerlink" title="访问接口页面"></a>访问接口页面</h3><p>浏览器直接输入：<a class="link"   href="http://localhost:8080/swagger-ui/index.html" >http://localhost:8080/swagger-ui/index.html<i class="fas fa-external-link-alt"></i></a> 回车即可看到下面界面：</p><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/07/05/h5eu35.png"                        alt="swagger-ui 页面"                 ></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在 <code>application.yml</code> 中可以自定义 api-docs 和 swagger-ui 的访问路径，扫描的指定包等等。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">springdoc:</span></span><br><span class="line">  <span class="attr">api-docs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/v3/api-docs</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span> <span class="comment"># 关闭接口文档，可针对 application-dev.yml / application-test 进行不同配置</span></span><br><span class="line">  <span class="attr">swagger-ui:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/swagger-ui.html</span></span><br><span class="line">  <span class="attr">packages-to-scan:</span> <span class="string">com.example.swaggerdemo.common.controller</span> <span class="comment"># 只显示 common 包下的接口</span></span><br></pre></td></tr></table></figure><p>可以通过配置类来自定义 swagger-ui 页面信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@OpenAPIDefinition(</span></span><br><span class="line"><span class="meta">        // 不同环境的服务器地址</span></span><br><span class="line"><span class="meta">        servers = &#123;</span></span><br><span class="line"><span class="meta">                @Server(description = &quot;开发环境服务器&quot;, url = &quot;http://localhost:8080&quot;),</span></span><br><span class="line"><span class="meta">                @Server(description = &quot;测试环境服务器&quot;, url = &quot;https://test.xiezhr.com&quot;)</span></span><br><span class="line"><span class="meta">        &#125;,</span></span><br><span class="line"><span class="meta">        // 配置外部文档地址</span></span><br><span class="line"><span class="meta">        externalDocs = @ExternalDocumentation(</span></span><br><span class="line"><span class="meta">                description = &quot;项目编译部署说明&quot;,</span></span><br><span class="line"><span class="meta">                url = &quot;http://localhost:8080/deplay/readme.md&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringDocConfig</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OpenAPI <span class="title function_">openAPI</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OpenAPI</span>()</span><br><span class="line">                <span class="comment">// 配置接口文档基本信息</span></span><br><span class="line">                .info(<span class="built_in">this</span>.getApiInfo())</span><br><span class="line">                ;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Info <span class="title function_">getApiInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Info</span>()</span><br><span class="line">                 <span class="comment">// 配置文档标题</span></span><br><span class="line">                .title(<span class="string">&quot;SpringBoot3集成Swagger3&quot;</span>)</span><br><span class="line">                <span class="comment">// 配置文档描述</span></span><br><span class="line">                .description(<span class="string">&quot;SpringBoot3集成Swagger3示例文档&quot;</span>)</span><br><span class="line">                <span class="comment">// 配置作者信息</span></span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>().name(<span class="string">&quot;程序员小凡&quot;</span>).url(<span class="string">&quot;https://www.xiezhrspace.cn&quot;</span>).email(<span class="string">&quot;1666397814@163.com&quot;</span>))</span><br><span class="line">                <span class="comment">// 配置License许可证信息</span></span><br><span class="line">                .license(<span class="keyword">new</span> <span class="title class_">License</span>().name(<span class="string">&quot;Apache 2.0&quot;</span>).url(<span class="string">&quot;https://www.xiezhrspace.cn&quot;</span>))</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                .summary(<span class="string">&quot;SpringBoot3集成Swagger3示例文档aaa&quot;</span>)</span><br><span class="line">                .termsOfService(<span class="string">&quot;https://www.xiezhrspace.cn&quot;</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="comment">// 配置版本号</span></span><br><span class="line">                .version(<span class="string">&quot;2.0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对接口进行分组</span></span><br><span class="line">    <span class="meta">@Bean(&quot;commonGroupApi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> GroupedOpenApi <span class="title function_">webGroupApi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> GroupedOpenApi.builder().group(<span class="string">&quot;common通用模块组&quot;</span>)</span><br><span class="line">            .pathsToMatch(<span class="string">&quot;/common/**&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean(&quot;adminGroupApi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> GroupedOpenApi <span class="title function_">adminGroupApi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> GroupedOpenApi.builder().group(<span class="string">&quot;admin模块组&quot;</span>)</span><br><span class="line">            .pathsToMatch(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/07/05/h5exkz.png"                        alt="swagger-ui 自定义配置效果"                 ></p><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/07/05/h5eqvq.png"                        alt="swagger-ui 接口分组效果"                 ></p><h2 id="注解使用"><a href="#注解使用" class="headerlink" title="注解使用"></a>注解使用</h2><h3 id="Controller-类"><a href="#Controller-类" class="headerlink" title="Controller 类"></a>Controller 类</h3><p>① <code>@Tag</code> 注解，用于类上。</p><ul><li>name: 名称</li><li>description: 接口描述信息</li></ul><p>② <code>@Operation</code> 注解，用在方法上。</p><ul><li>summary：方法概要，方法的一个简单介绍，建议 120 个字符内</li><li>description：方法描述，一般是很长的内容</li><li>hidden：是否隐藏</li></ul><p>③<code>@Parameter</code> 注解，用在方法参数上。</p><ul><li>name：指定的参数名</li><li>in：参数位置，可选 query、header、path 或 cookie，默认为空，表示忽略</li><li>description：参数描述</li><li>required：是否必填，默认为 false</li></ul><p>④ <code>@ApiResponse</code> 注解，用于说明一个响应信息，用在 <code>@ApiResponses</code> 中。</p><ul><li>responseCode：HTTP 响应码</li><li>description：描述</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/common&quot;)</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;公共接口&quot;, description = &quot;公共接口&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IUserService userService;</span><br><span class="line"> </span><br><span class="line">   <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">   <span class="meta">@Operation(summary = &quot;hello接口&quot;, description = &quot;hello接口描述&quot;, hidden = true)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;hi接口&quot;, description = &quot;hi接口描述&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">Hi</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hi 程序员小凡&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;获取用户信息&quot;, description = &quot;根据用户ID获取用户信息&quot;)</span></span><br><span class="line">    <span class="meta">@ApiResponses(value =&#123;</span></span><br><span class="line"><span class="meta">            @ApiResponse(responseCode = &quot;200&quot;, description = &quot;请求成功&quot;),</span></span><br><span class="line"><span class="meta">            @ApiResponse(responseCode = &quot;404&quot;, description = &quot;用户不存在&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">( <span class="meta">@Parameter(name = &quot;id&quot;, in = ParameterIn.PATH, description = &quot;用户ID&quot;, required = true)</span> <span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getUserById(id);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/07/05/h5ephl.png"                        alt="swagger Controller 类常用注解效果"                 ></p><p>⑤<code>@RequestHeader</code> 注解。</p><p>很多时候我们接口都需要认证之后才能访问，这时候我们就需要接口调用的时候携带着 token 信息，我们通过 <code>@RequestHeader</code> 注解，获取请求头中 token 信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String  <span class="title function_">admin</span><span class="params">(<span class="meta">@RequestHeader</span> (<span class="string">&quot;token&quot;</span>)</span> String token)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;token&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + token);</span><br><span class="line">    <span class="comment">//token 验证</span></span><br><span class="line">    <span class="comment">//.....各种业务逻辑</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/07/05/h5eof0.png"                        alt="swagger RequestHeader 注解效果"                 ></p><h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><p><code>@Schema</code> 注解，用于描述数据对象信息或数据对象属性，用在类或类属性上。</p><ul><li>name: 属性名称</li><li>description: 属性描述</li><li>required: 是否必须</li><li>minLength: 字符最小长度</li><li>maxLength: 字符最大长度</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Schema(description = &quot;用户实体类&quot;, name = &quot;User&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户名&quot;, name = &quot;name&quot;, minLength = 6, maxLength = 20, required = true)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;年龄&quot;, name = &quot;age&quot;, required = true, minimum = &quot;1&quot;, maximum = &quot;100&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;邮箱&quot;, name = &quot;email&quot;, required = true)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;地址&quot;, name = &quot;address&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://img.kecho.top/i/2025/07/05/h5eoug.png"                        alt="swagger Schema 注解效果"                 ></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍 OpenApi、Swagger、SpringFox 和 SpringDoc 之间的区别，以及 SpringBoot 如何整合并使用 Swagger 实现接口文档。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Spring Boot" scheme="https://kechocy.github.io/tags/Spring-Boot/"/>
    
    <category term="Swagger" scheme="https://kechocy.github.io/tags/Swagger/"/>
    
  </entry>
  
  <entry>
    <title>常用编程语言基础语法对比</title>
    <link href="https://kechocy.github.io/posts/d0f4f654.html"/>
    <id>https://kechocy.github.io/posts/d0f4f654.html</id>
    <published>2025-05-08T07:36:38.000Z</published>
    <updated>2025-05-08T07:36:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将对 Java、Go、Python 等编程语言的基础语法进行对比。</p><span id="more"></span><h2 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h2><div class="keep-tabs" id="keep-tabs-1757405347326">            <div class="tabs-nav"><div class="tab active" data-href="keep-tabs-1757405347326-1">Java</div><div class="tab" data-href="keep-tabs-1757405347326-2">Go</div><div class="tab" data-href="keep-tabs-1757405347326-3">Python</div></div><div class="tabs-content"><div class="tab-pane active" id="keep-tabs-1757405347326-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.main;</span><br><span class="line"><span class="keyword">import</span> com.example.myapp.MyClass;</span><br><span class="line"><span class="keyword">import</span> com.example.main.TestClass;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1757405347326-2"><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;foo/bar&quot;</span> <span class="comment">// 导入本地包</span></span><br><span class="line">    myBar <span class="string">&quot;foo/bar&quot;</span> <span class="comment">// 别名</span></span><br><span class="line">    <span class="string">&quot;github.com/username/myproject/foo&quot;</span> <span class="comment">// 导入三方包</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1757405347326-3"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> module_name_1</span><br><span class="line"><span class="keyword">import</span> module_name_2 <span class="keyword">as</span> alias</span><br><span class="line"><span class="keyword">from</span> module_name_3 <span class="keyword">import</span> class_name, func_name</span><br><span class="line"><span class="keyword">from</span> module_name_4 <span class="keyword">import</span> *  <span class="comment"># 导入所有内容</span></span><br><span class="line">module = <span class="built_in">__import__</span>(<span class="string">&#x27;module_name_5&#x27;</span>)  <span class="comment"># 动态导入</span></span><br></pre></td></tr></table></figure></div></div>          </div><h2 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h2><div class="keep-tabs" id="keep-tabs-1757405347326">            <div class="tabs-nav"><div class="tab active" data-href="keep-tabs-1757405347326-1">Java</div><div class="tab" data-href="keep-tabs-1757405347326-2">Go</div><div class="tab" data-href="keep-tabs-1757405347326-3">Python</div></div><div class="tabs-content"><div class="tab-pane active" id="keep-tabs-1757405347326-1"><p>if 结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( condition1 ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( condition2 ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch 结构，多行语句不需要花括号但需要手动写 <code>break;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> ( val ) &#123;</span><br><span class="line">    <span class="keyword">case</span> val1:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> val2:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>循环结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ ) &#123;</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ( condition ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">while</span> ( condition );</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1757405347326-2"><blockquote><p>不需要小括号</p></blockquote><p>if 结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1 &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> condition2 &#123;</span><br><span class="line">    <span class="comment">// ...    </span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch 结构，多行语句不需要花括号且不需要手动写 <code>break;</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> val &#123;</span><br><span class="line">    <span class="keyword">case</span> val1:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">case</span> val2:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>循环结构，没有 <code>while</code> 关键字但有 <code>for - range</code> 结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> condition &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pos, char := <span class="keyword">range</span> myStr &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="keep-tabs-1757405347326-3"><blockquote><p>需要冒号，不需要花括号，小括号可省略，</p></blockquote><p>if 结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">elif</span> condition2:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">elif</span> condition3:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># ...</span></span><br></pre></td></tr></table></figure><p>没有 switch 结构，可以使用 and 或 or 来组合多个条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1 <span class="keyword">or</span> condition2:</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># ...</span></span><br></pre></td></tr></table></figure><p>循环结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="string">&#x27;Python&#x27;</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;当前字母: %s&quot;</span> % letter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> condition:</span><br><span class="line">    <span class="comment"># ...</span></span><br></pre></td></tr></table></figure></div></div>          </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文将对 Java、Go、Python 等编程语言的基础语法进行对比。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript 模块化规范的使用说明</title>
    <link href="https://kechocy.github.io/posts/2b046bca.html"/>
    <id>https://kechocy.github.io/posts/2b046bca.html</id>
    <published>2025-04-20T08:35:13.000Z</published>
    <updated>2025-04-20T08:35:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍了常用的 JavaScript 模块化规范的使用说明，包含 ESMA6、CommonJS 等其它规范。</p><span id="more"></span><p><a class="link"   href="https://www.bilibili.com/video/BV13W42197jR/" >视频链接<i class="fas fa-external-link-alt"></i></a></p><p>ESMA6 使用 <strong>import</strong> 关键字导入</p><p>CommonJS 使用 <strong>require</strong> 关键字导入</p><h2 id="ES6-模块规范"><a href="#ES6-模块规范" class="headerlink" title="ES6 模块规范"></a>ES6 模块规范</h2><p>ES6 模块规范主要用于客户端，也可用于服务端。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>服务端：</p><ul><li>将 <code>.js</code> 文件改为 <code>.mjs</code> 文件</li><li>在 <code>package.json</code> 中添加定义 <code>&#39;type&#39;: &#39;module&#39;</code></li></ul><p>浏览器端：</p><ul><li>在 html 文件中使用 <code>&lt;script type=&quot;module&quot; src=&quot;index.js&quot;&gt;&lt;/script&gt;</code> 引入。<blockquote><p>直接在本地使用浏览器打开 html 文件浏览器会报错，请启动 web 服务器后通过 <code>IP:端口</code> 访问网页。</p></blockquote></li></ul><h3 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h3><p>导出有三种方式：</p><ul><li>分别导出</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="comment">// import &#123; name as newName, age, getTel &#125; from &#x27;./student.js&#x27;;</span></span><br><span class="line"><span class="comment">// console.log(newName);</span></span><br></pre></td></tr></table></figure><ul><li>统一导出</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; name, age, getTel &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="comment">// import &#123; name as newName, age, getTel &#125; from &#x27;./student.js&#x27;;</span></span><br><span class="line"><span class="comment">// console.log(newName);</span></span><br></pre></td></tr></table></figure><ul><li>默认导出</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// export default &#123;</span></span><br><span class="line"><span class="comment">//     name: name,</span></span><br><span class="line"><span class="comment">//     age: age,</span></span><br><span class="line"><span class="comment">//     getTel: getTel</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可省略书写</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; name, age, getTel &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="comment">// import student from &#x27;./student.js&#x27;;</span></span><br><span class="line"><span class="comment">// console.log(student.name);</span></span><br></pre></td></tr></table></figure><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><p>除了使用相对应的导入方式外，还可以进行全部导入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> student <span class="keyword">from</span> <span class="string">&#x27;./student.js&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(student.<span class="property">name</span>);</span><br></pre></td></tr></table></figure><p>也可以根据事件来进行动态导入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; name, age, getTel &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">import</span>(<span class="string">&#x27;./student.js&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CommonJS-规范"><a href="#CommonJS-规范" class="headerlink" title="CommonJS 规范"></a>CommonJS 规范</h2><p>CommonJS 规范主要用于服务端</p><h3 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h3><p>如果想要在浏览器端使用，可以通过 <a class="link"   href="https://browserify.org/" >browserify<i class="fas fa-external-link-alt"></i></a> 将原本的 js 文件进行翻译，再将翻译后的文件在 html 中引用。</p><h3 id="导出数据-1"><a href="#导出数据-1" class="headerlink" title="导出数据"></a>导出数据</h3><p>在 CommonJS 规范中有两种导出方式，导出的是一个普通对象，默认为 <code>&#123;&#125;</code>。</p><ul><li>通过 <code>exports</code>：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">name</span> = name;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">age</span> = age;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">getTel</span> = getTel;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以写成 module.exports.name = name;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="comment">// const student = require(&#x27;./student.js&#x27;);</span></span><br><span class="line"><span class="comment">// console.log(student.name);</span></span><br></pre></td></tr></table></figure><ul><li>通过 <code>module.exports</code>：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// module.exports = &#123;</span></span><br><span class="line"><span class="comment">//     name: name,</span></span><br><span class="line"><span class="comment">//     age: age,</span></span><br><span class="line"><span class="comment">//     getTel: getTel</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可省略书写</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; name, age, getTel &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能写成 exports = &#123; name, age, getTel &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="comment">// const student = require(&#x27;./student.js&#x27;);</span></span><br><span class="line"><span class="comment">// console.log(student.name);</span></span><br></pre></td></tr></table></figure><h3 id="导入数据-1"><a href="#导入数据-1" class="headerlink" title="导入数据"></a>导入数据</h3><p>导入时还能通过解构赋值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">name</span>: newName, age, getTel &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./student.js&#x27;</span>); <span class="comment">// 解构导入并重命名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newName);</span><br></pre></td></tr></table></figure><p>也可以根据事件来进行动态导入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="built_in">require</span>(<span class="string">&#x27;./student.js&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>注意点如下：</p><ol><li>每个模块内部的：<code>this</code>、<code>exports</code>、<code>module.exports</code> 在初始时都指向同一个空对象。<code>console.log(this===exports &amp;&amp; exports === module.exports); // true</code>。</li><li>无论如何修改导出对象，最终导出的都是 <code>module.exports</code> 的值。</li><li><code>exports</code> 是对 <code>module.exports</code> 的初始引用，仅为了方便给导出对象添加属性，所以不能使用 <code>exports = value</code> 的形式导出数据，可以使用 <code>exports.value = value</code> 、<code>module.exports = value</code> 导出数据。</li></ol><p>思考以下代码在导入时获取到的数据是什么？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span> = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">c</span> = <span class="number">3</span>;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; <span class="attr">d</span>: <span class="number">4</span> &#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> student = <span class="built_in">require</span>(<span class="string">&#x27;./student.js&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(student);</span><br><span class="line"><span class="comment">// 输出：&#123; d: 4 &#125;</span></span><br></pre></td></tr></table></figure><p>分析：</p><ol><li><code>exports </code>-&gt; <code>&#123;&#125;</code> &lt;- <code>module.exports</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1 &#125;</code> ；<code>module.exports</code> -&gt; <code>&#123;&#125;</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1, b: 2 &#125;</code>；<code>module.exports</code> -&gt; <code>&#123;&#125;</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1, b: 2 &#125;</code>；<code>module.exports</code> -&gt; <code>&#123; c: 3 &#125;</code></li><li><code>exports</code> -&gt; <code>&#123; a: 1, b: 2 &#125;</code>；没有东西指向 <code>&#123; c: 3 &#125; </code>；<code>module.exports</code> -&gt; <code>&#123; d: 4 &#125;</code></li></ol><h2 id="导入时执行"><a href="#导入时执行" class="headerlink" title="导入时执行"></a>导入时执行</h2><p>两种规范在导入时都会执行代码。<br>如果有一个文件如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// log.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world!&#x27;</span>);</span><br></pre></td></tr></table></figure><p>导入时 <code>console.log(&#39;hello world!&#39;)</code> 会执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import &#x27;./log.js&#x27;;  // ES 规范</span></span><br><span class="line"><span class="comment">// const student = require(&#x27;./student.js&#x27;);  // CommonJS 规范</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 会输出：</span></span><br><span class="line"><span class="comment">// hello</span></span><br></pre></td></tr></table></figure><h2 id="数据引入问题"><a href="#数据引入问题" class="headerlink" title="数据引入问题"></a>数据引入问题</h2><p>思考同一代码在 CommonJS 规范和 ES6 规范的执行结果：</p><ul><li>CommonJS 规范</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// data.js</span></span><br><span class="line"><span class="keyword">let</span> sum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    sum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; sum, increment &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; sum, increment &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./data.js&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br></pre></td></tr></table></figure><blockquote><p>输出：</p><p>1<br>data: 2<br>data: 3<br>1</p></blockquote><ul><li>ES6 规范</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// data.js</span></span><br><span class="line"><span class="keyword">let</span> sum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    sum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; sum, increment &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; sum, increment &#125; <span class="keyword">from</span> <span class="string">&#x27;./data.js&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br></pre></td></tr></table></figure><blockquote><p>输出：</p><p>1<br>data: 2<br>data: 3<br>3</p></blockquote><p>对比两者发现，ES6 规范中执行完函数后的 <code>sum</code> 的值不一样了，是因为 <code>index.js</code> 和 <code>data.js</code> 中的 <code>sum</code> 是同一片内存空间（在 CommonJS 规范中导入是将值进行了复制），为了避免这种情况应该在 <code>data.js</code> 中声明常量而不是变量，即改为 <code>const sum = 1</code>。</p><h2 id="模块化的好处"><a href="#模块化的好处" class="headerlink" title="模块化的好处"></a>模块化的好处</h2><p>模块化能够有效解决：</p><ul><li>全局污染问题</li><li>数据安全问题</li><li>依赖混乱问题</li></ul><p>在使用模块化以前：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;student.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用模块化以后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// student.js</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="string">&#x27;18&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTel</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;13333333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSubject</span> ()&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; name, age, getTel &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> student <span class="keyword">from</span> <span class="string">&#x27;./student.js&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>1、全局污染</p><p>使用模块化以前，如果引入的多个文件有相同的变量名会产生冲突。使用模块化以后，相同的变量名都会有自己的作用域。</p><p>2、数据安全问题</p><p>使用模块化以前，此时在浏览器控制台是能够获取到 <code>name</code>、<code>age</code> 等变量的。使用模块化以后，此时在浏览器控制台是无法获取到 <code>student.name</code> 变量的。</p><p>3、依赖混乱问题</p><p>在使用模块化以前，直接在 html 文件中引入 js 的顺序至关重要，尤其是需要引入多个 js 文件时，特别需要关注他们的依赖关系来确定引入顺序，十分麻烦。使用模块化后，可以在各个 js 文件中显式导入需要使用到的模块，而不用关心 html 文件中引入 js 的顺序。</p><h2 id="其它规范"><a href="#其它规范" class="headerlink" title="其它规范"></a>其它规范</h2><p><a class="link"   href="https://github.com/amdjs/amdjs-api/wiki/AMD" >AMD 规范<i class="fas fa-external-link-alt"></i></a> 是 RequireJS 在推广过程中对模块定义的规范化产出。</p><p><a class="link"   href="https://github.com/seajs/seajs/issues/242" >CMD 规范<i class="fas fa-external-link-alt"></i></a> 是 SeaJS 在推广过程中对模块定义的规范化产出。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍了常用的 JavaScript 模块化规范的使用说明，包含 ESMA6、CommonJS 等其它规范。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://kechocy.github.io/tags/JavaScript/"/>
    
    <category term="ESMA6" scheme="https://kechocy.github.io/tags/ESMA6/"/>
    
    <category term="CommonJS" scheme="https://kechocy.github.io/tags/CommonJS/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 参数校验</title>
    <link href="https://kechocy.github.io/posts/f00bce88.html"/>
    <id>https://kechocy.github.io/posts/f00bce88.html</id>
    <published>2025-04-02T08:33:10.000Z</published>
    <updated>2025-04-02T08:33:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot 中使用 JSR 对前端传来的数据进行校验的过程。 </p><span id="more"></span><blockquote><p>本文省略对返回结果和响应枚举类型的封装。</p></blockquote><h2 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 spring-boot-starter-web 中已包含上述包。</p><h2 id="统一异常处理"><a href="#统一异常处理" class="headerlink" title="统一异常处理"></a>统一异常处理</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line">    <span class="comment">// 处理 @Valid 校验失败异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="keyword">public</span> JSONResult&lt;Void&gt; <span class="title function_">handlerValidationException</span><span class="params">(MethodArgumentNotValidException e)</span> &#123;</span><br><span class="line">        log.warn(<span class="string">&quot;参数校验失败：&quot;</span> + e.getMessage(), e);</span><br><span class="line">        <span class="type">String</span> <span class="variable">errorMessage</span> <span class="operator">=</span> e.getBindingResult()</span><br><span class="line">                .getAllErrors()</span><br><span class="line">                .stream()</span><br><span class="line">                .map(ObjectError::getDefaultMessage)</span><br><span class="line">                .collect(Collectors.joining(<span class="string">&quot;;&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> JSONResult.error(StatusCodeEnum.FAIL.getCode(), errorMessage);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理其它异常...</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JSR-注解校验"><a href="#JSR-注解校验" class="headerlink" title="JSR 注解校验"></a>JSR 注解校验</h2><p>UserVO</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> &#123;</span><br><span class="line">    <span class="meta">@NotNull(message = &quot;用户名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(value=&quot;/save&quot;)</span></span><br><span class="line"><span class="comment">// 接口接收参数上添加 @Valid 注解进行校验</span></span><br><span class="line"><span class="keyword">public</span> JSONResult <span class="title function_">insert</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> UserVO vo)</span>&#123;</span><br><span class="line">userService.insert(vo);</span><br><span class="line">    <span class="keyword">return</span> JSONResult.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收到前端发送请求后会对数据进行校验，如果校验失败会抛出 MethodArgumentNotValidException 异常，全局异常处理器将捕获到异常进行处理。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>当前端请求：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>后端返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">400</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;用户名不能为空&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Spring Boot 中使用 JSR 对前端传来的数据进行校验的过程。 &lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Spring Boot" scheme="https://kechocy.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Framework</title>
    <link href="https://kechocy.github.io/posts/874e8d58.html"/>
    <id>https://kechocy.github.io/posts/874e8d58.html</id>
    <published>2025-03-25T05:01:18.000Z</published>
    <updated>2025-04-02T07:01:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Framework 是一个功能强大的 Java 应用程序框架，旨在提供高效且可扩展的开发环境。它结合了轻量级的容器和依赖注入功能，提供了一种使用 POJO 进行容器配置和面向切面的编程的简单方法，以及一组用于 AOP 的模块。</p><span id="more"></span><p>Spring 两大核心机制：</p><ul><li>IoC（控制反转）：工厂模式</li><li>AOP（面向切面编程）：代理模式</li></ul><h2 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h2><p>1、创建 Maven 工程，在 <code>pom.xml</code> 导入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、在 resources 路径下创建 <code>spring.xml</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、获取 IoC 容器中已经创建的对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring.xml&quot;</span>);</span><br><span class="line"><span class="comment">// 通过 bean id 获取，返回值需要强制类型转换</span></span><br><span class="line"><span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) context.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以通过类名获取，但要确保容器中只有一个该类型的 bean</span></span><br><span class="line"><span class="comment">// Student student = context.getBean(Student.class);</span></span><br><span class="line">System.out.println(student.toString());</span><br></pre></td></tr></table></figure><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><h3 id="bean"><a href="#bean" class="headerlink" title="bean"></a>bean</h3><p>bean 标签用于创建一个对象，id 是唯一标识，class 是完全限定类名，name 可以同时取多个别名，别名之间可以使用空格或逗号或分号分隔。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> <span class="attr">name</span>=<span class="string">&quot;student1 student2 student3&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h3><p>alias 可用于配置别名，alias 的 name 对应需要取别名的 bean 的 id。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;student&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;stuNew&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="import"><a href="#import" class="headerlink" title="import"></a>import</h3><p>import 用于导入其它配置文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans1.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans2.xml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建顺序"><a href="#创建顺序" class="headerlink" title="创建顺序"></a>创建顺序</h2><p>IoC 容器默认情况下是通过 <code>spring.xml</code> 中 bean 的配置顺序来决定创建顺序的，配置在前⾯的 bean 会先创建。在不更改配置顺序的前提下，通过 depends-on 来设置 bean 之间的依赖关系，从而调整 bean 的创建顺序。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> <span class="attr">depends-on</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码的结果是先创建 Cat，再创建 Student 对象。</p><h2 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h2><p>IoC 容器通过读取 <code>spring.xml</code> 配置文件，按照顺序加载 bean 标签来创建对象，相当于替代了手动去 new 一个对象的过程，而创建对象的方式主要有两种：构造函数和 Setter 方法。</p><h3 id="通过构造函数"><a href="#通过构造函数" class="headerlink" title="通过构造函数"></a>通过构造函数</h3><p>IoC 容器通过对应构造函数去创建对象，这也要求实体类必须有对应的构造函数。</p><ul><li>无参构造函数（实体类必须有无参构造函数）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>有参构造函数（实体类必须有相同参数列表的有参构造函数）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 name 时，参数顺序必须和构造函数中的参数顺序保持一致，其中 String 类型会自动转 int 类型（实体类 Student 中的 id 和 age 均为 int 类型）。</p><p>你也可以使用 index 来避免顺序不一致导致可能出现的问题：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还可以使用 type 根据参数类型来匹配构造函数创建 bean（如果有多个有参构造函数，通过参数类型无法匹配到唯一的构造函数时会报错）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过-Setter-方法"><a href="#通过-Setter-方法" class="headerlink" title="通过 Setter 方法"></a>通过 Setter 方法</h3><p>IoC 容器通过 Setter 方法去创建对象，这要求对应字段在实体类中必须有对应的 Setter 方法。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果我想把 name 的值设置为 <code>&lt;小二&gt;</code>，因为字符串包含了特殊字符，应该改用 <strong>CDATA</strong> 格式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[&lt;小二&gt;]]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两种创建方式的写法非常相似，主要是 <code>constructor-arg</code> 和 <code>property</code> 的不同，接下来的示例主要以 Setter 方法为主，构造器注入同理。</p><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><p>DI 是指 bean 之间的依赖注入，用于设置对象之间的级联关系。此时应该改用 ref 而不能改用 value，否则会抛出类型转换异常。除了 ref，还有数组、 List、Set、Map、Properties 类型，下面将使用 Setter 方式注入展示各种类型的写法：</p><p>实体类 Student：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbys;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line">    <span class="keyword">private</span> String spouse;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>spring.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 普通值注入 value --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引用注入 ref --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- List --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbys&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>听歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>敲代码<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Set --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>王者荣耀<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Map --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;身份证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456123412121234&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- null --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;spouse&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Properties --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;学号&quot;</span>&gt;</span>111111<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;性别&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面如果改用构造器注入又改怎么写呢？只需要将 <code>property</code> 改成 <code>constructor-arg</code> 即可。</p><h2 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h2><h3 id="c-命名空间"><a href="#c-命名空间" class="headerlink" title="c 命名空间"></a>c 命名空间</h3><p>c 命名空间对应构造器注入。</p><p>使用 c 命名空间应在 xml 头部引入约束：<code>xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;咪咪&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">c:name</span>=<span class="string">&quot;kecho&quot;</span> <span class="attr">c:id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">c:cat-ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="p-命名空间"><a href="#p-命名空间" class="headerlink" title="p 命名空间"></a>p 命名空间</h3><p>p 命名空间对应 Setter 方法注入。</p><p>使用 p 命名空间应在 xml 头部引入约束：<code>xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;咪咪&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">p:name</span>=<span class="string">&quot;kecho&quot;</span> <span class="attr">p:id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">p:cat-ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>bean 是根据 scope 来⽣成，表示 bean 的作⽤域，scope 有4种类型：</p><ul><li>singleton，单例，表示通过容器获取的对象是唯⼀的，默认值。</li><li>prototype，原型，表示通过容器获取的对象是不同的。</li><li>request，请求，表示在⼀次 HTTP 请求内有效。</li><li>session，会话，表示在⼀个⽤户会话内有效。</li></ul><p>requset，session 适⽤于 Web 项⽬。</p><p>singleton 模式下，只要加载 IoC 容器，⽆论是否从 IoC 中取出 bean，配置⽂件中的 bean 都会被创建。prototype 模式下，如果不从 IoC 中取 bean，则不创建对象，取⼀次 bean，就会创建⼀个对象。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;student&quot; class=&quot;com.kecho.entity.Student&quot; scope=&quot;prototype&quot;/&gt;</span><br></pre></td></tr></table></figure><p>也可以通过对类添加注解 <code>@Scope(&quot;prototype&quot;)</code> 来实现同样功能。</p><h2 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h2><p>默认情况下，ApplicationContext 的实现会急切地创建和配置所有的单例 bean，你可以通过将 bean 定义标记为懒加载来阻止单例 bean 的预实例化。懒加载的 bean 告诉 IoC 容器在第一次被请求时创建一个 bean 实例，而不是在启动时。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.Student&quot;</span> <span class="attr">lazy-init</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>当懒加载 bean 是被未懒加载的单例 bean 所依赖时，ApplicationContext 会在启动时创建懒加载 bean。</p><p>你也可以通过使用 <code>&lt;beans&gt;</code> 元素上的 <code>default-lazy-init</code> 属性来控制容器级的懒加载：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">default-lazy-init</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- no beans will be pre-instantiated... --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="读取外部资源"><a href="#读取外部资源" class="headerlink" title="读取外部资源"></a>读取外部资源</h2><p>实际开发中，数据库的配置⼀般会单独保存到后缀为 properties 的⽂件中，⽅便维护和修改，如果使⽤ Spring 来加载数据源，就需要在 <code>spring.xml</code> 中读取 properties 中的数据，这就是读取外部资源。</p><p>jdbc.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/library</span></span><br><span class="line"><span class="attr">driverName</span> = <span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><p>spring.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导⼊外部资源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- SpEL --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.DataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driverName&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="工厂方法"><a href="#工厂方法" class="headerlink" title="工厂方法"></a>工厂方法</h2><p>IoC 通过⼯⼚模式创建 bean 有两种⽅式：静态⼯⼚⽅法和实例⼯⼚⽅法，区别在于静态⼯⼚类不需要实例化，实例⼯⼚类需要实例化。</p><h3 id="静态⼯⼚⽅法"><a href="#静态⼯⼚⽅法" class="headerlink" title="静态⼯⼚⽅法"></a>静态⼯⼚⽅法</h3><p>1、创建 Car 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Car</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer num;</span><br><span class="line"><span class="keyword">private</span> String brand;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、创建静态⼯⼚类、静态⼯⼚⽅法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StaticCarFactory</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Car&gt; carMap;</span><br><span class="line"><span class="keyword">static</span> &#123; </span><br><span class="line">        carMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        carMap.put(<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">1</span>,<span class="string">&quot;奥迪&quot;</span>));</span><br><span class="line">        carMap.put(<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">2</span>,<span class="string">&quot;奥拓&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title function_">getCar</span><span class="params">(Integer num)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> carMap.get(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、spring.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.factory.StaticCarFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getCar&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>factory-method</code> 指向静态⽅法，<code>constructor-arg</code> 的 value 属性是调⽤静态⽅法传⼊的参数。</p><h3 id="实例⼯⼚⽅法"><a href="#实例⼯⼚⽅法" class="headerlink" title="实例⼯⼚⽅法"></a>实例⼯⼚⽅法</h3><p>1、创建实例⼯⼚类、⼯⼚⽅法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InstanceCarFactory</span>&#123;</span><br><span class="line"><span class="keyword">private</span> Map&lt;Integer, Car&gt; carMap;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">InstanceCarFactory</span><span class="params">()</span> &#123; </span><br><span class="line">        carMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        carMap.put(<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">1</span>,<span class="string">&quot;奥迪&quot;</span>));</span><br><span class="line">        carMap.put(<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">Car</span>(<span class="number">2</span>,<span class="string">&quot;奥拓&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">(Integer num)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> carMap.get(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、spring.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;instanceCarFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.factory.InstanceCarFactory&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car2&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;instanceCarFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getCar&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>静态⼯⼚⽅法创建 Car 对象，不需要实例化⼯⼚对象，因为静态⼯⼚的静态⽅法，不需要创建对象即可调⽤，spring.xml 中只需要配置⼀个 bean，即最终的结果 Car 即可。</p><p>实例⼯⼚⽅法创建 Car 对象，需要实例化⼯⼚对象，因为 getCar ⽅法是⾮静态的，就必须通过实例化对象才能调⽤，所以就必须要创建⼯⼚对象，<code>spring.xml</code> 中需要配置两个 bean，⼀个是⼯⼚ bean，⼀个是 Car bean。</p><h2 id="自动装载"><a href="#自动装载" class="headerlink" title="自动装载"></a>自动装载</h2><p>已知有两个实体类 Student 和 Cat。</p><p>Student：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cat：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class Cat &#123;</span><br><span class="line">    private String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>spring.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;咪咪&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终得到 <code>Student(id=1, name=kecho, age=18, cat=Cat(name=咪咪))</code>，通过 <code>autowire</code> 可以自动地将 cat 装载到 student 中，即使未显示使用 ref 声明。</p><p><code>autowire</code> 有两个值：byName 和 byType。</p><p>byName 会去找和 set 方法后面的值相同的 bean id 的 bean 自动装载，没有相同的则会报错。</p><p>byType 会去找和成员变量的数据类型相同的 bean 自动装载，如果容器中有两个相同类型的 bean 则会报错。</p><h2 id="基于注解开发"><a href="#基于注解开发" class="headerlink" title="基于注解开发"></a>基于注解开发</h2><p>使用注解开发需要：</p><ul><li>导入 context 约束</li><li>配置注解支持</li></ul><p>以下创建 bean 时没有使用到 Setter 方法。</p><h3 id="手动创建"><a href="#手动创建" class="headerlink" title="手动创建"></a>手动创建</h3><p>需要在 xml 中手动声明 bean：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Cat&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时可以使用 <code>@Value</code> 来设置属性值，使用 <code>@Autowired</code> 实现自动装载：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="meta">@Value(&quot;kecho&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;18&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果容器中没有这个 bean，<code>@Autowired</code> 会自动装配失败报错，可以使用 <code>@Autowired(require = false)</code> 来允许为空。</p><p><code>@Autowired</code> 默认通过 byType 的方式来查找 bean，如果存在多个相同类型的 bean 也会无法自动装配，可以加上 <code>@Qualifier(value = &quot;beanid&quot;)</code> 指定装配相应 id 的 bean，不带参数的 <code>@Qualifier</code> 默认指定 id 与属性名对应的 bean。</p><blockquote><p>除了使用 <code>@Autowired</code>，Java 也有自己的注解 <code>@Resource</code> 实现相同的功能，也可以通过 <code>@Resource(name = &quot;bean id&quot;)</code> 指定 bean id 来自动装配对应的 bean。</p><p>不同于 <code>@Autowired</code> 通过 byType 的方式来查找 bean，<code>@Resource</code> 默认通过 byName 的方式实现，如果找不到名字则通过 byType 的方式。</p></blockquote><h3 id="自动扫描"><a href="#自动扫描" class="headerlink" title="自动扫描"></a>自动扫描</h3><p>为了避免每个 bean 都需要自己手动去创建，可以配置扫描包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.kecho.entity&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时使用 <code>@Component</code> 来自动加载：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class Student &#123;</span><br><span class="line">    @Value(&quot;1&quot;)</span><br><span class="line">    private int id;</span><br><span class="line">    @Value(&quot;kecho&quot;)</span><br><span class="line">    private String name;</span><br><span class="line">    @Value(&quot;18&quot;)</span><br><span class="line">    private int age;</span><br><span class="line">    @Autowired(required = false)</span><br><span class="line">    private Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了 <code>@Component</code> 外，还有 <code>@Repository</code>、<code>@Service</code>、<code>@Controller</code>，这些注解的功能是一样的。</p><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><p>除了在 xml 配置文件中进行创建 bean、配置 context 约束、配置扫描包路径、配置注解的支持等等，还可以在 Java 类中进行配置：</p><p>MyConfig 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">// 相当于 beans 标签</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br><span class="line">    <span class="comment">// 相当于一个 bean 标签</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Student <span class="title function_">myStudent</span><span class="params">()</span> &#123;  <span class="comment">// Student 是 bean 的类型，myStudent 是 bean id</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">1</span>, <span class="string">&quot;kecho&quot;</span>, <span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取 bean：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不再通过 xml 文件获取上下文</span></span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MyConfig.class);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;myUser&quot;</span>, User.class);</span><br></pre></td></tr></table></figure><p>如果要自动扫描包来加载 bean，可以为 MyConfig 类设置 <code>@ComponentScan(&quot;com.kecho.entity&quot;)</code>，同时搭配 <code>@Component</code> 来自动加载 bean。如下：</p><p>MyConfig 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.kecho.entity&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="meta">@Value(&quot;kecho&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;18&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IoC"><a href="#IoC" class="headerlink" title="IoC"></a>IoC</h2><p>控制反转（Inversion of Control，简称 IoC）是一种设计思想，它将对象的创建和依赖关系的管理交给容器，而不是在代码中直接控制对象的创建和依赖关系。IoC 的核心思想是通过容器来管理对象的生命周期和依赖关系，从而实现对象之间的松耦合。</p><h3 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* dao */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* daoImpl */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Apple</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;get a Apple&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Banana</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;get a Banana&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* service */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFruit</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* serviceImpl */</span></span><br><span class="line"><span class="keyword">public</span> UserServiceImpl <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Fruit</span> <span class="variable">fruit</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Apple</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFruit</span><span class="params">()</span> &#123;</span><br><span class="line">        fruit.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 主程序测试 */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        user.getFruit(); <span class="comment">// 输出 &quot;get a Apple&quot; </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前的控制权在业务层，每次用户需求改变时业务层也要跟着改变，即需要修改 UserServiceImpl 中的代码，如果工程量较大修改起来会很麻烦，而且修改代码容易对其它业务造成影响，可以考虑把控制权交给用户。</p><p>修改业务层的代码实现控制权的转换，程序由主动创建对象变为被动接收对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* serviceImpl */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Fruit fruit;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 利用 set 方法动态获取值的注入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFruit</span><span class="params">(Fruit fruit)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fruit = fruit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFruit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fruit.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 主程序测试 */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        user.setFruit(<span class="keyword">new</span> <span class="title class_">Apple</span>());</span><br><span class="line">        <span class="comment">//user.setFruit(new Banana());</span></span><br><span class="line">        user.getFruit(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 spring.xml 中就是这么配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;apple&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.dao.Apple&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;banana&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.dao.Banana&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.example.service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;fruit&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;apple&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>核⼼技术点：XML 解析 + 反射机制</p><p>具体的思路：</p><p>1、根据需求编写 XML ⽂件，配置需要创建的 bean。</p><p>2、编写程序读取 XML ⽂件，获取 bean 相关信息，类、属性、id。</p><p>3、根据第 2 步获取到的信息，结合反射机制动态创建对象，同时完成属性的赋值。</p><p>4、将创建好的 bean 存⼊ Map 集合，设置 key - value 映射，key 就是 bean 中 id 值，value 就是 bean 对象。</p><p>5、提供⽅法从 Map 中通过 id 获取到对应的 value。</p><p>下面将自定义一个 MyClassPathXmlApplicationContext 类来实现。</p><p>首先需要在 <code>pom.xml</code> 引入依赖解析 xml 文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>自定义 MyClassPathXmlApplicationContext 类（这里假设 bean 的属性仅为 int 或 String 类型）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassPathXmlApplicationContext</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContext</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; iocMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassPathXmlApplicationContext</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        iocMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        parseXml(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">parseXml</span><span class="params">(String path)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SAXReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SAXReader</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> reader.read(<span class="string">&quot;src/main/resources/&quot;</span> + path);</span><br><span class="line">            <span class="type">Element</span> <span class="variable">rootElement</span> <span class="operator">=</span> document.getRootElement();</span><br><span class="line">            Iterator&lt;Element&gt; elementIterator = rootElement.elementIterator();</span><br><span class="line">            <span class="keyword">while</span> (elementIterator.hasNext()) &#123;</span><br><span class="line">                <span class="type">Element</span> <span class="variable">bean</span> <span class="operator">=</span> elementIterator.next();</span><br><span class="line">                <span class="type">String</span> <span class="variable">beanID</span> <span class="operator">=</span> bean.attributeValue(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">beanClassName</span> <span class="operator">=</span> bean.attributeValue(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">                <span class="comment">// 反射创建对象</span></span><br><span class="line">                <span class="type">Class</span> <span class="variable">myClass</span> <span class="operator">=</span> Class.forName(beanClassName);</span><br><span class="line">                <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> myClass.getConstructor();</span><br><span class="line">                <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> constructor.newInstance();</span><br><span class="line">                <span class="comment">// 给属性赋值</span></span><br><span class="line">                Iterator&lt;Element&gt; propertyIterator = bean.elementIterator();</span><br><span class="line">                <span class="keyword">while</span> (propertyIterator.hasNext()) &#123;</span><br><span class="line">                    <span class="type">Element</span> <span class="variable">property</span> <span class="operator">=</span> propertyIterator.next();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">propertyName</span> <span class="operator">=</span> property.attributeValue(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">propertyValue</span> <span class="operator">=</span> property.attributeValue(<span class="string">&quot;value&quot;</span>);</span><br><span class="line">                    <span class="comment">// 获取 setter 方法</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> <span class="string">&quot;set&quot;</span> + propertyName.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + propertyName.substring(<span class="number">1</span>);</span><br><span class="line">                    <span class="comment">// 获取属性和方法</span></span><br><span class="line">                    <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> myClass.getDeclaredField(propertyName);</span><br><span class="line">                    <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> myClass.getMethod(methodName, field.getType());</span><br><span class="line">                    <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> propertyValue;</span><br><span class="line">                    <span class="comment">// 类型转换（这里假设 bean 的属性仅为 int 或 String 类型）</span></span><br><span class="line">                    <span class="keyword">switch</span> (field.getType().getName())&#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;java.lang.String&quot;</span>:</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;int&quot;</span>:</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;java.lang.Integer&quot;</span>:</span><br><span class="line">                            value = Integer.parseInt(propertyValue);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 调用方法</span></span><br><span class="line">                    method.invoke(object, value);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 存入 Map</span></span><br><span class="line">                iocMap.put(beanID, object);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getBean</span><span class="params">(String beanID)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        <span class="keyword">return</span> iocMap.get(beanID);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 省略其它需要重写的方法......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>spring.xml</code> 配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kecho.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;kecho&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args  )</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassPathXmlApplicationContext</span>(<span class="string">&quot;spring.xml&quot;</span>);</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) context.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">    System.out.println(student);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;Spring Framework 是一个功能强大的 Java 应用程序框架，旨在提供高效且可扩展的开发环境。它结合了轻量级的容器和依赖注入功能，提供了一种使用 POJO 进行容器配置和面向切面的编程的简单方法，以及一组用于 AOP 的模块。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Spring" scheme="https://kechocy.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://kechocy.github.io/posts/2f57a694.html"/>
    <id>https://kechocy.github.io/posts/2f57a694.html</id>
    <published>2022-04-23T04:10:42.000Z</published>
    <updated>2022-04-23T04:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式是用字符串描述的一个匹配规则，使用正则表达式可以快速判断给定的字符串是否符合匹配规则。</p><span id="more"></span><h2 id="常见匹配规则"><a href="#常见匹配规则" class="headerlink" title="常见匹配规则"></a>常见匹配规则</h2><table><thead><tr><th align="left">正则表达式</th><th align="left">含义</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left"><code>\</code></td><td align="left">转义字符</td><td align="left">常用于转义 <code>\</code>、<code>(</code>、<code>[</code>、<code>&#123;</code> 等</td></tr><tr><td align="left"><code>^</code></td><td align="left">匹配字符串开头（第一个字符之前）</td><td align="left"></td></tr><tr><td align="left"><code>$</code></td><td align="left">匹配字符串结尾（最后一个字符之后）</td><td align="left"><code>^A\d&#123;3&#125;$</code> 可匹配 <code>A001</code>、<code>A380</code></td></tr><tr><td align="left"><code>.</code></td><td align="left">除 <code>\n</code>、<code>\r</code> 之外的任意单个字符</td><td align="left">注意 <code>[.]</code> 只会匹配 <code>.</code> 字符，等价于 <code>\.</code></td></tr><tr><td align="left"><code>A</code></td><td align="left">指定字符 <code>A</code></td><td align="left"></td></tr><tr><td align="left"><code>\u548c</code></td><td align="left">指定 Unicode 字符</td><td align="left"><code>\u548c</code> 可匹配 <code>和</code></td></tr><tr><td align="left"><code>\b</code></td><td align="left">匹配一个单词边界，即字与空格间的位置</td><td align="left">作用类似于 <code>^</code>、<code>$</code>，注意 <code>\bCha</code> 和 <code>Cha\b</code> 的区别</td></tr><tr><td align="left"><code>\B</code></td><td align="left"><code>\b</code> 的反义，即非单词边界匹配</td><td align="left"></td></tr><tr><td align="left"><code>\d</code></td><td align="left">数字 <code>0~9</code></td><td align="left">相当于 <code>[0-9]</code></td></tr><tr><td align="left"><code>\D</code></td><td align="left"><code>\d</code> 的反义，即非数字</td><td align="left">相当于 <code>[^0-9]</code></td></tr><tr><td align="left"><code>\w</code></td><td align="left">大小写字母，数字和下划线</td><td align="left">相当于 <code>[A-Za-z0-9_]</code></td></tr><tr><td align="left"><code>\W</code></td><td align="left"><code>\w</code> 的反义</td><td align="left"></td></tr><tr><td align="left"><code>\s</code></td><td align="left">匹配空白字符，如空格、制表符等</td><td align="left">相当于 <code>[ \t\v\r\n\f]</code></td></tr><tr><td align="left"><code>\S</code></td><td align="left"><code>\s</code> 的反义，即非空白符</td><td align="left"></td></tr><tr><td align="left"><code>*</code></td><td align="left">任意个数</td><td align="left"><code>A*</code> 可匹配 <code> </code>、<code>A</code>、<code>AA</code>、<code>AAA</code>、…</td></tr><tr><td align="left"><code>+</code></td><td align="left">至少一个</td><td align="left"><code>A+</code> 可匹配 <code>A</code>、<code>AA</code>、…</td></tr><tr><td align="left"><code>?</code></td><td align="left">0 或 1 个（也用于 <code>非贪婪匹配</code> ）</td><td align="left"><code>A?</code> 可匹配 <code> </code>、<code>A</code></td></tr><tr><td align="left"><code>&#123;3&#125;</code></td><td align="left">指定个数，此处指定为 <code>3</code> 个</td><td align="left"><code>A&#123;3&#125;</code> 可匹配 <code>AAA</code></td></tr><tr><td align="left"><code>&#123;2,3&#125;</code></td><td align="left">指定个数范围</td><td align="left"><code>A&#123;2,3&#125;</code> 可匹配 <code>AA</code>、<code>AAA</code></td></tr><tr><td align="left"><code>&#123;2,&#125;</code></td><td align="left">至少个数，此处为至少 <code>2</code> 个</td><td align="left"><code>A&#123;2,&#125;</code> 可匹配 <code>AA</code>、<code>AAA</code>、<code>AAAA</code>、…</td></tr><tr><td align="left"><code>&#123;0,2&#125;</code></td><td align="left">至多个数，此处为至多 <code>2</code> 个</td><td align="left"><code>A&#123;0,2&#125;</code> 可匹配 <code> </code>、<code>A</code>、<code>AA</code></td></tr><tr><td align="left"><code>X|Y</code></td><td align="left">匹配 <code>X</code> 或 <code>Y</code></td><td align="left"><code>(z|f)ood</code> 可匹配 <code>zood</code> 和 <code>food</code></td></tr><tr><td align="left"><code>[ABC]</code></td><td align="left">匹配 <code>[...]</code> 内的任意单个字符</td><td align="left"><code>[ABC]</code> 可匹配 <code>A</code>、<code>B</code>、<code>C</code></td></tr><tr><td align="left"><code>[^ABC]</code></td><td align="left">匹配除指定字符之外的任意单个字符</td><td align="left"><code>[^ABC]</code> 可匹配 <code>D</code>、<code>1</code>、<code>_</code></td></tr><tr><td align="left"><code>[A-C1-3X]</code></td><td align="left">匹配指定范围内的单个字符</td><td align="left"><code>[A-C1-3XY]</code> 可匹配 <code>A</code>、<code>B</code>、<code>C</code>、<code>1</code>、<code>2</code>、<code>3</code>、<code>X</code></td></tr><tr><td align="left"><code>[^A-C]</code></td><td align="left">匹配指定范围之外的任意单个字符</td><td align="left"><code>[^A-C]</code> 可匹配 <code>D</code>、<code>1</code>、<code>_</code>、…</td></tr><tr><td align="left"><code>ex1(?=ex2)</code></td><td align="left">查找 <code>ex1</code>，但后面是 <code>ex2</code></td><td align="left"></td></tr><tr><td align="left"><code>ex1(?!ex2)</code></td><td align="left">查找 <code>ex1</code>，但后面不是 <code>ex2</code></td><td align="left"></td></tr><tr><td align="left"><code>(?&lt;=ex2)ex1</code></td><td align="left">查找 <code>ex1</code>，但前面是 <code>ex2</code></td><td align="left"></td></tr><tr><td align="left"><code>(?&lt;!ex2)ex1</code></td><td align="left">查找 <code>ex1</code>，但前面不是 <code>ex2</code></td><td align="left"></td></tr></tbody></table><blockquote><ul><li>可使用 <code>(...)</code> 将子规则括起来</li><li>定位符（如 <code>^</code>、<code>$</code>、<code>/b</code>、<code>/B</code>）<strong>不能</strong>与限定符（<code>?</code>、<code>*</code>、<code>+</code>、<code>&#123;2,4&#125;</code> 等）一起使用</li></ul></blockquote><p>正则表达式默认使用<strong>贪婪匹配</strong>：任何一个规则，它总是尽可能多地向后匹配。<br><code>*</code> 和 <code>+</code> 限定符都是贪婪的，它们会尽可能多的匹配文字，在它们的后面加上一个 <code>?</code> 可以实现非贪婪或最小匹配。</p><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><p>带有修饰符的正则表达式格式：<code>/pattern/flags</code></p><table><thead><tr><th align="left">修饰符 flags</th><th align="left">含义</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left"><code>i</code></td><td align="left">不区分大小写</td><td align="left">默认区分大小写</td></tr><tr><td align="left"><code>g</code></td><td align="left">全局匹配</td><td align="left">查找所有匹配项，默认找到一项就停止</td></tr><tr><td align="left"><code>m</code></td><td align="left">多行匹配</td><td align="left">使边界字符 <code>^</code> 和 <code>$</code> 匹配<strong>每一行</strong>的开头和结尾</td></tr><tr><td align="left"><code>s</code></td><td align="left">特殊字符圆点 <code>.</code> 中包含换行符 <code>\n</code></td><td align="left">默认是不包含的</td></tr></tbody></table><h2 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h2><table><thead><tr><th align="left">字符</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>\cx</code></td><td align="left">匹配由 <code>x</code> 指明的控制字符。例如 <code>\cM</code> 匹配一个 Control-M 或回车符。<code>x</code> 的值必须为 A-Z 或 a-z 之一。否则，将 <code>c</code> 视为一个原义的 <code>&#39;c&#39;</code> 字符。</td></tr><tr><td align="left"><code>\t</code></td><td align="left">匹配一个制表符。等价于 <code>\x09</code> 和 <code>\cI</code></td></tr><tr><td align="left"><code>\v</code></td><td align="left">匹配一个垂直制表符。等价于 <code>\x0b</code> 和 <code>\cK</code></td></tr><tr><td align="left"><code>\r</code></td><td align="left">匹配一个回车符。等价于<code> \x0d</code> 和 <code>\cM</code></td></tr><tr><td align="left"><code>\n</code></td><td align="left">匹配一个换行符。等价于 <code>\x0a</code> 和 <code>\cJ</code></td></tr><tr><td align="left"><code>\f</code></td><td align="left">匹配一个换页符。等价于 <code>\x0c</code> 和 <code>\cL</code></td></tr><tr><td align="left"><code>\s</code></td><td align="left">匹配任何空白字符。等价于 <code>[ \t\v\r\n\f]</code>。注意 Unicode 正则表达式会匹配全角空格符。</td></tr><tr><td align="left"><code>\S</code></td><td align="left">匹配任何非空白字符。等价于 <code>[^ \t\v\r\n\f]</code></td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a class="link"   href="https://www.liaoxuefeng.com/wiki/1252599548343744/1304066080636961" >廖雪峰的官方网站-正则表达式<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.runoob.com/regexp/regexp-syntax.html" >菜鸟教程-正则表达式<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://tool.oschina.net/uploads/apidocs/jquery/regexp.html" >正则表达式手册<i class="fas fa-external-link-alt"></i></a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;正则表达式是用字符串描述的一个匹配规则，使用正则表达式可以快速判断给定的字符串是否符合匹配规则。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="正则表达式" scheme="https://kechocy.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>KMP 算法实现及改良</title>
    <link href="https://kechocy.github.io/posts/853edc9f.html"/>
    <id>https://kechocy.github.io/posts/853edc9f.html</id>
    <published>2022-04-18T06:41:02.000Z</published>
    <updated>2022-04-18T06:41:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>与每趟匹配失败都从头开始重新比较的暴力匹配算法不同，KMP 算法会按照已记录的数组移动到指定位置开始比较，能大幅提高效率。而该数组记录的内容仅与模式串本身结构相关，与主串无关。</p><span id="more"></span><h2 id="理论知识"><a href="#理论知识" class="headerlink" title="理论知识"></a>理论知识</h2><p>设：</p><ul><li><code>ababcabcacbab</code> 为主串, <code>i</code> 为主串的遍历指针</li><li><code>abcac</code> 为子串， <code>j</code> 为子串（也称模式串）的遍历指针</li><li><code>pm 数组</code>  为对应字符串的<a href="#%E6%89%8B%E5%8A%A8%E8%AE%A1%E7%AE%97%E9%83%A8%E5%88%86%E5%8C%B9%E9%85%8D%E5%80%BC"><strong>部分匹配值</strong></a></li><li><code>next 数组</code> 由 <code>pm 数组</code> 右移一位得到，其中规定 <code>next[0] = -1</code></li></ul><table><thead><tr><th align="left">index</th><th align="left">0</th><th align="left">1</th><th align="left">2</th><th align="left">3</th><th align="left">4</th></tr></thead><tbody><tr><td align="left">char</td><td align="left">a</td><td align="left">b</td><td align="left">c</td><td align="left">a</td><td align="left">c</td></tr><tr><td align="left">pm</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">next</td><td align="left">-1</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr></tbody></table><p>在 KMP 算法匹配过程中，假设第 j 位失配（从 0 编号）</p><p>已知：<code>移动位数 = 已经匹配的字符数（0 ~ j-1 共 j 个） - 最后一个匹配字符的部分匹配值（pm[j-1]）</code></p><p>记为：<code>move = j - pm[j-1]</code></p><p>替换：<code>move = j - next[j]</code></p><p>则 <code>j</code> 需要回退到 <code>j - move</code> 位置，即  <code>j = j - move = j - (j - next[j]) = next[j]</code> ，即 <code>j</code> 回退到 <code>next[j]</code> 位置</p><p>具体匹配过程：</p><ol><li><p>第一次匹配（失配时 <code>i = 2, j = 2</code>）</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><strong>i</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>主串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center"><code>a</code></td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center">b</td><td align="center">a</td><td align="center">b</td></tr><tr><td align="center"><strong>子串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center"><code>c</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>j</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>子串应向后移动 2 位，<code>j = 2</code> —-&gt; <code>j = 0</code> （<code>next[2] == 0</code>），<code>i = 2</code> —-&gt; <code>i = 2</code> （ i 不变）</p></blockquote></li><li><p>第二次匹配（失配时 <code>i = 6, j = 4</code>）</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><strong>i</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center"><code>2</code></td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center">6</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>主串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center"><code>b</code></td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center">b</td><td align="center">a</td><td align="center">b</td></tr><tr><td align="center"><strong>子串</strong>：</td><td align="center">#</td><td align="center">#</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center"><code>c</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>j</strong>：</td><td align="center"></td><td align="center"></td><td align="center"><code>0</code></td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>子串应继续向后移动 3 位，<code>j = 4</code> —-&gt; <code>j = 1</code> （<code>next[4] == 1</code>），<code>i = 6</code> —-&gt; <code>i = 6</code> （ i 不变）</p></blockquote></li><li><p>第三次匹配（匹配成功 <code>i = 10, j = 5</code>）</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><strong>i</strong>：</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center"><code>6</code></td><td align="center">7</td><td align="center">8</td><td align="center">9</td><td align="center">10</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>主串</strong>：</td><td align="center">a</td><td align="center">b</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center">b</td><td align="center">a</td><td align="center">b</td></tr><tr><td align="center"><strong>子串</strong>：</td><td align="center">#</td><td align="center">#</td><td align="center">*</td><td align="center">*</td><td align="center">*</td><td align="center">a</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">c</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>j</strong>：</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">0</td><td align="center"><code>1</code></td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>匹配成功，返回子串在主串中的首位置：<code>i - j = 5</code></p></blockquote></li></ol><p>所以 KMP 算法如何实现的问题就转化为如何构建 next 数组的问题。</p><p>手动如何求 next 数组呢？</p><ul><li>法一：先求部分匹配值，再右移得到 next 数组</li><li>法二：由 [0…j-1]个字符（已经匹配成功的字符）组成的串的最长相等前后缀长度就是 <code>next[j]</code></li></ul><blockquote><p>注：不同书中定义的 next 数组含义不同，有的是没有右移之前的，有的是右移一位的（如本文），有的是右移一位后数值再加 1 的，要具体情况具体分析。另外，本文中数组从 0 开始存字符，有的书可能从 1 开始，对应的代码会有些许差别。</p></blockquote><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>第一步：求 next 数组</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">getNextTable</span><span class="params">(string pattern,<span class="type">int</span> nextTable[])</span></span>&#123;  </span><br><span class="line">    nextTable[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">//第一个默认为-1  </span></span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>; <span class="comment">//j表示next数组下标  </span></span><br><span class="line">    <span class="type">int</span> k=nextTable[j]; <span class="comment">//k表示next数组的值  </span></span><br><span class="line">    <span class="keyword">while</span>(j &lt; pattern.<span class="built_in">size</span>())&#123; <span class="comment">//求next[j+1]  </span></span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span> || pattern[j] == pattern[k])&#123;  </span><br><span class="line">            nextTable[++j]=++k;  </span><br><span class="line">            <span class="comment">//相当于 j++; next[j]=k+1; 计算出 next[j+1]，然后令 k=next[j]; 继续循环</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            k = nextTable[k];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：根据 next 数组编写 KMP 算法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">KMP</span><span class="params">(string pattern, string str,<span class="type">int</span> nextTable[])</span></span>&#123;  </span><br><span class="line">    <span class="built_in">getNextTable</span>(pattern,nextTable);<span class="comment">//得到next数组  </span></span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>; <span class="type">int</span> j=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span>(i&lt;str.<span class="built_in">size</span>() &amp;&amp; j&lt;pattern.<span class="built_in">size</span>())&#123;  </span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || pattern[j]==str[i])&#123;  </span><br><span class="line">            i++; </span><br><span class="line">            j++; <span class="comment">//匹配成功则继续匹配  </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">            j = nextTable[j];<span class="comment">//匹配失败则回溯  </span></span><br><span class="line">        &#125;  </span><br><span class="line">    <span class="keyword">if</span>(j==pattern.<span class="built_in">size</span>())  </span><br><span class="line">        <span class="keyword">return</span> i-j; <span class="comment">//返回子串在主串的首位置(下标从零开始)  </span></span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>第三步：测试</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    string s=<span class="string">&quot;abcac&quot;</span>;  </span><br><span class="line">    string d=<span class="string">&quot;ababcabcacbab&quot;</span>;  </span><br><span class="line">    <span class="type">int</span> nextTable[s.<span class="built_in">size</span>()]; </span><br><span class="line">    cout&lt;&lt;<span class="built_in">KMP</span>(s,d,nextTable)&lt;&lt;endl; <span class="comment">//匹配成功返回子串在主串的首位置，不匹配返回 -1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="算法改良"><a href="#算法改良" class="headerlink" title="算法改良"></a>算法改良</h2><p>假设 <code>j == 3</code> 时失配，而 <code>next[3] == 2, next[2] == 1, next[1] == 0, next[0] == -1</code> （由计算 next 数组的规则可知，此时模式串中第 0、1、2 个字符必相同），则 <code>j</code> 需要依次回退到 <code>2</code>、<code>1</code>、<code>0</code>，我们可以改善 next 数组，让 <code>j</code> 直接回退到 <code>0</code> 位置，减少无效判断次数。</p><p>用 <code>nextval数组</code> 表示改良后的 <code>next数组</code>，过程如下：</p><ul><li>先算出 next 数组（<code>next[0] = -1</code>）</li><li>如果第 j 个字符和 j 的 next 所指向的字符相同，则它们的 nextval 值相同；否则让 j 的 nextval 值与 next 值相等。</li></ul><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">getNextvalTable</span><span class="params">(string pattern,<span class="type">int</span> nextvalTable[])</span></span>&#123;  </span><br><span class="line">    nextvalTable[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">//第一个默认为-1  </span></span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>; <span class="comment">//j表示nextval数组下标  </span></span><br><span class="line">    <span class="type">int</span> k=nextvalTable[j]; <span class="comment">//k表示nextval数组的值  </span></span><br><span class="line">    <span class="keyword">while</span>(j &lt; pattern.<span class="built_in">size</span>())&#123; <span class="comment">//求nextval[j+1]  </span></span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span> || pattern[j] == pattern[k])&#123;  </span><br><span class="line">            <span class="keyword">if</span>(pattern[++j] == pattern[++k])</span><br><span class="line">                nextvalTable[j] = nextvalTable[k]; </span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nextvalTable[j] = k; <span class="comment">//相当于nextval[j+1]=k+1; k=nextval[j+1]; j++;  </span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            k = nextvalTable[k];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>KMP 算法只要将其调用的函数 <code>getNextTable</code> 改为 <code>getNextvalTable</code> ，其余保持不变。</p><h2 id="手动计算部分匹配值"><a href="#手动计算部分匹配值" class="headerlink" title="手动计算部分匹配值"></a>手动计算部分匹配值</h2><p><code>部分匹配值</code>为字符串的前缀和后缀的最长相等前后缀长度，以 <code>ababa</code> 为例：</p><ul><li><code>a</code> 的前缀和后缀都为空集，最长相等前后缀长度为 0</li><li><code>ab</code> 的前缀为 { a }，后缀为 { b } ，交集为空集，最长相等前后缀长度为 0</li><li><code>aba</code> 的前缀为 { a, ab }，后缀为 { a, ba }，交集为 { a }，最长相等前后缀长度为 1</li><li><code>abab</code> 的前缀为 { a, ab, aba }，后缀为 { b, ab, bab }，交集为 { ab }，最长相等前后缀长度为 2</li><li><code>ababa</code> 的前缀为 { a, ab, aba, abab }，后缀为 { a, ba, aba, baba }，交集为 { a, aba }，最长相等前后缀长度为 3<br>所以字符串 <code>ababa</code> 的部分匹配值为 <code>00123</code></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>《王道数据结构考研复习指导》</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;与每趟匹配失败都从头开始重新比较的暴力匹配算法不同，KMP 算法会按照已记录的数组移动到指定位置开始比较，能大幅提高效率。而该数组记录的内容仅与模式串本身结构相关，与主串无关。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="KMP" scheme="https://kechocy.github.io/tags/KMP/"/>
    
  </entry>
  
  <entry>
    <title>Handsome 主题美化教程</title>
    <link href="https://kechocy.github.io/posts/ffa86c2a.html"/>
    <id>https://kechocy.github.io/posts/ffa86c2a.html</id>
    <published>2022-04-17T02:37:44.000Z</published>
    <updated>2022-04-17T02:37:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://www.ihewro.com/archives/489/" >Handsome<i class="fas fa-external-link-alt"></i></a> 是一款收费的 Typecho 主题，本文给出的 Handsome 主题美化教程收集自网络，部分内容可能随着主题更新而失效。</p><span id="more"></span><h2 id="首页列表最前方广告位"><a href="#首页列表最前方广告位" class="headerlink" title="首页列表最前方广告位"></a>首页列表最前方广告位</h2><h3 id="新年倒计时"><a href="#新年倒计时" class="headerlink" title="新年倒计时"></a>新年倒计时</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"> </span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.gn_box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: none;     </span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">15px</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.gn_box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#fff</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_d</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#982585</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_h</span> &#123; </span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#8f79c1</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_m</span> &#123; </span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#65b4b5</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#t_s</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#83caa3</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>; </span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gn_box&quot;</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#E80017</span>&gt;</span>2<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#D1002E</span>&gt;</span>0<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#BA0045</span>&gt;</span>2<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#A3005C</span>&gt;</span>1<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span>  <span class="attr">color</span>=<span class="string">#8C0073</span>&gt;</span>年<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#75008A</span>&gt;</span>-<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#5E00A1</span>&gt;</span>新<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#4700B8</span>&gt;</span>年<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#3000CF</span>&gt;</span>倒<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#1900E6</span>&gt;</span>计<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0200FD</span>&gt;</span>时<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;CountMsg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;HotDate&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_d&quot;</span>&gt;</span> 天<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_h&quot;</span>&gt;</span> 时<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_m&quot;</span>&gt;</span> 分<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;t_s&quot;</span>&gt;</span> 秒<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">getRTime</span>(<span class="params"></span>) &#123;   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> <span class="title class_">EndTime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2021/02/12 00:00:00&#x27;</span>);  </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> <span class="title class_">NowTime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();  </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> t = <span class="title class_">EndTime</span>.<span class="title function_">getTime</span>() - <span class="title class_">NowTime</span>.<span class="title function_">getTime</span>();   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> d = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> h = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> m = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> / <span class="number">60</span> % <span class="number">60</span>);   </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> s = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">1000</span> % <span class="number">60</span>); </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> day = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_d&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (day != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          day.<span class="property">innerHTML</span> = d + <span class="string">&quot; 天&quot;</span>;   </span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> hour = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_h&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (hour != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          hour.<span class="property">innerHTML</span> = h + <span class="string">&quot; 时&quot;</span>;  </span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> min = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_m&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (min != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          min.<span class="property">innerHTML</span> = m + <span class="string">&quot; 分&quot;</span>;   </span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> sec = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t_s&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (sec != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          sec.<span class="property">innerHTML</span> = s + <span class="string">&quot; 秒&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;   </span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setInterval</span>(getRTime, <span class="number">1000</span>);   </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自定义-CSS"><a href="#自定义-CSS" class="headerlink" title="自定义 CSS"></a>自定义 CSS</h2><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><h3 id="头像呼吸环和鼠标悬停旋转放大"><a href="#头像呼吸环和鼠标悬停旋转放大" class="headerlink" title="头像呼吸环和鼠标悬停旋转放大"></a>头像呼吸环和鼠标悬停旋转放大</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img-full</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">animation</span>: light <span class="number">4s</span> ease-in-out infinite;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.img-full</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.15</span>) <span class="built_in">rotate</span>(<span class="number">720deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> light &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">#f00</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">25%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span> <span class="number">#0f0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">50%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">#00f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">75%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span> <span class="number">#0f0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">#f00</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打赏图标跳动"><a href="#打赏图标跳动" class="headerlink" title="打赏图标跳动"></a>打赏图标跳动</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn-pay</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: star <span class="number">0.5s</span> ease-in-out infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> star &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义鼠标指针"><a href="#自定义鼠标指针" class="headerlink" title="自定义鼠标指针"></a>自定义鼠标指针</h3><p>可以使用下面代码，或者直接下载插件 <a class="link"   href="https://www.vidcss.com/364.html" >HoerMouse<i class="fas fa-external-link-alt"></i></a> 使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27;鼠标指针图片链接&#x27;</span>), auto;</span><br><span class="line">&#125;</span><br><span class="line">select, <span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">a</span>, <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27;鼠标指针图片链接&#x27;</span>), auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[disabled]</span>, select<span class="selector-attr">[disabled]</span>, <span class="selector-tag">textarea</span><span class="selector-attr">[disabled]</span>, <span class="selector-tag">input</span><span class="selector-attr">[readonly]</span>, select<span class="selector-attr">[readonly]</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27;鼠标指针图片链接&#x27;</span>), auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义右侧滚动条"><a href="#自定义右侧滚动条" class="headerlink" title="自定义右侧滚动条"></a>自定义右侧滚动条</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class="line">::-webkit-scrollbar&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*定义滚动条轨道 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-track&#123;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*定义滑块 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-thumb&#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章列表悬浮"><a href="#首页文章列表悬浮" class="headerlink" title="首页文章列表悬浮"></a>首页文章列表悬浮</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-post</span> <span class="selector-class">.panel</span><span class="selector-pseudo">:not</span>(<span class="selector-tag">article</span>) &#123;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blog-post</span> <span class="selector-class">.panel</span><span class="selector-pseudo">:not</span>(<span class="selector-tag">article</span>)<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">10px</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">15px</span> <span class="built_in">rgba</span>(<span class="number">73</span>, <span class="number">90</span>, <span class="number">47</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章列表宽度"><a href="#首页文章列表宽度" class="headerlink" title="首页文章列表宽度"></a>首页文章列表宽度</h3><p>盒子模型下我感觉页面有点小，但非盒子模型下首页文章列表感觉太宽了，特别在首页设置了大头图情况下，图片看起来就更不美观了，所以可以用以下代码改窄一点。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-post</span>&#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">900px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章版式阴影化"><a href="#首页文章版式阴影化" class="headerlink" title="首页文章版式阴影化"></a>首页文章版式阴影化</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.panel</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.panel-small</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> p3x <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.panel-small</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> p3x <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">135</span> <span class="number">206</span> <span class="number">250</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.app</span><span class="selector-class">.container</span> &#123;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.baidu-record</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: normal normal normal <span class="number">12px</span>/<span class="number">1</span> FontAwesome;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\f024&quot;</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页文章标题颜色渐变"><a href="#首页文章标题颜色渐变" class="headerlink" title="首页文章标题颜色渐变"></a>首页文章标题颜色渐变</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.index-post-title</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>:<span class="built_in">rgba</span>(<span class="number">107</span>, <span class="number">209</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">     <span class="attribute">transition</span>:color <span class="number">0.2s</span> linear</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文章标题居中"><a href="#文章标题居中" class="headerlink" title="文章标题居中"></a>文章标题居中</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span> <span class="selector-tag">h2</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-item-foot-icon</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文章图片悬停放大"><a href="#文章图片悬停放大" class="headerlink" title="文章图片悬停放大"></a>文章图片悬停放大</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.entry-thumbnail</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果想放大并超出范围请删除上面代码*/</span></span><br><span class="line"><span class="selector-id">#post-content</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#post-content</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.05</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文章末尾转载说明"><a href="#文章末尾转载说明" class="headerlink" title="文章末尾转载说明"></a>文章末尾转载说明</h3><p>可使用插件 <a class="link"   href="https://github.com/Yves-X/Copyright-for-Typecho" >Copyright<i class="fas fa-external-link-alt"></i></a></p><h2 id="自定义-JavaScript"><a href="#自定义-JavaScript" class="headerlink" title="自定义 JavaScript"></a>自定义 JavaScript</h2><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><h3 id="鼠标点击爱心"><a href="#鼠标点击爱心" class="headerlink" title="鼠标点击爱心"></a>鼠标点击爱心</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">! <span class="keyword">function</span> (<span class="params">e, t, a</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">c</span>(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>), <span class="title function_">o</span>(), <span class="title function_">r</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">r</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.<span class="property">length</span>; e++) d[e].<span class="property">alpha</span> &lt;= <span class="number">0</span> ? (t.<span class="property">body</span>.<span class="title function_">removeChild</span>(d[e].<span class="property">el</span>), d.<span class="title function_">splice</span>(e, <span class="number">1</span>)) : (d[e].<span class="property">y</span>--, d[e].<span class="property">scale</span> += <span class="number">.004</span>, d[e].<span class="property">alpha</span> -= <span class="number">.013</span>, d[e].<span class="property">el</span>.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&quot;left:&quot;</span> + d[e].<span class="property">x</span> + <span class="string">&quot;px;top:&quot;</span> + d[e].<span class="property">y</span> + <span class="string">&quot;px;opacity:&quot;</span> + d[e].<span class="property">alpha</span> + <span class="string">&quot;;transform:scale(&quot;</span> + d[e].<span class="property">scale</span> + <span class="string">&quot;,&quot;</span> + d[e].<span class="property">scale</span> + <span class="string">&quot;) rotate(45deg);background:&quot;</span> + d[e].<span class="property">color</span> + <span class="string">&quot;;z-index:99999&quot;</span>);</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(r)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e.<span class="property">onclick</span> &amp;&amp; e.<span class="property">onclick</span>;</span><br><span class="line">    e.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      t &amp;&amp; <span class="title function_">t</span>(), <span class="title function_">i</span>(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    a.<span class="property">className</span> = <span class="string">&quot;heart&quot;</span>, d.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">el</span>: a,</span><br><span class="line">      <span class="attr">x</span>: e.<span class="property">clientX</span> - <span class="number">5</span>,</span><br><span class="line">      <span class="attr">y</span>: e.<span class="property">clientY</span> - <span class="number">5</span>,</span><br><span class="line">      <span class="attr">scale</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">alpha</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">color</span>: <span class="title function_">s</span>()</span><br><span class="line">    &#125;), t.<span class="property">body</span>.<span class="title function_">appendChild</span>(a)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);</span><br><span class="line">    a.<span class="property">type</span> = <span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      a.<span class="title function_">appendChild</span>(t.<span class="title function_">createTextNode</span>(e))</span><br><span class="line">    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">      a.<span class="property">styleSheet</span>.<span class="property">cssText</span> = e</span><br><span class="line">    &#125;</span><br><span class="line">    t.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(a)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;rgb(&quot;</span> + ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) + <span class="string">&quot;,&quot;</span> + ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) + <span class="string">&quot;,&quot;</span> + ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) + <span class="string">&quot;)&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> d = [];</span><br><span class="line">  e.<span class="property">requestAnimationFrame</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">requestAnimationFrame</span> || e.<span class="property">webkitRequestAnimationFrame</span> || e.<span class="property">mozRequestAnimationFrame</span> || e.<span class="property">oRequestAnimationFrame</span> || e.<span class="property">msRequestAnimationFrame</span> || <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;(), <span class="title function_">n</span>()</span><br><span class="line">&#125;(<span class="variable language_">window</span>, <span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure><h3 id="彩色数字"><a href="#彩色数字" class="headerlink" title="彩色数字"></a>彩色数字</h3><p>可用于将左侧各分类下文章数目变成彩色数字，右侧博客信息变成彩色，标签变成彩色。<br><strong>如果启用 pjax，添加自定义 JavaScript 的同时还要将代码放入 pjax 函数中，否则无效。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> tags = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#tag_cloud-2 a&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> infos = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.badge&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> colorArr = [<span class="string">&quot;#428BCA&quot;</span>, <span class="string">&quot;#AEDCAE&quot;</span>, <span class="string">&quot;#ECA9A7&quot;</span>, <span class="string">&quot;#DA99FF&quot;</span>, <span class="string">&quot;#FFB380&quot;</span>, <span class="string">&quot;#D9B999&quot;</span>];</span><br><span class="line">tags.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    tagsColor = colorArr[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colorArr.<span class="property">length</span>)];</span><br><span class="line">    tag.<span class="property">style</span>.<span class="property">backgroundColor</span> = tagsColor;</span><br><span class="line">&#125;);</span><br><span class="line">infos.<span class="title function_">forEach</span>(<span class="function"><span class="params">info</span> =&gt;</span> &#123;</span><br><span class="line">    infosColor = colorArr[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colorArr.<span class="property">length</span>)];</span><br><span class="line">    info.<span class="property">style</span>.<span class="property">backgroundColor</span> = infosColor;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="网页标签获得-x2F-失去焦点时更改标题内容"><a href="#网页标签获得-x2F-失去焦点时更改标题内容" class="headerlink" title="网页标签获得&#x2F;失去焦点时更改标题内容"></a>网页标签获得&#x2F;失去焦点时更改标题内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//网页标签获得/失去焦点时更改标题内容</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;visibilitychange&quot;</span>,</span><br><span class="line"><span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;怎么走了(；д｀)ゞ&quot;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;回来了ヾ(◍°∇°◍)ﾉﾞ)&quot;</span>;</span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">2000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="多处组合改动"><a href="#多处组合改动" class="headerlink" title="多处组合改动"></a>多处组合改动</h2><h3 id="复制弹窗提醒"><a href="#复制弹窗提醒" class="headerlink" title="复制弹窗提醒"></a>复制弹窗提醒</h3><p>第一步：将 <a class="link"   href="https://gist.githubusercontent.com/kechocy/80fb24f33b6e3cc16c76ba09d2096277/raw/2243af994d60c1912d6c656bacacd54e143f3cad/layer.js" >layer.js<i class="fas fa-external-link-alt"></i></a> 保存至自己的服务器上。</p><p>第二步：将以下代码添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义输出 head 头部的 HTML 代码</code>，注意修改引用路径。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://xxxx/layer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三步：将以下代码添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">oncopy</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;layer.<span class="title function_">msg</span>(<span class="string">&#x27;复制成功，若要转载请务必保留本文链接！&#x27;</span>);&#125;;</span><br></pre></td></tr></table></figure><h3 id="彩色-3D-云标签"><a href="#彩色-3D-云标签" class="headerlink" title="彩色 3D 云标签"></a>彩色 3D 云标签</h3><ul><li><p>彩色标签<br>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#d02f53</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">colorfultags</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> tags = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#tag_cloud-2 a&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> colorArr = [<span class="string">&quot;#f60&quot;</span>, <span class="string">&quot;#45B6F7&quot;</span>, <span class="string">&quot;#15a287&quot;</span>, <span class="string">&quot;#5cb85c&quot;</span>, <span class="string">&quot;#d9534f&quot;</span>, <span class="string">&quot;#567e95&quot;</span>, <span class="string">&quot;#00a67c&quot;</span>, <span class="string">&quot;#b37333&quot;</span>];</span><br><span class="line"><span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line">tags.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    tagsColor = colorArr[count%<span class="number">8</span>];</span><br><span class="line">    tag.<span class="property">style</span>.<span class="property">backgroundColor</span> = tagsColor;</span><br><span class="line">    count++;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span>=<span class="title function_">colorfultags</span>();</span><br></pre></td></tr></table></figure></li><li><p>3D 标签<br>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">240px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> black;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tag_cloud-2</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下内容添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3d标签，和css搭配使用</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">around3D</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> oDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tag_cloud-2&#x27;</span>).<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">null</span> == oDiv) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> radius = <span class="number">80</span>;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">var</span> dtr = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>;</span><br><span class="line">    <span class="keyword">var</span> mcList = [];</span><br><span class="line">    <span class="keyword">var</span> lasta = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> lastb = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> distr = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> tspeed = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">var</span> size = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">var</span> mouseX = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> mouseY = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> howElliptical = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> aA = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> oTag = <span class="literal">null</span>;</span><br><span class="line">    aA = oDiv.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      oTag = &#123;&#125;;</span><br><span class="line">      aA[i].<span class="property">onmouseover</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          obj.<span class="property">on</span> = <span class="literal">true</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="number">9999</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#0099ff&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px 5px&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=100)&quot;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)(oTag)</span><br><span class="line">      aA[i].<span class="property">onmouseout</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          obj.<span class="property">on</span> = <span class="literal">false</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#30899B&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px&#x27;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * obj.<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = obj.<span class="property">alpha</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)(oTag)</span><br><span class="line">      oTag.<span class="property">offsetWidth</span> = aA[i].<span class="property">offsetWidth</span>;</span><br><span class="line">      oTag.<span class="property">offsetHeight</span> = aA[i].<span class="property">offsetHeight</span>;</span><br><span class="line">      mcList.<span class="title function_">push</span>(oTag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sineCosine</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_">positionAll</span>();</span><br><span class="line">    (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">update</span>();</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>, <span class="number">40</span>);</span><br><span class="line">    &#125;)();</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> a, b, c = <span class="number">0</span>;</span><br><span class="line">      a = (<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseY, -size), size) / radius) * tspeed;</span><br><span class="line">      b = (-<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseX, -size), size) / radius) * tspeed;</span><br><span class="line">      lasta = a;</span><br><span class="line">      lastb = b;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(a) &lt;= <span class="number">0.01</span> &amp;&amp; <span class="title class_">Math</span>.<span class="title function_">abs</span>(b) &lt;= <span class="number">0.01</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">sineCosine</span>(a, b, c);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> rx1 = mcList[i].<span class="property">cx</span>;</span><br><span class="line">        <span class="keyword">var</span> ry1 = mcList[i].<span class="property">cy</span> * ca + mcList[i].<span class="property">cz</span> * (-sa);</span><br><span class="line">        <span class="keyword">var</span> rz1 = mcList[i].<span class="property">cy</span> * sa + mcList[i].<span class="property">cz</span> * ca;</span><br><span class="line">        <span class="keyword">var</span> rx2 = rx1 * cb + rz1 * sb;</span><br><span class="line">        <span class="keyword">var</span> ry2 = ry1;</span><br><span class="line">        <span class="keyword">var</span> rz2 = rx1 * (-sb) + rz1 * cb;</span><br><span class="line">        <span class="keyword">var</span> rx3 = rx2 * cc + ry2 * (-sc);</span><br><span class="line">        <span class="keyword">var</span> ry3 = rx2 * sc + ry2 * cc;</span><br><span class="line">        <span class="keyword">var</span> rz3 = rz2;</span><br><span class="line">        mcList[i].<span class="property">cx</span> = rx3;</span><br><span class="line">        mcList[i].<span class="property">cy</span> = ry3;</span><br><span class="line">        mcList[i].<span class="property">cz</span> = rz3;</span><br><span class="line">        per = d / (d + rz3);</span><br><span class="line">        mcList[i].<span class="property">x</span> = (howElliptical * rx3 * per) - (howElliptical * <span class="number">2</span>);</span><br><span class="line">        mcList[i].<span class="property">y</span> = ry3 * per;</span><br><span class="line">        mcList[i].<span class="property">scale</span> = per;</span><br><span class="line">        <span class="keyword">var</span> alpha = per;</span><br><span class="line">        alpha = (alpha - <span class="number">0.6</span>) * (<span class="number">10</span> / <span class="number">6</span>);</span><br><span class="line">        mcList[i].<span class="property">alpha</span> = alpha * alpha * alpha - <span class="number">0.2</span>;</span><br><span class="line">        mcList[i].<span class="property">zIndex</span> = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">100</span> - <span class="title class_">Math</span>.<span class="title function_">floor</span>(mcList[i].<span class="property">cz</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">doPosition</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">depthSort</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">var</span> aTmp = [];</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        aTmp.<span class="title function_">push</span>(aA[i]);</span><br><span class="line">      &#125;</span><br><span class="line">      aTmp.<span class="title function_">sort</span>(</span><br><span class="line">        <span class="keyword">function</span>(<span class="params">vItem1, vItem2</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &gt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &lt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aTmp.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        aTmp[i].<span class="property">style</span>.<span class="property">zIndex</span> = i;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">positionAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> phi = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">var</span> theta = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">var</span> max = mcList.<span class="property">length</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (distr) &#123;</span><br><span class="line">          phi = <span class="title class_">Math</span>.<span class="title function_">acos</span>(-<span class="number">1</span> + (<span class="number">2</span> * (i + <span class="number">1</span>) - <span class="number">1</span>) / max);</span><br><span class="line">          theta = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(max * <span class="title class_">Math</span>.<span class="property">PI</span>) * phi;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          phi = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">          theta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">2</span>* <span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        mcList[i].<span class="property">cx</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">        mcList[i].<span class="property">cy</span> = radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">        mcList[i].<span class="property">cz</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(phi);</span><br><span class="line">        aA[i].<span class="property">style</span>.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        aA[i].<span class="property">style</span>.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">doPosition</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> l = oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">var</span> t = oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> aAs = aA[i].<span class="property">style</span>;</span><br><span class="line">        <span class="keyword">if</span> (mcList[i].<span class="property">alpha</span> &gt; <span class="number">0.1</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            aAs.<span class="property">display</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">            aAs.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        aAs.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + l - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        aAs.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + t - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">        aAs.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * mcList[i].<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">        aAs.<span class="property">zIndex</span> = mcList[i].<span class="property">zIndex</span>;</span><br><span class="line">        aAs.<span class="property">opacity</span> = mcList[i].<span class="property">alpha</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">sineCosine</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">      sa = <span class="title class_">Math</span>.<span class="title function_">sin</span>(a * dtr);</span><br><span class="line">      ca = <span class="title class_">Math</span>.<span class="title function_">cos</span>(a * dtr);</span><br><span class="line">      sb = <span class="title class_">Math</span>.<span class="title function_">sin</span>(b * dtr);</span><br><span class="line">      cb = <span class="title class_">Math</span>.<span class="title function_">cos</span>(b * dtr);</span><br><span class="line">      sc = <span class="title class_">Math</span>.<span class="title function_">sin</span>(c * dtr);</span><br><span class="line">      cc = <span class="title class_">Math</span>.<span class="title function_">cos</span>(c * dtr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="title function_">around3D</span>();</span><br></pre></td></tr></table></figure><blockquote><p>如果启用了 pjax ，要实现 3D 彩色标签，则保持上面两个自定义 CSS 不变，将上面两个自定义 JavaScript 删掉，替换成下面这个自定义 JavaScript，然后后台 pjax 回调函数加上 <code>colorfultags();around3D();</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">colorfultags</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> tags = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#tag_cloud-2 a&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> colorArr = [<span class="string">&quot;#f60&quot;</span>, <span class="string">&quot;#45B6F7&quot;</span>, <span class="string">&quot;#15a287&quot;</span>, <span class="string">&quot;#5cb85c&quot;</span>, <span class="string">&quot;#d9534f&quot;</span>, <span class="string">&quot;#567e95&quot;</span>, <span class="string">&quot;#00a67c&quot;</span>, <span class="string">&quot;#b37333&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line">    tags.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">        tagsColor = colorArr[count%<span class="number">8</span>];</span><br><span class="line">        tag.<span class="property">style</span>.<span class="property">backgroundColor</span> = tagsColor;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">around3D</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> oDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tag_cloud-2&#x27;</span>).<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == oDiv) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> radius = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">var</span> dtr = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>;</span><br><span class="line">        <span class="keyword">var</span> mcList = [];</span><br><span class="line">        <span class="keyword">var</span> lasta = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> lastb = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> distr = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> tspeed = <span class="number">11</span>;</span><br><span class="line">        <span class="keyword">var</span> size = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">var</span> mouseX = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> mouseY = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">var</span> howElliptical = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> aA = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> oTag = <span class="literal">null</span>;</span><br><span class="line">        aA = oDiv.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            oTag = &#123;&#125;;</span><br><span class="line">            aA[i].<span class="property">onmouseover</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    obj.<span class="property">on</span> = <span class="literal">true</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="number">9999</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#0099ff&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px 5px&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=100)&quot;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = <span class="number">1</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)(oTag)</span><br><span class="line">            aA[i].<span class="property">onmouseout</span> = (<span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    obj.<span class="property">on</span> = <span class="literal">false</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;#30899B&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;5px&#x27;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * obj.<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">opacity</span> = obj.<span class="property">alpha</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">zIndex</span> = obj.<span class="property">zIndex</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)(oTag)</span><br><span class="line">            oTag.<span class="property">offsetWidth</span> = aA[i].<span class="property">offsetWidth</span>;</span><br><span class="line">            oTag.<span class="property">offsetHeight</span> = aA[i].<span class="property">offsetHeight</span>;</span><br><span class="line">            mcList.<span class="title function_">push</span>(oTag);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">sineCosine</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="title function_">positionAll</span>();</span><br><span class="line">        (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">update</span>();</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>, <span class="number">40</span>);</span><br><span class="line">        &#125;)();</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a, b, c = <span class="number">0</span>;</span><br><span class="line">            a = (<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseY, -size), size) / radius) * tspeed;</span><br><span class="line">            b = (-<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(-mouseX, -size), size) / radius) * tspeed;</span><br><span class="line">            lasta = a;</span><br><span class="line">            lastb = b;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(a) &lt;= <span class="number">0.01</span> &amp;&amp; <span class="title class_">Math</span>.<span class="title function_">abs</span>(b) &lt;= <span class="number">0.01</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">sineCosine</span>(a, b, c);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> rx1 = mcList[i].<span class="property">cx</span>;</span><br><span class="line">                <span class="keyword">var</span> ry1 = mcList[i].<span class="property">cy</span> * ca + mcList[i].<span class="property">cz</span> * (-sa);</span><br><span class="line">                <span class="keyword">var</span> rz1 = mcList[i].<span class="property">cy</span> * sa + mcList[i].<span class="property">cz</span> * ca;</span><br><span class="line">                <span class="keyword">var</span> rx2 = rx1 * cb + rz1 * sb;</span><br><span class="line">                <span class="keyword">var</span> ry2 = ry1;</span><br><span class="line">                <span class="keyword">var</span> rz2 = rx1 * (-sb) + rz1 * cb;</span><br><span class="line">                <span class="keyword">var</span> rx3 = rx2 * cc + ry2 * (-sc);</span><br><span class="line">                <span class="keyword">var</span> ry3 = rx2 * sc + ry2 * cc;</span><br><span class="line">                <span class="keyword">var</span> rz3 = rz2;</span><br><span class="line">                mcList[i].<span class="property">cx</span> = rx3;</span><br><span class="line">                mcList[i].<span class="property">cy</span> = ry3;</span><br><span class="line">                mcList[i].<span class="property">cz</span> = rz3;</span><br><span class="line">                per = d / (d + rz3);</span><br><span class="line">                mcList[i].<span class="property">x</span> = (howElliptical * rx3 * per) - (howElliptical * <span class="number">2</span>);</span><br><span class="line">                mcList[i].<span class="property">y</span> = ry3 * per;</span><br><span class="line">                mcList[i].<span class="property">scale</span> = per;</span><br><span class="line">                <span class="keyword">var</span> alpha = per;</span><br><span class="line">                alpha = (alpha - <span class="number">0.6</span>) * (<span class="number">10</span> / <span class="number">6</span>);</span><br><span class="line">                mcList[i].<span class="property">alpha</span> = alpha * alpha * alpha - <span class="number">0.2</span>;</span><br><span class="line">                mcList[i].<span class="property">zIndex</span> = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">100</span> - <span class="title class_">Math</span>.<span class="title function_">floor</span>(mcList[i].<span class="property">cz</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">doPosition</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">depthSort</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> aTmp = [];</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aA.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                aTmp.<span class="title function_">push</span>(aA[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            aTmp.<span class="title function_">sort</span>(</span><br><span class="line">                <span class="keyword">function</span>(<span class="params">vItem1, vItem2</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &gt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vItem1.<span class="property">cz</span> &lt; vItem2.<span class="property">cz</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aTmp.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                aTmp[i].<span class="property">style</span>.<span class="property">zIndex</span> = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">positionAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> phi = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> theta = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> max = mcList.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (distr) &#123;</span><br><span class="line">                    phi = <span class="title class_">Math</span>.<span class="title function_">acos</span>(-<span class="number">1</span> + (<span class="number">2</span> * (i + <span class="number">1</span>) - <span class="number">1</span>) / max);</span><br><span class="line">                    theta = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(max * <span class="title class_">Math</span>.<span class="property">PI</span>) * phi;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    phi = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">                    theta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                mcList[i].<span class="property">cx</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">                mcList[i].<span class="property">cy</span> = radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) * <span class="title class_">Math</span>.<span class="title function_">sin</span>(phi);</span><br><span class="line">                mcList[i].<span class="property">cz</span> = radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(phi);</span><br><span class="line">                aA[i].<span class="property">style</span>.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                aA[i].<span class="property">style</span>.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span> - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">doPosition</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> l = oDiv.<span class="property">offsetWidth</span> / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> t = oDiv.<span class="property">offsetHeight</span> / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mcList.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mcList[i].<span class="property">on</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> aAs = aA[i].<span class="property">style</span>;</span><br><span class="line">                <span class="keyword">if</span> (mcList[i].<span class="property">alpha</span> &gt; <span class="number">0.1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                        aAs.<span class="property">display</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (aAs.<span class="property">display</span> != <span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">                        aAs.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                aAs.<span class="property">left</span> = mcList[i].<span class="property">cx</span> + l - mcList[i].<span class="property">offsetWidth</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                aAs.<span class="property">top</span> = mcList[i].<span class="property">cy</span> + t - mcList[i].<span class="property">offsetHeight</span> / <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                aAs.<span class="property">filter</span> = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * mcList[i].<span class="property">alpha</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">                aAs.<span class="property">zIndex</span> = mcList[i].<span class="property">zIndex</span>;</span><br><span class="line">                aAs.<span class="property">opacity</span> = mcList[i].<span class="property">alpha</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">sineCosine</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">            sa = <span class="title class_">Math</span>.<span class="title function_">sin</span>(a * dtr);</span><br><span class="line">            ca = <span class="title class_">Math</span>.<span class="title function_">cos</span>(a * dtr);</span><br><span class="line">            sb = <span class="title class_">Math</span>.<span class="title function_">sin</span>(b * dtr);</span><br><span class="line">            cb = <span class="title class_">Math</span>.<span class="title function_">cos</span>(b * dtr);</span><br><span class="line">            sc = <span class="title class_">Math</span>.<span class="title function_">sin</span>(c * dtr);</span><br><span class="line">            cc = <span class="title class_">Math</span>.<span class="title function_">cos</span>(c * dtr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="文件改动"><a href="#文件改动" class="headerlink" title="文件改动"></a>文件改动</h2><h3 id="左侧导航全站友链显示头像"><a href="#左侧导航全站友链显示头像" class="headerlink" title="左侧导航全站友链显示头像"></a>左侧导航全站友链显示头像</h3><p>在 <code>aside.php</code> 文件中大约 213 行左右 “使用links插件，输出全站友链” 位置下方修改代码，在 php 代码中的 a 标签内加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">\</span>&quot;<span class="attr">width:18px</span>;<span class="attr">height:18px</span>;<span class="attr">border-radius:50</span>%;<span class="attr">margin-right:3px</span>;\&quot; <span class="attr">src</span>=<span class="string">\</span>&quot;&#123;<span class="attr">image</span>&#125;\&quot; /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="左、右下角彩色版权声明"><a href="#左、右下角彩色版权声明" class="headerlink" title="左、右下角彩色版权声明"></a>左、右下角彩色版权声明</h3><p>找到主题文件夹下 <code>handsomecomponentfooter.php</code> 文件，找到下方这段代码（在文件中可按 Ctrl+F 进行查找）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Powered by <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.typecho.org&quot;</span>&gt;</span>Typecho<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> | </span><br><span class="line">Theme by <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span><span class="attr">href</span>=<span class="string">&quot;https://www.ihewro.com/archives/489/&quot;</span>&gt;</span>handsome<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改为:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper bg-light&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--右下角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;pull-right hidden-xs text-ellipsis&quot;</span>&gt;</span></span><br><span class="line">        <span class="meta">&lt;?php $this-&gt;options-&gt;BottomInfo(); ?&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.typecho.org&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Typecho&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>Powered by<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-blue&quot;</span>&gt;</span>Typecho<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> | <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.ihewro.com/archives/489/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Handsome&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>Theme by<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-green&quot;</span>&gt;</span>Handsome<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--左下角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-ellipsis&quot;</span>&gt;</span></span><br><span class="line">        <span class="meta">&lt;?php $this-&gt;options-&gt;BottomleftInfo(); ?&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://blog.kecho.top&quot;</span> <span class="attr">title</span>=<span class="string">&quot;©2022 Kecho&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>Copyright<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-blue&quot;</span>&gt;</span>©2022 Kecho<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> | <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;github-badge&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.beian.miit.gov.cn&quot;</span> <span class="attr">title</span>=<span class="string">&quot;赣ICP备 20004569号-1&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-subject&quot;</span>&gt;</span>备案号<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge-value bg-green&quot;</span>&gt;</span>赣ICP备 20004569号-1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code>中添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*最底部版权声明样式*/</span></span><br><span class="line"><span class="selector-class">.github-badge</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#abbac3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-subject</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4d4d4d</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-value</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">6px</span> <span class="number">4px</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-blue</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#007ec6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-orange</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffa500</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-red</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f00</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-green</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3bca6e</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-purple</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ab34e9</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="网站顶部彩虹条"><a href="#网站顶部彩虹条" class="headerlink" title="网站顶部彩虹条"></a>网站顶部彩虹条</h3><p>第一步：将以下代码添加到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 CSS</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gundongtiao</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: gundongtiao <span class="number">1s</span> infinite linear;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>:<span class="number">9999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> gundongtiao&#123;</span><br><span class="line">    <span class="number">0%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>, <span class="number">#34aadc</span>, <span class="number">#5856d6</span>, <span class="number">#ff2d55</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">20%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>, <span class="number">#34aadc</span>,<span class="number">#5856d6</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">40%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>, <span class="number">#34aadc</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">60%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#34aadc</span>,<span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>, <span class="number">#007aff</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">80%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#007aff</span>,<span class="number">#34aadc</span>,<span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>, <span class="number">#5ac8fa</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span> <span class="built_in">linear-gradient</span>(to left, <span class="number">#5ac8fa</span>,<span class="number">#007aff</span>,<span class="number">#34aadc</span>,<span class="number">#5856d6</span>,<span class="number">#ff2d55</span>,<span class="number">#4cd964</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：在网站文件 <code>footer.php</code> (文件路径为 <code>handsome/component/footer.php</code> )末尾添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gundongtiao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加访客-3D-地球"><a href="#添加访客-3D-地球" class="headerlink" title="添加访客 3D 地球"></a>添加访客 3D 地球</h3><p>找到 <code>handsome/component/sidebar.php</code> 下方代码位置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;li <span class="class"><span class="keyword">class</span>=&quot;<span class="title">list</span>-<span class="title">group</span>-<span class="title">item</span> <span class="title">text</span>-<span class="title">second</span>&quot;&gt;&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">blog</span>-<span class="title">info</span>-<span class="title">icons</span>&quot;&gt; &lt;<span class="title">i</span> <span class="title">data</span>-<span class="title">feather</span>=&quot;<span class="title">activity</span>&quot;&gt;&lt;/<span class="title">i</span>&gt;&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="class">     &lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">badge</span> </span></span><br><span class="line"><span class="class">        <span class="title">pull</span>-<span class="title">right</span>&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> <span class="title">Utils</span>::<span class="title">getLatestTime</span>($<span class="title">this</span>); ?&gt;&lt;/<span class="title">span</span>&gt;&lt;?<span class="title">php</span> <span class="title">_me</span>(&quot;最后活动&quot;) ?&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;/<span class="title">section</span>&gt; </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;!--插入位置--&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"> &lt;?<span class="title">php</span> <span class="title">endif</span>; ?&gt;</span></span><br><span class="line"><span class="class"> &lt;?<span class="title">php</span> <span class="title">if</span> ($<span class="title">this</span>-&gt;<span class="title">options</span>-&gt;<span class="title">adContentSidebar</span> != &quot;&quot;): ?&gt;</span></span><br><span class="line"><span class="class"> &lt;!--广告位置--&gt;</span></span><br><span class="line"><span class="class">     &lt;<span class="title">section</span> <span class="title">id</span>=&quot;<span class="title">a_d_sidebar</span>&quot; <span class="title">class</span>=&quot;<span class="title">widget</span> <span class="title">widget_categories</span> <span class="title">wrapper</span>-<span class="title">md</span> <span class="title">clear</span>&quot;&gt;</span></span><br><span class="line"><span class="class">         &lt;<span class="title">h5</span> <span class="title">class</span>=&quot;<span class="title">widget</span>-<span class="title">title</span> <span class="title">m</span>-<span class="title">t</span>-<span class="title">none</span> <span class="title">text</span>-<span class="title">md</span>&quot;&gt;&lt;?<span class="title">php</span> <span class="title">_me</span>(&quot;广告&quot;) ?&gt;&lt;/<span class="title">h5</span>&gt;</span></span><br><span class="line"><span class="class">         &lt;?<span class="title">php</span> $<span class="title">this</span>-&gt;<span class="title">options</span>-&gt;<span class="title">adContentSidebar</span>(); ?&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">section</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;?<span class="title">php</span> <span class="title">endif</span>; ?&gt;</span></span><br></pre></td></tr></table></figure><p>插入以下代码：（可以修改其中的 <code>height</code> 来调整大小）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--自定义访客地球--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;tag_cloud-2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;widget widget_tag_cloud wrapper-md clear&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title m-t-none text-md&quot;</span>&gt;</span>访客统计<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;visitors&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tags l-h-2x&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:185px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后去 <a class="link"   href="https://www.revolvermaps.com/" >RevolverMaps<i class="fas fa-external-link-alt"></i></a> 找自己喜欢的地球样式，并且把它给的 JavaScript 代码复制下来，然后将复制的代码进行转义，即将 <code>/</code> 改为 <code>\/</code> ，将 <code>&quot;</code> 改为 <code>\&quot;</code>，将转义后的代码和下方代码合并在一起，放到后台<code>主题外观设置</code>-<code>开发者设置</code>-<code>自定义 JavaScript</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(document).<span class="title function_ invoke__">ready</span>(function()&#123;</span><br><span class="line">$(<span class="string">&quot;#visitors&quot;</span>).<span class="title function_ invoke__">append</span>(<span class="string">&quot;这里是您在 RevolverMaps 地球网站上复制的转义后的代码&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(document).<span class="title function_ invoke__">on</span>(<span class="string">&#x27;pjax:complete&#x27;</span>, function() &#123;</span><br><span class="line">$(<span class="string">&#x27;#morphing&#x27;</span>).<span class="title function_ invoke__">tooltip</span>(<span class="string">&#x27;show&#x27;</span>); </span><br><span class="line">$(<span class="string">&quot;#visitors&quot;</span>).<span class="title function_ invoke__">append</span>(<span class="string">&quot;这里是您在 RevolverMaps 地球网站上复制的转义后的代码&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果你不会转义，也可以直接使用我转义好的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">\</span>&quot;<span class="attr">text</span>/<span class="attr">javascript</span>\&quot; <span class="attr">src</span>=<span class="string">\</span>&quot;//<span class="attr">rf.revolvermaps.com</span>/<span class="attr">0</span>/<span class="attr">0</span>/<span class="attr">8.js</span>?<span class="attr">i</span>=<span class="string">51frwlq4tnv&amp;m</span>=<span class="string">0&amp;c</span>=<span class="string">ff0000&amp;cr1</span>=<span class="string">ffffff&amp;f</span>=<span class="string">arial&amp;l</span>=<span class="string">33&amp;bv</span>=<span class="string">65\</span>&quot; <span class="attr">async</span>=<span class="string">\</span>&quot;<span class="attr">async</span>\&quot;&gt;</span>&lt;\/script&gt;</span><br></pre></td></tr></table></figure><h3 id="评论框打字特效"><a href="#评论框打字特效" class="headerlink" title="评论框打字特效"></a>评论框打字特效</h3><p>详见 <a class="link"   href="https://moe.best/modification/js-input-effect.html" >网页输入框打字特效<i class="fas fa-external-link-alt"></i></a></p><h3 id="左侧导航栏输出优化"><a href="#左侧导航栏输出优化" class="headerlink" title="左侧导航栏输出优化"></a>左侧导航栏输出优化</h3><p>详见 <a class="link"   href="https://blog.baoshuo.ren/post/handsome-leftbar-layout/" >Handsome 魔改教程：左侧边栏输出优化<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://www.ihewro.com/archives/489/&quot; &gt;Handsome&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt; 是一款收费的 Typecho 主题，本文给出的 Handsome 主题美化教程收集自网络，部分内容可能随着主题更新而失效。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://kechocy.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Handsome" scheme="https://kechocy.github.io/tags/Handsome/"/>
    
    <category term="Typecho" scheme="https://kechocy.github.io/tags/Typecho/"/>
    
  </entry>
  
</feed>
